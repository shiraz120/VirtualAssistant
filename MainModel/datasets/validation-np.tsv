S4GKVLWt	send an email to someone when i leave work	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on not param:location:Location == location:work => @com.gmail.send_email
G-1384p	rain send an email alert	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @com.gmail.send_email	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @com.gmail.send_email
R-250179p	text john on gmail when i am approaching LOCATION_0	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on param:location:Location == LOCATION_0 => @com.gmail.send_email param:to:Entity(tt:email_address) = " john " ^^tt:username
R-374506p	send an email to john when i am near home	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on param:location:Location == location:home => @com.gmail.send_email param:to:Entity(tt:email_address) = " john " ^^tt:username
S-386864p	get a phone call when nest cam detects motion	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => @org.thingpedia.builtin.thingengine.phone.call
378535p	when motion is detected , set my nest thermostat to NUMBER_0 c	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => @thermostat.set_target_temperature param:value:Measure(C) = NUMBER_0 unit:C
yMnbLQh5	if nest cam senses motion before TIME_0 then turn on smartthings light	monitor ( ( @security-camera.current_event ) filter @org.thingpedia.builtin.thingengine.builtin.get_time { param:time:Date <= TIME_0 } ) => @light-bulb.set_power param:power:Enum(on,off) = enum:on
406019p	nest cam detects sound or motion send sms text to android phone	monitor ( ( @security-camera.current_event ) filter param:has_sound:Boolean == true or param:has_motion:Boolean == true ) => @org.thingpedia.builtin.thingengine.phone.send_sms
S-buFhfPmi	call my phone when nest cam detects motion	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => @org.thingpedia.builtin.thingengine.phone.call
S-YrJAMsqv	call my phone when nest detects sound	monitor ( ( @security-camera.current_event ) filter param:has_sound:Boolean == true ) => @org.thingpedia.builtin.thingengine.phone.call
gVLFvkXR	set the temperature on my nest thermostat when i am close to home	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on param:location:Location == location:home => @thermostat.set_target_temperature
R-184053p	when i exit LOCATION_0 set my nest thermostat to NUMBER_0 c	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on not param:location:Location == LOCATION_0 => @thermostat.set_target_temperature param:value:Measure(C) = NUMBER_0 unit:C
R-gLUBaV2q	automatically adjust my nest thermostat down when the temperature outside rises above NUMBER_0 c	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:C => @thermostat.set_target_temperature	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:C => @thermostat.set_target_temperature
S-187020p	if temperature drops below NUMBER_0 f on nest thermostat, send me an email .	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) <= NUMBER_0 unit:F => @com.gmail.send_email
R-mBHqv46y	automatically adjust my nest thermostat when the temperature drops below NUMBER_0 c	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) <= NUMBER_0 unit:C => @thermostat.set_target_temperature	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) <= NUMBER_0 unit:C => @thermostat.set_target_temperature	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) <= NUMBER_0 unit:C => @thermostat.set_target_temperature
179669p	post a daily weather report at TIME_0 in a slack channel	( attimer time = TIME_0 ) => ( @org.thingpedia.weather.current ) => @com.slack.send on param:message:String = event	( attimer time = TIME_0 ) => ( @org.thingpedia.weather.current param:location:Location = location:current_location ) => @com.slack.send on param:message:String = event
215984p	automatically post nasa image of the day to a slack channel	monitor ( @gov.nasa.apod ) => @com.slack.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
289189p	have twitter mentions automatically posted in slack	monitor ( ( @com.twitter.search ) filter param:in_reply_to:Entity(tt:username) == undefined ) => @com.slack.send on param:message:String = event	monitor ( ( @com.twitter.home_timeline ) filter param:in_reply_to:Entity(tt:username) == undefined ) => @com.slack.send on param:message:String = event
180886p	let the team know when it rains on slack	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @com.slack.send on param:message:String = event	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @com.slack.send on param:message:String = event
NEqyVa2x	post to a channel when new articles appear in the rss feed i choose	monitor ( @org.thingpedia.rss.get_post ) => @com.slack.send on param:message:String = event
R-cMCd2Huw	post to slack when a tweet matches stanford	monitor ( ( @com.twitter.search ) filter param:text:String =~ " stanford " ) => @com.slack.send on param:message:String = event	monitor ( ( @com.twitter.home_timeline ) filter param:text:String =~ " stanford " ) => @com.slack.send on param:message:String = event
179433p	post to slack when i arrive at work .	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on param:location:Location == location:work => @com.slack.send
I-177129p	post incoming tagged sms messages to a slack channel	monitor ( ( @org.thingpedia.builtin.thingengine.phone.sms ) filter param:message:String =~ undefined ) => @com.slack.send on param:message:String = param:message:String
R-307806p	post a message to my slack group when i receive an email from EMAIL_ADDRESS_0	monitor ( ( @com.gmail.inbox ) filter param:sender_address:Entity(tt:email_address) == EMAIL_ADDRESS_0 ) on new param:email_id:Entity(com.gmail:email_id) => @com.slack.send
195670p	search for pig gifs and automatically post in a slack channel	now => @com.giphy.get param:tag:Entity(tt:hashtag) = " pig " ^^tt:hashtag => @com.slack.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
180907p	post github issues in slack , automatically !	monitor ( @com.github.get_issue ) => @com.slack.send on param:message:String = event
177145p	when i share a new video , post to a slack channel	monitor ( @com.youtube.list_videos ) => @com.slack.send on param:message:String = event
rMGL5p8m	when i post to instagram , share the photo on slack	monitor ( @com.instagram.get_pictures ) => @com.slack.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
pC4ixN3P	automatically share my new videos in a slack channel	monitor ( @com.youtube.list_videos ) => @com.slack.send on param:message:String = event
225882p	post nasa astronomy picture of the day to slack channel	now => @gov.nasa.apod => @com.slack.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
179436p	post to slack when i leave work	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on not param:location:Location == location:work => @com.slack.send
187361p	send new tumblr posts to slack	monitor ( @com.tumblr.new_text ) => @com.slack.send on param:message:String = event
R-315468p	if new tweet by john . then tweet the text automatically to my twitter account	monitor ( ( @com.twitter.home_timeline ) filter param:author:Entity(tt:username) == " john " ^^tt:username ) => @com.twitter.post on param:status:String = param:text:String	monitor ( ( @com.twitter.search ) filter param:author:Entity(tt:username) == " john " ^^tt:username ) => @com.twitter.post on param:status:String = param:text:String
32219p	share my blog posts on tumblr to my facebook page	monitor ( @com.tumblr.new_text ) => @com.facebook.post on param:status:String = param:body:String
375373p	save a photo on onedrive when detect movement	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => @com.live.onedrive.upload_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R-rM26WU5Y	share instagram photos on twitter only when i include hashtag pig in the caption	monitor ( ( @com.instagram.get_pictures ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " pig " ^^tt:hashtag ) => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
HK8uHfjA	tweet my new tumblr posts	monitor ( @com.tumblr.new_text ) => @com.twitter.post on param:status:String = event
R-xcHFiVvR	get an email when there 's a new tweet from john	monitor ( ( @com.twitter.home_timeline ) filter param:author:Entity(tt:username) == " john " ^^tt:username ) => @com.gmail.send_email	monitor ( ( @com.twitter.search ) filter param:author:Entity(tt:username) == " john " ^^tt:username ) => @com.gmail.send_email
R-132947p	when i 'm close to home , dm john on twitter	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on param:location:Location == location:home => @com.twitter.send_direct_message param:to:Entity(tt:username) = " john " ^^tt:username
Ms3CGPS2	automatically post my tweets on linkedin when i tag them with HASHTAG_0	monitor ( ( @com.twitter.my_tweets ) filter param:hashtags:Array(Entity(tt:hashtag)) contains HASHTAG_0 ) => @com.linkedin.share on param:status:String = param:text:String
R-212564p	email me when john uses hashtag pig on twitter	monitor ( ( @com.twitter.home_timeline ) filter param:author:Entity(tt:username) == " john " ^^tt:username and param:hashtags:Array(Entity(tt:hashtag)) contains " pig " ^^tt:hashtag ) => @com.gmail.send_email	monitor ( ( @com.twitter.search ) filter param:author:Entity(tt:username) == " john " ^^tt:username and param:hashtags:Array(Entity(tt:hashtag)) contains " pig " ^^tt:hashtag ) => @com.gmail.send_email
95776p	posts tweet daily at TIME_0 with the current weather .	( attimer time = TIME_0 ) => ( @org.thingpedia.weather.current ) => @com.twitter.post on param:status:String = event	( attimer time = TIME_0 ) => ( @org.thingpedia.weather.current param:location:Location = location:current_location ) => @com.twitter.post on param:status:String = event
110512p	blink my hue lights when it starts to rain outside	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @light-bulb.alert_long	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @light-bulb.alert_long
S-1475p	if the temperature drops below freezing , receive an email reminding me to cover my plants	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) <= undefined => @com.gmail.send_email param:message:String = " cover my plants "	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) <= undefined => @com.gmail.send_email param:message:String = " cover my plants "
ATR9EuDh	blink lights when it starts snowing	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:snowy => @light-bulb.alert_long	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:snowy => @light-bulb.alert_long
327235p	turn off my thermostat when outside temperature is above NUMBER_0 c	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:C => @thermostat.set_hvac_mode param:mode:Enum(heat,cool,heat_cool,off) = enum:off	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:C => @thermostat.set_hvac_mode param:mode:Enum(heat,cool,heat_cool,off) = enum:off
G-me4gXpt3	if snowing send a text	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:snowy => @org.thingpedia.builtin.thingengine.phone.send_sms	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:snowy => @org.thingpedia.builtin.thingengine.phone.send_sms
gWXMHwzr	if it is cloudy outside , turn on my lights	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:cloudy => @light-bulb.set_power param:power:Enum(on,off) = enum:on	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:cloudy => @light-bulb.set_power param:power:Enum(on,off) = enum:on
1389143	when i receive an email from work	monitor ( ( @com.gmail.inbox ) filter param:sender_address:String == " work " ^^tt:username ) on new param:email_id:Entity(com.gmail:email_id) => notify
1389144	when i receive an e-mail from jim send an alert .	monitor ( ( @com.gmail.inbox ) filter param:sender_address:String == " jim " ^^tt:username ) on new param:email_id:Entity(com.gmail:email_id) => notify
1389167	when receive email from chel get message .	monitor ( ( @com.gmail.inbox ) filter param:sender_address:String == " chel " ^^tt:username ) on new param:email_id:Entity(com.gmail:email_id) => notify
1389177	when i walk for NUMBER_0 steps , do turn off my lg tv	edge ( monitor ( @com.fitbit.getsteps ) ) on param:steps:Number >= NUMBER_0 => @com.lg.tv.webos2.set_power param:power:Enum(on,off) = enum:off
1389178	when : receive an email on gmail , get : the latest email	( monitor ( @com.gmail.inbox ) on new param:email_id:Entity(com.gmail:email_id) ) => ( @com.gmail.inbox ) => notify
1389182	when my weight updates do post on facebook saying pounds lost	monitor ( @com.fitbit.getbody ) on new param:weight:Measure(kg) => @com.facebook.post param:status:String = " pounds lost "
1389184	when my weight is NUMBER_0 pounds , do mute my lg tv	edge ( monitor ( @com.fitbit.getbody ) ) on param:weight:Measure(kg) == NUMBER_0 unit:lb => @com.lg.tv.webos2.mute
1389187	when my bmi is NUMBER_0 do post on facebook saying hit weight loss goal	edge ( monitor ( @com.fitbit.getbody ) ) on param:bmi:Number == NUMBER_0 => @com.facebook.post param:status:String = " hit weight loss goal "
1389193	when i receive an email marked as important , send an email to my boss with subject urgent with message please review .	monitor ( @com.gmail.inbox param:is_important:Boolean = true ) on new param:email_id:Entity(com.gmail:email_id) => @com.gmail.send_email param:message:String = " please review " param:subject:String = " urgent " param:to:Entity(tt:email_address) = " boss " ^^tt:username
1389194	when i receive an email do play a song	monitor ( @com.gmail.inbox ) on new param:email_id:Entity(com.gmail:email_id) => @org.thingpedia.bluetooth.speaker.a2dp.play_music
1389199	when i receive an sms from julia , set my phone to vibrate .	monitor ( ( @org.thingpedia.builtin.thingengine.phone.sms ) filter param:sender:Entity(tt:phone_number) == " julia " ^^tt:username ) => @org.thingpedia.builtin.thingengine.phone.set_ringer param:mode:Enum(normal,vibrate,silent) = enum:vibrate
1389202	whenever my bmi is over NUMBER_0 , tweet i need to get more exercise .	edge ( monitor ( @com.fitbit.getbody ) ) on param:bmi:Number >= NUMBER_0 => @com.twitter.post param:status:String = " i need to get more exercise "
1389204	when i recieve a message on omlet send a message on omlet to greg saying hello	monitor ( @me.omlet.chat.messages param:from_me:Boolean = false ) => @me.omlet.chat.send_to param:message:String = " hello " param:to:Entity(tt:username) = " greg " ^^tt:username
1389205	when a youtube channel i follow updates , send me an email on gmail with the title as subject line .	monitor ( @com.youtube.list_videos ) => @com.gmail.send_email on param:subject:String = param:title:String
1389207	when i receive email from school do send to EMAIL_ADDRESS_0	monitor ( ( @com.gmail.inbox ) filter param:sender_address:String == " school " ^^tt:username ) on new param:email_id:Entity(com.gmail:email_id) => @com.gmail.send_email param:to:Entity(tt:email_address) = EMAIL_ADDRESS_0
1389209	when receiving emails from my business auto reply to all inquirys	monitor ( @com.gmail.inbox ) on new param:email_id:Entity(com.gmail:email_id) => @com.gmail.reply on param:email_id:Entity(com.gmail:email_id) = param:email_id:Entity(com.gmail:email_id)
1389215	whenever i receive an email , send back an email to the sender -lrb- auto reply -rrb-	monitor ( @com.gmail.inbox ) on new param:email_id:Entity(com.gmail:email_id) => @com.gmail.reply on param:email_id:Entity(com.gmail:email_id) = param:email_id:Entity(com.gmail:email_id)
1389223	when it 's TIME_0 every day , get nasa 's astronomy picture of the day and post it on my tumblr .	( attimer time = TIME_0 ) => ( @gov.nasa.apod ) => @com.tumblr.blog.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
1435876	if i receive an email , play a tune .	monitor ( @com.gmail.inbox ) on new param:email_id:Entity(com.gmail:email_id) => @org.thingpedia.bluetooth.speaker.a2dp.play_music
1435900	get a puppy video from youtube and post it to my facebook page	now => @com.youtube.search_videos param:query:String = " puppy " => @com.facebook.post on param:status:String = event
1435907	when i receive an sms send an sms to them saying i am driving	monitor ( @org.thingpedia.builtin.thingengine.phone.sms ) => @org.thingpedia.builtin.thingengine.phone.send_sms param:message:String = " i am driving " on param:to:Entity(tt:phone_number) = param:sender:Entity(tt:phone_number)
1435912	when raining -lrb- per weather api -rrb- , do send me an email	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @com.gmail.send_email	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @com.gmail.send_email
1435915	whenever stock price of bbb changes send an email to EMAIL_ADDRESS_0	monitor ( @com.yahoo.finance.get_stock_quote param:stock_id:Entity(tt:stock_id) = " bbb " ^^tt:stock_id ) => @com.gmail.send_email param:to:Entity(tt:email_address) = EMAIL_ADDRESS_0
1435918	when an event on my calendar begins send a sms to me saying what event	edge ( monitor ( @org.thingpedia.icalendar.list_events ) ) on param:status:Enum(scheduled,upcoming,started,ended) == enum:started => @org.thingpedia.builtin.thingengine.phone.send_sms on param:message:String = event
1435920	when my weight is NUMBER_0 , make a post on facebook saying i did it !	edge ( monitor ( @com.fitbit.getbody ) ) on param:weight:Measure(kg) == NUMBER_0 unit:kg => @com.facebook.post param:status:String = " i did it ! "
1435924	whenever a new slack message from ccc is posted send an email to EMAIL_ADDRESS_0	monitor ( ( @com.slack.channel_history ) filter param:sender:Entity(tt:username) == " ccc " ^^tt:username ) => @com.gmail.send_email param:to:Entity(tt:email_address) = EMAIL_ADDRESS_0
1435927	when stock dividens for wmt changes , do send a message on slack to channel investors saying the stock price has changed	monitor ( @com.yahoo.finance.get_stock_quote param:stock_id:Entity(tt:stock_id) = " wmt " ^^tt:stock_id ) => @com.slack.send param:channel:Entity(tt:hashtag) = " investors " ^^tt:hashtag param:message:String = " the stock price has changed "
1435928	when : i receive a picture/text on omlet do : send an sms to -lrb- my cellphone number -rrb- saying a new picture/text was received from omlet	monitor ( @me.omlet.chat.messages param:from_me:Boolean = false ) => @org.thingpedia.builtin.thingengine.phone.send_sms param:message:String = " a new picture/text was received from omlet "
1435930	if i receive an email from linkedin , send me a text message .	( monitor ( ( @com.gmail.inbox ) filter param:sender_address:String == " linkedin " ^^tt:username ) on new param:email_id:Entity(com.gmail:email_id) ) => ( @org.thingpedia.builtin.thingengine.phone.sms ) => notify
1435931	when new nest activity happens get sms alert	monitor ( @security-camera.current_event ) => @org.thingpedia.builtin.thingengine.phone.send_sms
1435934	i receive an sms from PHONE_NUMBER_0 set my phone to vibrate	monitor ( ( @org.thingpedia.builtin.thingengine.phone.sms ) filter param:sender:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => @org.thingpedia.builtin.thingengine.phone.set_ringer param:mode:Enum(normal,vibrate,silent) = enum:vibrate
1435944	when therealdonaldtrump tweets , send me an email alert .	monitor ( ( @com.twitter.home_timeline ) filter param:author:Entity(tt:username) == " therealdonaldtrump " ^^tt:username ) => @com.gmail.send_email	monitor ( ( @com.twitter.search ) filter param:author:Entity(tt:username) == " therealdonaldtrump " ^^tt:username ) => @com.gmail.send_email
1435945	when my location changes send an sms to PHONE_NUMBER_0 saying i 'm leaving .	monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) => @org.thingpedia.builtin.thingengine.phone.send_sms param:message:String = " i 'm leaving " param:to:Entity(tt:phone_number) = PHONE_NUMBER_0	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on not param:location == location:current_location => @org.thingpedia.builtin.thingengine.phone.send_sms param:message = " i 'm leaving " param:to = PHONE_NUMBER_0
1435946	whenever user ddd tweets send an email to EMAIL_ADDRESS_0	monitor ( ( @com.twitter.home_timeline ) filter param:author:Entity(tt:username) == " ddd " ^^tt:username ) => @com.gmail.send_email param:to:Entity(tt:email_address) = EMAIL_ADDRESS_0	monitor ( ( @com.twitter.search ) filter param:author:Entity(tt:username) == " ddd " ^^tt:username ) => @com.gmail.send_email param:to:Entity(tt:email_address) = EMAIL_ADDRESS_0
1435947	when location is home set phone to ring	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on param:location:Location == location:home => @org.thingpedia.builtin.thingengine.phone.set_ringer param:mode:Enum(normal,vibrate,silent) = enum:normal
1435948	when its TIME_0 , call work phone number	attimer time = TIME_0 => @org.thingpedia.builtin.thingengine.phone.call param:number:Entity(tt:phone_number) = " work " ^^tt:username
1435951	when my weight is above NUMBER_0 lbs , search for healthy snacks on bing .	( edge ( monitor ( @com.fitbit.getbody ) ) on param:weight:Measure(kg) >= NUMBER_0 unit:lb ) => ( @com.bing.web_search param:query:String = " healthy snacks " ) => notify
1435954	when it 's holiday in us , send an email to dad with subject hey dad , time to chill	monitor ( ( @org.thingpedia.holidays.get_holidays param:country:Entity(tt:country) = " us " ^^tt:country ) filter param:date:Date >= start_of unit:day and param:date:Date <= end_of unit:day ) => @com.gmail.send_email param:message:String = " hey dad , time to chill " param:to:Entity(tt:email_address) = " dad " ^^tt:username
1435956	if i receive an email , automate reply .	monitor ( @com.gmail.inbox ) on new param:email_id:Entity(com.gmail:email_id) => @com.gmail.reply on param:email_id:Entity(com.gmail:email_id) = param:email_id:Entity(com.gmail:email_id)
1435957	when my security camera detects a person do : call number	monitor ( ( @security-camera.current_event ) filter param:has_person:Boolean == true ) => @org.thingpedia.builtin.thingengine.phone.call
1435958	when i post a picture on instagram , get my latest posted pics .	( monitor ( @com.instagram.get_pictures ) ) => ( @com.instagram.get_pictures ) => notify
1435959	when the temperature on my thermostat updates run the a/c	monitor ( @thermostat.get_temperature ) => @thermostat.set_hvac_mode	monitor ( @thermostat.get_temperature ) => @thermostat.set_hvac_mode param:mode = enum:cool
1435960	when i receive an email from stephanie douglas , do reply with i love you	monitor ( ( @com.gmail.inbox ) filter param:sender_address:String == " stephanie douglas " ^^tt:username ) on new param:email_id:Entity(com.gmail:email_id) => @com.gmail.reply param:subject:String = " i love you " on param:email_id:Entity(com.gmail:email_id) = param:email_id:Entity(com.gmail:email_id)
1435962	when : my security camera detects a motion do : call number	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => @org.thingpedia.builtin.thingengine.phone.call
1435964	when the weather is sunny , get me the sunset/sunrise times for my location .	( edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:sunny ) => ( @org.thingpedia.weather.sunrise param:location:Location = location:current_location ) => notify	( edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:sunny ) => ( @org.thingpedia.weather.sunrise param:location:Location = location:current_location ) => notify
1435965	when leaving work location post to facebook it 's play time	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on not param:location:Location == location:work => @com.facebook.post param:status:String = " it 's play time "
1435969	when message from sally on slack do reply hello	monitor ( ( @com.slack.channel_history ) filter param:sender:Entity(tt:username) == " sally " ^^tt:username ) => @com.slack.send param:message:String = " hello " on param:channel:Entity(tt:hashtag) = param:channel:Entity(tt:hashtag)
1435970	when phone number PHONE_NUMBER_0 , then forward the message to my sister .	monitor ( ( @org.thingpedia.builtin.thingengine.phone.sms ) filter param:sender:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => @org.thingpedia.builtin.thingengine.phone.send_sms param:to:Entity(tt:phone_number) = " sister " ^^tt:username on param:message:String = param:message:String
1435971	when i receive an e-mail from jim , send jim an sms message saying thanks , i got the e-mail	monitor ( ( @com.gmail.inbox ) filter param:sender_address:String == " jim " ^^tt:username ) on new param:email_id:Entity(com.gmail:email_id) => @org.thingpedia.builtin.thingengine.phone.send_sms param:message:String = " thanks , i got the e-mail " param:to:Entity(tt:phone_number) = " jim " ^^tt:username
1435972	when it 's raining at location LOCATION_0 , get the weather in LOCATION_1	( edge ( monitor ( @org.thingpedia.weather.current param:location:Location = LOCATION_0 ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining ) => ( @org.thingpedia.weather.current param:location:Location = LOCATION_1 ) => notify
1435976	check temperature on thermostat , if it is below NUMBER_0 change it to NUMBER_1	now => ( @thermostat.get_temperature ) filter param:value:Measure(C) <= NUMBER_0 unit:F => @thermostat.set_target_temperature param:value:Measure(C) = NUMBER_1 unit:F
1435977	if i receive an email , instantly reply .	monitor ( @com.gmail.inbox ) on new param:email_id:Entity(com.gmail:email_id) => @com.gmail.reply on param:email_id:Entity(com.gmail:email_id) = param:email_id:Entity(com.gmail:email_id)
1435978	when an event on my calendar begins get my calendar events	( edge ( monitor ( @org.thingpedia.icalendar.list_events ) ) on param:status:Enum(scheduled,upcoming,started,ended) == enum:started ) => ( @org.thingpedia.icalendar.list_events ) => notify
1435981	when i upload an instagram picture get the last NUMBER_0 pictures .	( monitor ( @com.instagram.get_pictures ) ) => ( @com.instagram.get_pictures param:count:Number = NUMBER_0 ) => notify
1435982	when i walked for NUMBER_0 steps send a sms to me saying i walked NUMBER_1 steps	edge ( monitor ( @com.fitbit.getsteps ) ) on param:steps:Number >= NUMBER_0 => @org.thingpedia.builtin.thingengine.phone.send_sms param:message:String = " saying i walked NUMBER_1 steps "
1435984	when user maxinewaters tweets , do tweet USERNAME_0 yasssss queen	monitor ( ( @com.twitter.home_timeline ) filter param:author:Entity(tt:username) == " maxinewaters " ^^tt:username ) => @com.twitter.post param:status:String = " USERNAME_0 yasssss queen "	monitor ( ( @com.twitter.search ) filter param:author:Entity(tt:username) == " maxinewaters " ^^tt:username ) => @com.twitter.post param:status:String = " USERNAME_0 yasssss queen "
1435985	when an asteroid passes earth , post nasa 's picture of the day .	( monitor ( @gov.nasa.asteroid ) ) => ( @gov.nasa.apod ) => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
1435986	do make meme , post tumblr	now => @com.imgflip.generate => @com.tumblr.blog.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
1435989	when an even on my calendar begins play music	edge ( monitor ( @org.thingpedia.icalendar.list_events ) ) on param:status:Enum(scheduled,upcoming,started,ended) == enum:started => @org.thingpedia.bluetooth.speaker.a2dp.play_music
1435992	when file created on onedrive notify me by lowering volume on speaker to NUMBER_0 %	monitor ( @com.live.onedrive.list_files param:order_by:Enum(created_time_increasing,created_time_decreasing,modified_time_increasing,modified_time_decreasing,name_increasing,name_decreasing) = enum:created_time_decreasing ) on new param:file_id:Entity(com.live.onedrive:file_id) => @org.thingpedia.bluetooth.speaker.a2dp.set_volume param:percent:Number = NUMBER_0
ac26	turn my phone to vibrate mode when an event orgnized by monica starts	edge ( monitor ( ( @org.thingpedia.icalendar.list_events ) filter param:organizer:String =~ " monica " ) ) on param:status:Enum(scheduled,upcoming,started,ended) == enum:started => @org.thingpedia.builtin.thingengine.phone.set_ringer param:mode:Enum(normal,vibrate,silent) = enum:vibrate
ac30	when monica sends me an email , notify me on slack	monitor ( ( @com.gmail.inbox ) filter param:sender_address:Entity(tt:email_address) == " monica " ^^tt:username ) on new param:email_id:Entity(com.gmail:email_id) => @com.slack.send on param:message:String = event
ac33	if today is a holiday , mute my phone	now => ( @org.thingpedia.holidays.get_holidays ) filter param:date:Date >= start_of unit:day and param:date:Date <= end_of unit:day => @org.thingpedia.builtin.thingengine.phone.set_ringer param:mode:Enum(normal,vibrate,silent) = enum:silent
ac36	if i receive an sms containing verification code , forward it to my slack	monitor ( ( @org.thingpedia.builtin.thingengine.phone.sms ) filter param:message:String =~ " verification code " ) => @com.slack.send on param:message:String = param:message:String
ac37	when i leave home , text monica i 'm coming	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on not param:location:Location == location:home => @org.thingpedia.builtin.thingengine.phone.send_sms param:message:String = " i 'm coming " param:to:Entity(tt:phone_number) = " monica " ^^tt:username
ac38	when i reach work , text monica i 'm on my way up	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on param:location:Location == location:work => @org.thingpedia.builtin.thingengine.phone.send_sms param:message:String = " i 'm on my way up " param:to:Entity(tt:phone_number) = " monica " ^^tt:username
ac44	show me all new york times headline in chinese	now => ( @com.nytimes.get_front_page ) join ( @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " chinese " ^^tt:iso_lang_code ) on param:text:String = param:title:String => notify
ac45	mute my phone when get to work	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on param:location:Location == location:work => @org.thingpedia.builtin.thingengine.phone.set_ringer param:mode:Enum(normal,vibrate,silent) = enum:silent
ac48	when there is a new video by mkbhd , shoot an email	monitor ( ( @com.youtube.list_videos ) filter param:channel_title:String =~ " mkbhd " ) => @com.gmail.send_email
ac49	when there is a new issue created on github , comment this repository has been deprecated .	monitor ( @com.github.get_issue ) => @com.github.comment_issue param:body:String = " this repository has been deprecated " on param:issue_number:Number = param:number:Number
ac73	find me my last NUMBER_0 lo-fi instagram pictures	now => ( @com.instagram.get_pictures param:count:Number = NUMBER_0 ) filter param:filter:Entity(com.instagram:filter) == " lo-fi " ^^com.instagram:filter => notify
ac75	when it 's snowing outside crank up the thermostat to NUMBER_0 degrees	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:snowy => @thermostat.set_target_temperature param:value:Measure(C) = NUMBER_0 unit:F	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:snowy => @thermostat.set_target_temperature param:value:Measure(C) = NUMBER_0 unit:F
ac80	order me a large latte when i get to work	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on param:location:Location == location:work => @org.thingpedia.demo.coffee.order param:beverage:Enum(drip_coffee,espresso,latte,flat_white,mocha,caramel_mocha,white_mocha,macchiato,caramel_macchiato,cappuccino,americano) = enum:latte param:size:Enum(small,medium,large) = enum:large
ac81	auto translate all new washington post articles to italian	( monitor ( @com.washingtonpost.get_article ) ) => ( @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " italian " ^^tt:iso_lang_code ) on param:text:String = param:title:String => notify
ac87	pick a random number between NUMBER_0 and NUMBER_1 , and if it 's exactly NUMBER_2 , say critical hit !	now => ( @org.thingpedia.builtin.thingengine.builtin.get_random_between param:high:Number = NUMBER_1 param:low:Number = NUMBER_0 ) filter param:random:Number == NUMBER_2 => @org.thingpedia.builtin.thingengine.builtin.say param:message:String = " critical hit ! "
ac93	when the washington post has a politics article about trump , pull up realdonaldtrump 's tweets	( monitor ( ( @com.washingtonpost.get_article param:section:Enum(politics,opinions,local,sports,national,world,business,lifestyle) = enum:politics ) filter param:title:String =~ " trump " ) ) => ( ( @com.twitter.search ) filter param:author:Entity(tt:username) == " realdonaldtrump " ^^tt:username ) => notify
ac94	when there is a new xkcd out , post it to twitter , caption and everything	monitor ( @com.xkcd.get_comic ) => @com.twitter.post_picture on param:caption:String = event on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
ac97	retweet everything from almondstanford	monitor ( ( @com.twitter.home_timeline ) filter param:author:Entity(tt:username) == " almondstanford " ^^tt:username ) => @com.twitter.retweet on param:tweet_id:Entity(com.twitter:id) = param:tweet_id:Entity(com.twitter:id)	monitor ( ( @com.twitter.search ) filter param:author:Entity(tt:username) == " almondstanford " ^^tt:username ) => @com.twitter.retweet on param:tweet_id:Entity(com.twitter:id) = param:tweet_id:Entity(com.twitter:id)
ac98	automatically copy everything from almondstanford from twitter to facebook	monitor ( ( @com.twitter.home_timeline ) filter param:author:Entity(tt:username) == " almondstanford " ^^tt:username ) => @com.facebook.post on param:status:String = param:text:String	monitor ( ( @com.twitter.search ) filter param:author:Entity(tt:username) == " almondstanford " ^^tt:username ) => @com.facebook.post on param:status:String = param:text:String
ac99	when i total more than NUMBER_0 steps in a day , post on facebook about it	edge ( monitor ( @com.fitbit.getsteps ) ) on param:steps:Number >= NUMBER_0 => @com.facebook.post on param:status:String = event
ep3	list all the work emails	now => ( @com.gmail.inbox ) filter param:labels:Array(String) contains " work " ^^tt:hashtag => notify
ep20	please order me a medium latte , no sugar	now => @org.thingpedia.demo.coffee.order param:beverage:Enum(drip_coffee,espresso,latte,flat_white,mocha,caramel_mocha,white_mocha,macchiato,caramel_macchiato,cappuccino,americano) = enum:latte param:extras:Enum(none,milk,sugar,both) = enum:none param:size:Enum(small,medium,large) = enum:medium
ep28	what 's happening in the world today according to the wall street journal ?	now => ( @com.wsj.get param:section:Enum(opinions,world_news,us_business,markets,technology,lifestyle) = enum:world_news ) filter param:updated:Date >= start_of unit:day => notify
ep75	show me my meetings today	now => ( @org.thingpedia.icalendar.list_events ) filter param:start_date:Date >= start_of unit:day and param:start_date:Date <= end_of unit:day => notify
ep76	show me today 's appointments	now => ( @org.thingpedia.icalendar.list_events ) filter param:start_date:Date >= start_of unit:day and param:start_date:Date <= end_of unit:day => notify
ep77	do i have any meeting today ?	now => ( @org.thingpedia.icalendar.list_events ) filter param:start_date:Date >= start_of unit:day and param:start_date:Date <= end_of unit:day => notify
ep78	do i have any meeting next week ?	now => ( @org.thingpedia.icalendar.list_events ) filter param:start_date:Date >= end_of unit:week and param:start_date:Date <= end_of unit:week + 1 unit:week => notify
ep83	list my upcoming calendar events	now => ( @org.thingpedia.icalendar.list_events ) filter param:status:Enum(scheduled,upcoming,started,ended) == enum:upcoming => notify
ep84	list calendar events in progress	now => ( @org.thingpedia.icalendar.list_events ) filter param:status:Enum(scheduled,upcoming,started,ended) == enum:started => notify
ep99	translate a sentence to english	now => @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " english " ^^tt:iso_lang_code => notify
R120499-0	if i receive a tweet with hashtag bdaycelebrationscontinu then send a message on slack	monitor ( ( @com.twitter.home_timeline ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " bdaycelebrationscontinu " ^^tt:hashtag ) => @com.slack.send	monitor ( ( @com.twitter.search ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " bdaycelebrationscontinu " ^^tt:hashtag ) => @com.slack.send
R120532-0	if there are new photo posts on tumblr then post picture on tumblr	monitor ( @com.tumblr.new_photo ) => @com.tumblr.blog.post_picture
R120540-0	translate to hill mari	now => @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " hill mari " ^^tt:iso_lang_code => notify
R120586-0	send me wall street journal technology on gmail	monitor ( @com.wsj.get param:section:Enum(opinions,world_news,us_business,markets,technology,lifestyle) = enum:technology ) => @com.gmail.send_email on param:message:String = event	now => @com.wsj.get param:section:Enum(opinions,world_news,us_business,markets,technology,lifestyle) = enum:technology => @com.gmail.send_email on param:message:String = event
R120654-0	make a meme then send it on slack	now => @com.imgflip.generate => @com.slack.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R120888-0	translate from kyrgyz	now => @com.yandex.translate.translate param:source_language:Entity(tt:iso_lang_code) = " kyrgyz " ^^tt:iso_lang_code => notify
R120955-0	post all my tweets to facebook	monitor ( @com.twitter.my_tweets ) => @com.facebook.post on param:status:String = event
R120996-0	flash the hue if there is a dangerous asteroid nearby	edge ( monitor ( @gov.nasa.asteroid ) ) on param:is_dangerous:Boolean == true => @light-bulb.alert_long
R120998-0	flash the lights when the temperature is above NUMBER_0 c	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) >= NUMBER_0 unit:C => @light-bulb.alert_long
R120999-0	every day upload all nasa apod pictures to onedrive	( timer base = now , interval = 1 unit:day ) => ( @gov.nasa.apod ) => @com.live.onedrive.upload_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121009-0	send phdcomics to slack	now => @com.phdcomics.get_post => @com.slack.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121013-0	if my thermostat is less than 0 f call emergency	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) <= 0 unit:F => @org.thingpedia.builtin.thingengine.phone.call_emergency
R121027-0	send xkcd to slack	now => @com.xkcd.get_comic => @com.slack.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121042-0	tweet wall street journal headlines	monitor ( @com.wsj.get param:section:Enum(opinions,world_news,us_business,markets,technology,lifestyle) = enum:opinions ) => @com.twitter.post on param:status:String = event
R121049-0	if the weather is colder than NUMBER_0 c then set my thermostat to NUMBER_1 c	now => ( @org.thingpedia.weather.current ) filter param:temperature:Measure(C) <= NUMBER_0 unit:C => @thermostat.set_target_temperature param:value:Measure(C) = NUMBER_1 unit:C	now => ( @org.thingpedia.weather.current param:location:Location = location:current_location ) filter param:temperature:Measure(C) <= NUMBER_0 unit:C => @thermostat.set_target_temperature param:value:Measure(C) = NUMBER_1 unit:C
R121076-0	tweet if the temperature is less than NUMBER_0 f	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) <= NUMBER_0 unit:F => @com.twitter.post	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) <= NUMBER_0 unit:F => @com.twitter.post	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) <= NUMBER_0 unit:F => @com.twitter.post
R121084-0	post on tumblr if the temperature is more than NUMBER_0 f	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) >= NUMBER_0 unit:F => @com.tumblr.blog.post_text	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:F => @com.tumblr.blog.post_text	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:F => @com.tumblr.blog.post_text
R121085-0	share a link on linkedin if the temperature is more than NUMBER_0 f	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) >= NUMBER_0 unit:F => @com.linkedin.share	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:F => @com.linkedin.share	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:F => @com.linkedin.share
R121086-0	disco lights if the temperature is more than NUMBER_0 f	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) >= NUMBER_0 unit:F => @light-bulb.color_loop	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:F => @light-bulb.color_loop	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:F => @light-bulb.color_loop
R121087-0	disco lights if the temperature is less than NUMBER_0 c	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) <= NUMBER_0 unit:C => @light-bulb.color_loop	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) <= NUMBER_0 unit:F => @light-bulb.color_loop	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) <= NUMBER_0 unit:F => @light-bulb.color_loop
R121088-0	disco lights if the temperature is exactly NUMBER_0 c	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) == NUMBER_0 unit:C => @light-bulb.color_loop	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) == NUMBER_0 unit:F => @light-bulb.color_loop	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) == NUMBER_0 unit:F => @light-bulb.color_loop
R121103-0	if someone tweets with hashtag foreverjuntas then post it on facebook	monitor ( ( @com.twitter.home_timeline ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " foreverjuntas " ^^tt:hashtag ) => @com.facebook.post on param:status:String = event	monitor ( ( @com.twitter.search ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " foreverjuntas " ^^tt:hashtag ) => @com.facebook.post on param:status:String = event
R121113-0	monitor if the temperature is between NUMBER_0 f and NUMBER_1 f	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) <= NUMBER_1 unit:F and param:value:Measure(C) >= NUMBER_0 unit:F => notify
R121115-0	if the temperature is between NUMBER_0 f and NUMBER_1 f then flash the light	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) <= NUMBER_1 unit:F and param:value:Measure(C) >= NUMBER_0 unit:F => @light-bulb.alert_long
R121118-0	if i post a picture on instagram with hashtag amethist then post it on twitter	monitor ( ( @com.instagram.get_pictures ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " amethist " ^^tt:hashtag ) => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121120-0	if i post a picture on instagram at home then post it on twitter	monitor ( ( @com.instagram.get_pictures ) filter param:location:Location == location:home ) => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121138-0	post my instagram pictures to slack	now => @com.instagram.get_pictures => @com.slack.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121139-0	post all my instagram pictures to slack	now => @com.instagram.get_pictures => @com.slack.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121140-0	send a nasa picture to slack every day at TIME_0	( attimer time = TIME_0 ) => ( @gov.nasa.apod ) => @com.slack.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121177-0	send cat pictures on gmail	now => @com.thecatapi.get => @com.gmail.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121210-0	send me new articles from the wall street journal us business section on gmail	monitor ( @com.wsj.get param:section:Enum(opinions,world_news,us_business,markets,technology,lifestyle) = enum:us_business ) => @com.gmail.send_email on param:message:String = event
R121217-0	send cat picture on gmail	now => @com.thecatapi.get => @com.gmail.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121238-0	send cat pictures	now => @com.thecatapi.get => @com.gmail.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121240-0	translate from danish to danish	now => @com.yandex.translate.translate param:source_language:Entity(tt:iso_lang_code) = " danish " ^^tt:iso_lang_code param:target_language:Entity(tt:iso_lang_code) = " danish " ^^tt:iso_lang_code => notify
R121240-1	translate from dutch to kannada	now => @com.yandex.translate.translate param:source_language:Entity(tt:iso_lang_code) = " dutch " ^^tt:iso_lang_code param:target_language:Entity(tt:iso_lang_code) = " kannada " ^^tt:iso_lang_code => notify
R121282-0	send cat pictures on slack	now => @com.thecatapi.get => @com.slack.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121287-0	send me wall street journal opinions on gmail	now => @com.wsj.get param:section:Enum(opinions,world_news,us_business,markets,technology,lifestyle) = enum:opinions => @com.gmail.send_email on param:message:String = event
R121344-0	send me new articles from the wall street journal technology section on gmail	monitor ( @com.wsj.get param:section:Enum(opinions,world_news,us_business,markets,technology,lifestyle) = enum:technology ) => @com.gmail.send_email on param:message:String = event
R121433-10	translate from greek to greek	now => @com.yandex.translate.translate param:source_language:Entity(tt:iso_lang_code) = " greek " ^^tt:iso_lang_code param:target_language:Entity(tt:iso_lang_code) = " greek " ^^tt:iso_lang_code => notify
R121516-0	auto reply to my emails	monitor ( @com.gmail.inbox ) on new param:email_id:Entity(com.gmail:email_id) => @com.gmail.reply on param:email_id:Entity(com.gmail:email_id) = param:email_id:Entity(com.gmail:email_id)
R121527-0	if the weather is colder than NUMBER_0 c then set my thermostat to NUMBER_1 f	now => ( @org.thingpedia.weather.current ) filter param:temperature:Measure(C) <= NUMBER_0 unit:C => @thermostat.set_target_temperature param:value:Measure(C) = NUMBER_1 unit:F	now => ( @org.thingpedia.weather.current param:location:Location = location:current_location ) filter param:temperature:Measure(C) <= NUMBER_0 unit:C => @thermostat.set_target_temperature param:value:Measure(C) = NUMBER_1 unit:F	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature <= NUMBER_0 unit:C => @thermostat.set_target_temperature param:value = NUMBER_1 unit:F	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature <= NUMBER_0 unit:C => @thermostat.set_target_temperature param:value = NUMBER_1 unit:F
R121531-0	automatically post my tweets on facebook when i include hashtag jackfowler	monitor ( ( @com.twitter.my_tweets ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " jackfowler " ^^tt:hashtag ) => @com.facebook.post on param:status:String = event
R121536-0	disco lights if the humidity is more than NUMBER_0 %	edge ( monitor ( @thermostat.get_humidity ) ) on param:value:Number >= NUMBER_0 => @light-bulb.color_loop
R121537-0	if the temperature is less than NUMBER_0 c then set volume on my speaker to NUMBER_1 %	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) <= NUMBER_0 unit:C => @org.thingpedia.bluetooth.speaker.a2dp.set_volume param:percent:Number = NUMBER_1	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) <= NUMBER_0 unit:C => @org.thingpedia.bluetooth.speaker.a2dp.set_volume param:percent:Number = NUMBER_1	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) <= NUMBER_0 unit:C => @org.thingpedia.bluetooth.speaker.a2dp.set_volume param:percent:Number = NUMBER_1
R121538-0	if the thermostat says less than NUMBER_0 c then set volume on my speaker to NUMBER_1 %	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) <= NUMBER_0 unit:C => @org.thingpedia.bluetooth.speaker.a2dp.set_volume param:percent:Number = NUMBER_1
R122915-0	every day at TIME_0 send snapshot of security camera on gmail	( attimer time = TIME_0 ) => ( @security-camera.current_event ) => @com.gmail.send_email
R123046-0	notify me if the camera detects motion and a person	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true and param:has_person:Boolean == true ) => notify
R123047-0	notify me if the camera detects motion and sound	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true and param:has_sound:Boolean == true ) => notify
R123054-0	when my camera detects something post it on tumblr	monitor ( @security-camera.current_event ) => @com.tumblr.blog.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R123055-0	when my camera detects motion post it on tumblr	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => @com.tumblr.blog.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R123056-0	when my camera detects a person post it on tumblr	monitor ( ( @security-camera.current_event ) filter param:has_person:Boolean == true ) => @com.tumblr.blog.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R123060-0	when my camera detects motion send it on slack	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => @com.slack.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R123070-0	send a message on omlet when the security camera detects motion	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => @me.omlet.chat.send_to on param:message:String = event
R123071-0	send a message on omlet when the security camera detects a person	monitor ( ( @security-camera.current_event ) filter param:has_person:Boolean == true ) => @me.omlet.chat.send_to on param:message:String = event
R123079-0	send nest snapshot on slack	now => @security-camera.current_event => @com.slack.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R123117-0	translate new wall street journal opinion posts	( monitor ( @com.wsj.get param:section:Enum(opinions,world_news,us_business,markets,technology,lifestyle) = enum:opinions ) ) => ( @com.yandex.translate.translate ) on param:text:String = event => notify
R123118-0	translate new wall street journal technology posts	( monitor ( @com.wsj.get param:section:Enum(opinions,world_news,us_business,markets,technology,lifestyle) = enum:technology ) ) => ( @com.yandex.translate.translate ) on param:text:String = event => notify
R123120-0	if new post in wall street journal technology then translate it	( monitor ( @com.wsj.get param:section:Enum(opinions,world_news,us_business,markets,technology,lifestyle) = enum:technology ) ) => ( @com.yandex.translate.translate ) on param:text:String = event => notify
R123121-0	if new post in wall street journal world news then translate it	( monitor ( @com.wsj.get param:section:Enum(opinions,world_news,us_business,markets,technology,lifestyle) = enum:world_news ) ) => ( @com.yandex.translate.translate ) on param:text:String = event => notify
R127890-0	get the washington post and translate it to xhosa	( monitor ( @com.washingtonpost.get_article ) ) => ( @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " xhosa " ^^tt:iso_lang_code ) on param:text:String = event => notify
R131799-0	play something from youtube on my tv	now => @com.youtube.search_videos => @com.lg.tv.webos2.play_url on param:url:Entity(tt:url) = param:video_url:Entity(tt:url)
R131800-0	search youtube then play youtube on tv	now => @com.youtube.search_videos => @com.lg.tv.webos2.play_url on param:url:Entity(tt:url) = param:video_url:Entity(tt:url)
R135853-0	if there is a new xkcd send the link to slack rashes	monitor ( @com.xkcd.get_comic ) => @com.slack.send param:channel:Entity(tt:hashtag) = " rashes " ^^tt:hashtag on param:message:String = param:link:Entity(tt:url)
R135854-0	send an hourly cat on slack to soberness	( timer base = now , interval = 1 unit:h ) => ( @com.thecatapi.get ) => @com.slack.send_picture param:channel:Entity(tt:hashtag) = " soberness " ^^tt:hashtag on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R135855-0	every DURATION_0 send a cat on slack to enculturated	( timer base = now , interval = DURATION_0 ) => ( @com.thecatapi.get ) => @com.slack.send_picture param:channel:Entity(tt:hashtag) = " enculturated " ^^tt:hashtag on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R135862-0	send new washington post the fix articles on slack to creepiness	monitor ( @com.washingtonpost.get_blog_post param:section:Enum(the_fix,politics,powerpost,fact_checker,world_views,compost,the_plum_line,post_partisan,post_everything,right_turn,capital_weather_gang,morning_mix,wonkblog) = enum:the_fix ) => @com.slack.send param:channel:Entity(tt:hashtag) = " creepiness " ^^tt:hashtag on param:message:String = event
R135863-0	send new washington post world views articles on slack to relaxations	monitor ( @com.washingtonpost.get_blog_post param:section:Enum(the_fix,politics,powerpost,fact_checker,world_views,compost,the_plum_line,post_partisan,post_everything,right_turn,capital_weather_gang,morning_mix,wonkblog) = enum:world_views ) => @com.slack.send param:channel:Entity(tt:hashtag) = " relaxations " ^^tt:hashtag on param:message:String = event
R141672-0	translate washington post to czech	( monitor ( @com.washingtonpost.get_article ) ) => ( @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " czech " ^^tt:iso_lang_code ) on param:text:String = event => notify
R153902-0	share new security camera notifications on linkedin	monitor ( @security-camera.current_event ) => @com.linkedin.share on param:status:String = event
R341549-0	if the weather is raining , send a gmail	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @com.gmail.send_email	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @com.gmail.send_email
R341550-0	if it 's raining , send a gmail	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @com.gmail.send_email	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @com.gmail.send_email
R341552-0	if it 's rains , send a gmail	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @com.gmail.send_email	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @com.gmail.send_email
R341553-0	if it rains , send a gmail	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @com.gmail.send_email	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @com.gmail.send_email
R359841-0	get uber price and send it on sms	now => @com.uber.price_estimate => @org.thingpedia.builtin.thingengine.phone.send_sms on param:message:String = event
R359843-0	get how far uber is and send it via sms	now => @com.uber.price_estimate => @org.thingpedia.builtin.thingengine.phone.send_sms on param:message:String = event
R359846-0	play some video from youtube on my tv	now => @com.youtube.search_videos => @com.lg.tv.webos2.play_url on param:url:Entity(tt:url) = param:video_url:Entity(tt:url)
R359848-0	translate washington post headlines to swedish	( monitor ( @com.washingtonpost.get_article ) ) => ( @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " swedish " ^^tt:iso_lang_code ) on param:text:String = param:title:String => notify
R359906-0	set my room temperature to NUMBER_0 when i reach home	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on param:location == location:home => @thermostat.set_target_temperature param:value = NUMBER_0 unit:F
R383463-0	generate a meme then post it on facebook	now => @com.imgflip.generate => @com.facebook.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R1435507-0	post my tweets on facebook	now => @com.twitter.my_tweets => @com.facebook.post on param:status:String = event
R1448703-0	get my calendar events when i move to LOCATION_0	( edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on param:location:Location == LOCATION_0 ) => ( @org.thingpedia.icalendar.list_events ) => notify
R1459786-0	every hour send the weather on gmail	( timer base = now , interval = 1 unit:h ) => ( @org.thingpedia.weather.current ) => @com.gmail.send_picture on param:message:String = event	( timer base = now , interval = 1 unit:h ) => ( @org.thingpedia.weather.current param:location:Location = location:current_location ) => @com.gmail.send_picture on param:message:String = event
R1465775-0	say something	now => @org.thingpedia.builtin.thingengine.builtin.say
R1470592-0	show a popup	now => @org.thingpedia.builtin.thingengine.builtin.say
R1474052-0	list channels in youtube category sports then send a message on slack to channel honey-flowing saying channel title	now => @com.youtube.channels_by_category param:category_id:Enum(best_of_youtube,recommended,paid,music,comedy,film_and_entertainment,gaming,beauty_and_fashion,from_tv,automotive,animation,sports,diy,tech,science,cooking,causes,news_and_politics,lifestyle) = enum:sports => @com.slack.send param:channel:Entity(tt:hashtag) = " honey-flowing " ^^tt:hashtag on param:message:String = param:title:String
R1515486-0	generate a meme then send it to slack	now => @com.imgflip.generate => @com.slack.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R1515487-0	generate a meme then send it to slack grummeter	now => @com.imgflip.generate => @com.slack.send_picture param:channel:Entity(tt:hashtag) = " grummeter " ^^tt:hashtag on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R1515843-0	when i go home set the thermostat to NUMBER_0 f	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on param:location:Location == location:home => @thermostat.set_target_temperature param:value:Measure(C) = NUMBER_0 unit:F
R1515955-0	send a gif on slack	now => @com.giphy.get => @com.slack.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R1520113-0	send tepiombakshortmovie gif to gmail	now => @com.giphy.get param:tag:Entity(tt:hashtag) = " tepiombakshortmovie " ^^tt:hashtag => @com.gmail.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R1520125-0	generate a hide the pain harold meme and send it to slack	now => @com.imgflip.generate param:template:Entity(imgflip:meme_id) = " hide the pain harold " ^^imgflip:meme_id => @com.slack.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R1520850-0	send a tagged gif to slack	now => @com.giphy.get => @com.slack.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R1545152-0	if weather rains send email	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @com.gmail.send_email	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @com.gmail.send_email
R1642812-0	show me news articles published in the last DURATION_0 from new york times	now => ( @com.nytimes.get_front_page ) filter param:updated:Date >= now - DURATION_0 => notify
R1646227-0	at TIME_0 get a cat and send it to EMAIL_ADDRESS_0	( attimer time = TIME_0 ) => ( @com.thecatapi.get ) => @com.gmail.send_picture param:to:Entity(tt:email_address) = EMAIL_ADDRESS_0 on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R1647474-0	translate wall street journal headlines to korean	now => ( @com.wsj.get ) join ( @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " korean " ^^tt:iso_lang_code ) on param:text:String = param:title:String => notify
R1647478-0	get wall street journal headlines translated to italian	now => ( @com.wsj.get param:section:Enum(opinions,world_news,us_business,markets,technology,lifestyle) = enum:markets ) join ( @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " italian " ^^tt:iso_lang_code ) on param:text:String = param:title:String => notify
R1647480-0	show me wall street journal headlines translated to finnish	now => ( @com.wsj.get param:section:Enum(opinions,world_news,us_business,markets,technology,lifestyle) = enum:markets ) join ( @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " finnish " ^^tt:iso_lang_code ) on param:text:String = param:title:String => notify
R1648245-0	get washington post opinions then translate the headline to hebrew	now => ( @com.washingtonpost.get_article param:section:Enum(politics,opinions,local,sports,national,world,business,lifestyle) = enum:opinions ) join ( @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " hebrew " ^^tt:iso_lang_code ) on param:text:String = param:title:String => notify
R1650786-0	translate bing searches to esperanto	now => ( @com.bing.web_search ) join ( @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " esperanto " ^^tt:iso_lang_code ) on param:text:String = event => notify
R1691792-0	translate websites matching foo	now => ( @com.bing.web_search param:query:String = " foo " ) join ( @com.yandex.translate.translate ) on param:text:String = param:title:String => notify
R13722307-0	when the new york times has an article about china , translate the headline to chinese , then email it to my friend	( monitor ( ( @com.nytimes.get_front_page ) filter param:title:String =~ " china " ) ) => ( @com.yandex.translate.translate ) on param:text:String = param:title:String => @com.gmail.send_email on param:message:String = param:translated_text:String
R15252553-0	retweet everything from rioferdy5	monitor ( ( @com.twitter.home_timeline ) filter param:author:Entity(tt:username) == " rioferdy5 " ^^tt:username ) => @com.twitter.retweet on param:tweet_id:Entity(com.twitter:id) = param:tweet_id:Entity(com.twitter:id)	monitor ( ( @com.twitter.search ) filter param:author:Entity(tt:username) == " rioferdy5 " ^^tt:username ) => @com.twitter.retweet on param:tweet_id:Entity(com.twitter:id) = param:tweet_id:Entity(com.twitter:id)
R15252554-0	retweet everything with hashtag kendallschmidtisperfect	monitor ( ( @com.twitter.search ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " kendallschmidtisperfect " ^^tt:hashtag ) => @com.twitter.retweet on param:tweet_id:Entity(com.twitter:id) = param:tweet_id:Entity(com.twitter:id)	monitor ( ( @com.twitter.home_timeline ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " kendallschmidtisperfect " ^^tt:hashtag ) => @com.twitter.retweet on param:tweet_id:Entity(com.twitter:id) = param:tweet_id:Entity(com.twitter:id)
R15252555-0	every time someones tweets with moddytmo , retweet it	monitor ( ( @com.twitter.search ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " moddytmo " ^^tt:hashtag ) => @com.twitter.retweet on param:tweet_id:Entity(com.twitter:id) = param:tweet_id:Entity(com.twitter:id)	monitor ( ( @com.twitter.home_timeline ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " moddytmo " ^^tt:hashtag ) => @com.twitter.retweet on param:tweet_id:Entity(com.twitter:id) = param:tweet_id:Entity(com.twitter:id)
R16085081-0	translate my emails to italian	now => ( @com.gmail.inbox ) join ( @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " italian " ^^tt:iso_lang_code ) on param:text:String = param:subject:String => notify
120539	notify me when event begins containing immunized	edge ( monitor ( ( @org.thingpedia.icalendar.list_events ) filter param:summary:String =~ " immunized " ) ) on param:status:Enum(scheduled,upcoming,started,ended) == enum:started => notify
120550	notify me if i receive an email from EMAIL_ADDRESS_0 where subject contains late notice	monitor ( ( @com.gmail.inbox ) filter param:sender_address:Entity(tt:email_address) == EMAIL_ADDRESS_0 and param:subject:String =~ " late notice " ) on new param:email_id:Entity(com.gmail:email_id) => notify
120785	notify me if i receive an email on gmail from EMAIL_ADDRESS_0 where subject contains new payment received	monitor ( ( @com.gmail.inbox ) filter param:sender_address:Entity(tt:email_address) == EMAIL_ADDRESS_0 and param:subject:String =~ " new payment received " ) on new param:email_id:Entity(com.gmail:email_id) => notify
120809	notify me if i receive an important email on gmail from EMAIL_ADDRESS_0 with label please review	monitor ( ( @com.gmail.inbox param:is_important:Boolean = true ) filter param:labels:Array(String) contains " please review " and param:sender_address:Entity(tt:email_address) == EMAIL_ADDRESS_0 ) on new param:email_id:Entity(com.gmail:email_id) => notify
121016	if i receive an email on gmail then reply to it saying accelerated personal conflagration	monitor ( @com.gmail.inbox ) on new param:email_id:Entity(com.gmail:email_id) => @com.gmail.reply param:subject:String = " accelerated personal conflagration " on param:email_id:Entity(com.gmail:email_id) = param:email_id:Entity(com.gmail:email_id)
121045	tweet the new work if the thermostat says more than NUMBER_0 c	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) >= NUMBER_0 unit:C => @com.twitter.post param:status:String = " the new work "
121075	tweet girls if the temperature is less than NUMBER_0 f	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) <= NUMBER_0 unit:F => @com.twitter.post param:status:String = " girls "	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) <= NUMBER_0 unit:F => @com.twitter.post param:status:String = " girls "	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) <= NUMBER_0 unit:F => @com.twitter.post param:status:String = " girls "
121080	tweet pretty hot in here if the temperature is more than NUMBER_0 f	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) >= NUMBER_0 unit:F => @com.twitter.post param:status:String = " pretty hot in here "	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:F => @com.twitter.post param:status:String = " pretty hot in here "	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:F => @com.twitter.post param:status:String = " pretty hot in here "
121081	post on facebook global warming if the temperature is more than NUMBER_0 f	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) >= NUMBER_0 unit:F => @com.facebook.post param:status:String = " global warming "	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:F => @com.facebook.post param:status:String = " global warming "	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:F => @com.facebook.post param:status:String = " global warming "
121082	post on tumblr dude is hot if the temperature is more than NUMBER_0 f	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) >= NUMBER_0 unit:F => @com.tumblr.blog.post_text param:title:String = " dude is hot "	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:F => @com.tumblr.blog.post_text param:title:String = " dude is hot "	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:F => @com.tumblr.blog.post_text param:title:String = " dude is hot "
121100	if someone tweets with hashtag beyonceimpersonation then tweet yass queen	monitor ( ( @com.twitter.home_timeline ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " beyonceimpersonation " ^^tt:hashtag ) => @com.twitter.post param:status:String = " yass queen "	monitor ( ( @com.twitter.search ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " beyonceimpersonation " ^^tt:hashtag ) => @com.twitter.post param:status:String = " yass queen "
121150	if someone commits to github and the message contains bug fix then flash the lights	monitor ( ( @com.github.get_commit ) filter param:message:String =~ " bug fix " ) => @light-bulb.alert_long
121420	notify me if i receive an important email on gmail where subject contains job application	monitor ( ( @com.gmail.inbox param:is_important:Boolean = true ) filter param:subject:String =~ " job application " ) on new param:email_id:Entity(com.gmail:email_id) => notify
121512	flash the lights if i receive an sms that contains you have won	monitor ( ( @org.thingpedia.builtin.thingengine.phone.sms ) filter param:message:String =~ " you have won " ) => @light-bulb.alert_long
121515	if i receive a dm on twitter then reply to it saying sorry i am busy today	monitor ( @com.twitter.direct_messages ) => @com.twitter.send_direct_message param:message:String = " sorry i am busy today " on param:to:Entity(tt:username) = param:sender:Entity(tt:username)
123072	turn off my security camera when i receive an omlet message saying turn off camera	monitor ( ( @me.omlet.chat.messages param:from_me:Boolean = false ) filter param:message:String =~ " turn off camera " ) => @security-camera.set_power param:power:Enum(on,off) = enum:off
123073	turn on my security camera when i receive an omlet message saying turn on camera	monitor ( ( @me.omlet.chat.messages param:from_me:Boolean = false ) filter param:message:String =~ " turn on camera " ) => @security-camera.set_power param:power:Enum(on,off) = enum:on
131801	play saturday night live from youtube on my tv	now => @com.youtube.search_videos param:query:String = " saturday night live " => @com.lg.tv.webos2.play_url on param:url:Entity(tt:url) = param:video_url:Entity(tt:url)
135858	send puppies images to slack coworkers	now => @com.bing.image_search param:query:String = " puppies " => @com.slack.send_picture param:channel:Entity(tt:hashtag) = " coworkers " ^^tt:hashtag on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
135909	if i receive or send music command on omlet play something on my bluetooth speaker	monitor ( ( @me.omlet.chat.messages ) filter param:message:String =~ " music command " ) => @org.thingpedia.bluetooth.speaker.a2dp.play_music
135921	if the capital weather gang has an article with title hurricane incoming share the link on linkedin	monitor ( ( @com.washingtonpost.get_blog_post param:section:Enum(the_fix,politics,powerpost,fact_checker,world_views,compost,the_plum_line,post_partisan,post_everything,right_turn,capital_weather_gang,morning_mix,wonkblog) = enum:capital_weather_gang ) filter param:title:String =~ " hurricane incoming " ) => @com.linkedin.share on param:status:String = param:link:Entity(tt:url)
1448819	search presidential debate on youtube then play it on my tv	now => @com.youtube.search_videos param:query:String = " presidential debate " => @com.lg.tv.webos2.play_url on param:url:Entity(tt:url) = param:video_url:Entity(tt:url)
1448820	search youtube videos matching live fireworks 2019 then play video url on your lg webos tv	now => @com.youtube.search_videos param:query:String = " live fireworks 2019 " => @com.lg.tv.webos2.play_url on param:url:Entity(tt:url) = param:video_url:Entity(tt:url)
1515840	play crazy frog videos from youtube on my tv	now => @com.youtube.search_videos param:query:String = " crazy frog " => @com.lg.tv.webos2.play_url on param:url:Entity(tt:url) = param:video_url:Entity(tt:url)
1520951	translate thank you for meeting me today to japanese and send the result via sms	now => @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " japanese " ^^tt:iso_lang_code param:text:String = " thank you for meeting me today " => @org.thingpedia.builtin.thingengine.phone.send_sms on param:message:String = param:translated_text:String
1520959	translate i will see you next week to french and send an email containing the translated text	now => @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " french " ^^tt:iso_lang_code param:text:String = " i will see you next week " => @com.gmail.send_email on param:message:String = param:translated_text:String
1520961	translate please reply immediately to spanish and send an email to EMAIL_ADDRESS_0 containing the translated text	now => @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " spanish " ^^tt:iso_lang_code param:text:String = " please reply immediately " => @com.gmail.send_email param:to:Entity(tt:email_address) = EMAIL_ADDRESS_0 on param:message:String = param:translated_text:String
1650792	search tax form w-2 and then translate it to spanish	now => ( @com.bing.web_search param:query:String = " tax form w-2 " ) join ( @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " spanish " ^^tt:iso_lang_code ) on param:text:String = event => notify
