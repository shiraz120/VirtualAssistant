S-190921p	quickly email a photo to yourself	now => @com.gmail.send_picture
203168p	if any new sms received , then send an email to gmail	monitor ( @org.thingpedia.builtin.thingengine.phone.sms ) => @com.gmail.send_email
S4GKVLWt	send an email to someone when i leave work	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on not param:location:Location == location:work => @com.gmail.send_email
G-1384p	rain send an email alert	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @com.gmail.send_email	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @com.gmail.send_email
R-250179p	text john on gmail when i am approaching LOCATION_0	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on param:location:Location == LOCATION_0 => @com.gmail.send_email param:to:Entity(tt:email_address) = " john " ^^tt:username
R-374506p	send an email to john when i am near home	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on param:location:Location == location:home => @com.gmail.send_email param:to:Entity(tt:email_address) = " john " ^^tt:username
S-381212p	receive an email notification if motion is detected	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => @com.gmail.send_email
S-307385p	receive the nasa picture of the day as an email	monitor ( @gov.nasa.apod ) => @com.gmail.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
171431p	send a copy of an sms sent to an email account	monitor ( @org.thingpedia.builtin.thingengine.phone.sms ) => @com.gmail.send_email on param:message:String = param:message:String
jMfVncBv	quickly email people i am running late	now => @com.gmail.send_email param:message:String = " i am running late "
S-76273p	if motion is detected then send me an email .	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => @com.gmail.send_email
421128p	send email when there 's motion at my door	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => @com.gmail.send_email
378542p	get a notification when nest cam has detected an event	monitor ( @security-camera.current_event ) => notify
Dx8Etsej	automatically turn on my hue lights when nest cam detects motion	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => @light-bulb.set_power param:power:Enum(on,off) = enum:on
S-386864p	get a phone call when nest cam detects motion	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => @org.thingpedia.builtin.thingengine.phone.call
S-380443p	get an email when my nest cam detects a new sound or motion event	monitor ( ( @security-camera.current_event ) filter param:has_sound:Boolean == true or param:has_motion:Boolean == true ) => @com.gmail.send_email
378535p	when motion is detected , set my nest thermostat to NUMBER_0 c	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => @thermostat.set_target_temperature param:value:Measure(C) = NUMBER_0 unit:C
PhQVGxAp	blink hue lights in nest cam motion event	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => @light-bulb.alert_long
yMnbLQh5	if nest cam senses motion before TIME_0 then turn on smartthings light	monitor ( ( @security-camera.current_event ) filter @org.thingpedia.builtin.thingengine.builtin.get_time { param:time:Date <= TIME_0 } ) => @light-bulb.set_power param:power:Enum(on,off) = enum:on
406019p	nest cam detects sound or motion send sms text to android phone	monitor ( ( @security-camera.current_event ) filter param:has_sound:Boolean == true or param:has_motion:Boolean == true ) => @org.thingpedia.builtin.thingengine.phone.send_sms
S-buFhfPmi	call my phone when nest cam detects motion	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => @org.thingpedia.builtin.thingengine.phone.call
E5HXpjPB	turn on the light when my nest camera detects motion	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => @light-bulb.set_power param:power:Enum(on,off) = enum:on
S-YrJAMsqv	call my phone when nest detects sound	monitor ( ( @security-camera.current_event ) filter param:has_sound:Boolean == true ) => @org.thingpedia.builtin.thingengine.phone.call
t635GSwP	turn on lifeshield lights when my nest camera detects sound or motion	monitor ( ( @security-camera.current_event ) filter param:has_sound:Boolean == true or param:has_motion:Boolean == true ) => @light-bulb.set_power param:power:Enum(on,off) = enum:on
WXgcpzTU	automatically set a zone 's temperature when nest cam detects a sound or motion event	monitor ( ( @security-camera.current_event ) filter param:has_sound:Boolean == true or param:has_motion:Boolean == true ) => @thermostat.set_target_temperature
234757p	get a mobile notification when my nest detects motion	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => notify
184044p	get a notification when my nest thermostat rises above NUMBER_0 c	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) >= NUMBER_0 unit:C => notify
gVLFvkXR	set the temperature on my nest thermostat when i am close to home	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on param:location:Location == location:home => @thermostat.set_target_temperature
R-184053p	when i exit LOCATION_0 set my nest thermostat to NUMBER_0 c	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on not param:location:Location == LOCATION_0 => @thermostat.set_target_temperature param:value:Measure(C) = NUMBER_0 unit:C
226314p	set the temperature	now => @thermostat.set_target_temperature
R-gLUBaV2q	automatically adjust my nest thermostat down when the temperature outside rises above NUMBER_0 c	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:C => @thermostat.set_target_temperature	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:C => @thermostat.set_target_temperature
S-187020p	if temperature drops below NUMBER_0 f on nest thermostat, send me an email .	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) <= NUMBER_0 unit:F => @com.gmail.send_email
R-mBHqv46y	automatically adjust my nest thermostat when the temperature drops below NUMBER_0 c	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) <= NUMBER_0 unit:C => @thermostat.set_target_temperature	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) <= NUMBER_0 unit:C => @thermostat.set_target_temperature	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) <= NUMBER_0 unit:C => @thermostat.set_target_temperature
185095p	when i leave home , adjust my thermostat	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on not param:location:Location == location:home => @thermostat.set_target_temperature
177138p	automatically post a daily reminder to a slack channel	timer base = now , interval = 1 unit:day => @com.slack.send
257286p	quickly post a message to a slack channel	now => @com.slack.send
479451p	send a note on slack	now => @com.slack.send
179669p	post a daily weather report at TIME_0 in a slack channel	( attimer time = TIME_0 ) => ( @org.thingpedia.weather.current ) => @com.slack.send on param:message:String = event	( attimer time = TIME_0 ) => ( @org.thingpedia.weather.current param:location:Location = location:current_location ) => @com.slack.send on param:message:String = event
215984p	automatically post nasa image of the day to a slack channel	monitor ( @gov.nasa.apod ) => @com.slack.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
289189p	have twitter mentions automatically posted in slack	monitor ( ( @com.twitter.search ) filter param:in_reply_to:Entity(tt:username) == undefined ) => @com.slack.send on param:message:String = event	monitor ( ( @com.twitter.home_timeline ) filter param:in_reply_to:Entity(tt:username) == undefined ) => @com.slack.send on param:message:String = event
180886p	let the team know when it rains on slack	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @com.slack.send on param:message:String = event	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @com.slack.send on param:message:String = event
NEqyVa2x	post to a channel when new articles appear in the rss feed i choose	monitor ( @org.thingpedia.rss.get_post ) => @com.slack.send on param:message:String = event
R-cMCd2Huw	post to slack when a tweet matches stanford	monitor ( ( @com.twitter.search ) filter param:text:String =~ " stanford " ) => @com.slack.send on param:message:String = event	monitor ( ( @com.twitter.home_timeline ) filter param:text:String =~ " stanford " ) => @com.slack.send on param:message:String = event
179433p	post to slack when i arrive at work .	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on param:location:Location == location:work => @com.slack.send
I-177129p	post incoming tagged sms messages to a slack channel	monitor ( ( @org.thingpedia.builtin.thingengine.phone.sms ) filter param:message:String =~ undefined ) => @com.slack.send on param:message:String = param:message:String
R-307806p	post a message to my slack group when i receive an email from EMAIL_ADDRESS_0	monitor ( ( @com.gmail.inbox ) filter param:sender_address:Entity(tt:email_address) == EMAIL_ADDRESS_0 ) on new param:email_id:Entity(com.gmail:email_id) => @com.slack.send
195670p	search for pig gifs and automatically post in a slack channel	now => @com.giphy.get param:tag:Entity(tt:hashtag) = " pig " ^^tt:hashtag => @com.slack.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
180907p	post github issues in slack , automatically !	monitor ( @com.github.get_issue ) => @com.slack.send on param:message:String = event
177145p	when i share a new video , post to a slack channel	monitor ( @com.youtube.list_videos ) => @com.slack.send on param:message:String = event
rMGL5p8m	when i post to instagram , share the photo on slack	monitor ( @com.instagram.get_pictures ) => @com.slack.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
YSq69a8D	quickly let a slack channel know i 'm running late	now => @com.slack.send param:message:String = " i 'm running late "
pC4ixN3P	automatically share my new videos in a slack channel	monitor ( @com.youtube.list_videos ) => @com.slack.send on param:message:String = event
225882p	post nasa astronomy picture of the day to slack channel	now => @gov.nasa.apod => @com.slack.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
179436p	post to slack when i leave work	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on not param:location:Location == location:work => @com.slack.send
187361p	send new tumblr posts to slack	monitor ( @com.tumblr.new_text ) => @com.slack.send on param:message:String = event
aVxGRrtD	tweet my instagrams as native photos on twitter	monitor ( @com.instagram.get_pictures ) => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
483100p	send myself a notification for testing .	now => @org.thingpedia.builtin.thingengine.builtin.say param:message:String = " testing "
YY9Mqgw5	get the weather forecast every day at TIME_0	( attimer time = TIME_0 ) => ( @org.thingpedia.weather.current ) => notify	( attimer time = TIME_0 ) => ( @org.thingpedia.weather.current param:location:Location = location:current_location ) => notify
R-315468p	if new tweet by john . then tweet the text automatically to my twitter account	monitor ( ( @com.twitter.home_timeline ) filter param:author:Entity(tt:username) == " john " ^^tt:username ) => @com.twitter.post on param:status:String = param:text:String	monitor ( ( @com.twitter.search ) filter param:author:Entity(tt:username) == " john " ^^tt:username ) => @com.twitter.post on param:status:String = param:text:String
S-UHcg5jkZ	quickly email myself a note	now => @com.gmail.send_email
RWLn4kXz	automatically upload my instagrams to a facebook page album	monitor ( @com.instagram.get_pictures ) => @com.facebook.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
S-VgKqYuCW	get an email with my current location	now => @org.thingpedia.builtin.thingengine.phone.get_gps => @com.gmail.send_email on param:message:String = event
U8vKjycC	silent phone	now => @org.thingpedia.builtin.thingengine.phone.set_ringer param:mode:Enum(normal,vibrate,silent) = enum:silent
Lm4CyEYZ	make my hue lights color loop	now => @light-bulb.color_loop
192012p	post a quick tweet	now => @com.twitter.post
32219p	share my blog posts on tumblr to my facebook page	monitor ( @com.tumblr.new_text ) => @com.facebook.post on param:status:String = param:body:String
67132p	tweet whenever i upload a video on youtube	monitor ( @com.youtube.list_videos ) => @com.twitter.post
482775p	if the outdoor temperature is below NUMBER_0 degrees , get a mobile notification reminding me to bundle up	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) <= NUMBER_0 unit:F => @org.thingpedia.builtin.thingengine.builtin.say param:message:String = " bundle up "	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) <= NUMBER_0 unit:F => @org.thingpedia.builtin.thingengine.builtin.say param:message:String = " bundle up "
169623p	get an hourly notification to drink a glass of water	timer base = now , interval = 1 unit:h => @org.thingpedia.builtin.thingengine.builtin.say param:message:String = " drink a glass of water "
184045p	get a notification when my nest thermostat drops below NUMBER_0 c	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) <= NUMBER_0 unit:C => notify
164931p	automatically have the texts i receive on my android phone sent to my email	monitor ( @org.thingpedia.builtin.thingengine.phone.sms ) => @com.gmail.send_email on param:message:String = param:message:String
eL8tHiBR	get a daily TIME_0 notification with the weather report	( attimer time = TIME_0 ) => ( @org.thingpedia.weather.current ) => notify	( attimer time = TIME_0 ) => ( @org.thingpedia.weather.current param:location:Location = location:current_location ) => notify
S-MYRweQMb	send a note to my email address	now => @com.gmail.send_email
192152p	blink my lights	now => @light-bulb.alert_long
375373p	save a photo on onedrive when detect movement	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => @com.live.onedrive.upload_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R-rM26WU5Y	share instagram photos on twitter only when i include hashtag pig in the caption	monitor ( ( @com.instagram.get_pictures ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " pig " ^^tt:hashtag ) => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R-212418p	get a notification every time john tweets	monitor ( ( @com.twitter.search ) filter param:author:Entity(tt:username) == " john " ^^tt:username ) => notify	monitor ( ( @com.twitter.home_timeline ) filter param:author:Entity(tt:username) == " john " ^^tt:username ) => notify
HK8uHfjA	tweet my new tumblr posts	monitor ( @com.tumblr.new_text ) => @com.twitter.post on param:status:String = event
112332p	automatically post my tweets on tumblr	monitor ( @com.twitter.my_tweets ) => @com.tumblr.blog.post_text on param:body:String = param:text:String
4449p	instagram to twitter	monitor ( @com.instagram.get_pictures ) => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R-xcHFiVvR	get an email when there 's a new tweet from john	monitor ( ( @com.twitter.home_timeline ) filter param:author:Entity(tt:username) == " john " ^^tt:username ) => @com.gmail.send_email	monitor ( ( @com.twitter.search ) filter param:author:Entity(tt:username) == " john " ^^tt:username ) => @com.gmail.send_email
258188p	tweet my current location	now => @org.thingpedia.builtin.thingengine.phone.get_gps => @com.twitter.post on param:status:String = event
R-132947p	when i 'm close to home , dm john on twitter	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on param:location:Location == location:home => @com.twitter.send_direct_message param:to:Entity(tt:username) = " john " ^^tt:username
258182p	post a tweet	now => @com.twitter.post
zpmqjeYv	tweet my instagrams as native photos on twitter	monitor ( @com.instagram.get_pictures ) => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
Ms3CGPS2	automatically post my tweets on linkedin when i tag them with HASHTAG_0	monitor ( ( @com.twitter.my_tweets ) filter param:hashtags:Array(Entity(tt:hashtag)) contains HASHTAG_0 ) => @com.linkedin.share on param:status:String = param:text:String
R-212564p	email me when john uses hashtag pig on twitter	monitor ( ( @com.twitter.home_timeline ) filter param:author:Entity(tt:username) == " john " ^^tt:username and param:hashtags:Array(Entity(tt:hashtag)) contains " pig " ^^tt:hashtag ) => @com.gmail.send_email	monitor ( ( @com.twitter.search ) filter param:author:Entity(tt:username) == " john " ^^tt:username and param:hashtags:Array(Entity(tt:hashtag)) contains " pig " ^^tt:hashtag ) => @com.gmail.send_email
95776p	posts tweet daily at TIME_0 with the current weather .	( attimer time = TIME_0 ) => ( @org.thingpedia.weather.current ) => @com.twitter.post on param:status:String = event	( attimer time = TIME_0 ) => ( @org.thingpedia.weather.current param:location:Location = location:current_location ) => @com.twitter.post on param:status:String = event
R-apKwXcPx	get notified when john tweets about tickets to a show	monitor ( ( @com.twitter.home_timeline ) filter param:author:Entity(tt:username) == " john " ^^tt:username and param:text:String =~ " tickets " ) => notify	monitor ( ( @com.twitter.search ) filter param:author:Entity(tt:username) == " john " ^^tt:username and param:text:String =~ " tickets " ) => notify
110512p	blink my hue lights when it starts to rain outside	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @light-bulb.alert_long	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @light-bulb.alert_long
S-1475p	if the temperature drops below freezing , receive an email reminding me to cover my plants	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) <= undefined => @com.gmail.send_email param:message:String = " cover my plants "	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) <= undefined => @com.gmail.send_email param:message:String = " cover my plants "
R-159325p	when it gets colder than NUMBER_0 c remind me to bring a jacket .	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) <= NUMBER_0 unit:C => @org.thingpedia.builtin.thingengine.builtin.say param:message:String = " bring a jacket "	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) <= NUMBER_0 unit:C => @org.thingpedia.builtin.thingengine.builtin.say param:message:String = " bring a jacket "
ATR9EuDh	blink lights when it starts snowing	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:snowy => @light-bulb.alert_long	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:snowy => @light-bulb.alert_long
327235p	turn off my thermostat when outside temperature is above NUMBER_0 c	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:C => @thermostat.set_hvac_mode param:mode:Enum(heat,cool,heat_cool,off) = enum:off	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:C => @thermostat.set_hvac_mode param:mode:Enum(heat,cool,heat_cool,off) = enum:off
qGBymtpa	if current temp rises above NUMBER_0 c send notification	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:C => notify	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:C => notify	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) >= NUMBER_0 unit:C => notify
G-me4gXpt3	if snowing send a text	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:snowy => @org.thingpedia.builtin.thingengine.phone.send_sms	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:snowy => @org.thingpedia.builtin.thingengine.phone.send_sms
nETBRAxn	rain alert !	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => notify	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => notify
gWXMHwzr	if it is cloudy outside , turn on my lights	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:cloudy => @light-bulb.set_power param:power:Enum(on,off) = enum:on	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:cloudy => @light-bulb.set_power param:power:Enum(on,off) = enum:on
1389133	if i receive an email , send me a notification through my phone .	monitor ( @com.gmail.inbox ) on new param:email_id:Entity(com.gmail:email_id) => notify
1389134	try to use bing to search for a result .	now => @com.bing.web_search => notify
1389135	get my latest email	now => @com.gmail.inbox => notify
1389137	check my google email	now => @com.gmail.inbox => notify	monitor ( @com.gmail.inbox ) => notify
1389138	what temperature is it in LOCATION_0	now => @org.thingpedia.weather.current param:location:Location = LOCATION_0 => notify
1389139	my calendar events organized by date	now => @org.thingpedia.icalendar.list_events => notify
1389140	i would use it to record my steps taken .	now => @com.fitbit.getsteps => notify
1389141	search on bing	now => @com.bing.web_search => notify
1389142	get my calender schedule of events	now => @org.thingpedia.icalendar.list_events => notify
1389143	when i receive an email from work	monitor ( ( @com.gmail.inbox ) filter param:sender_address:String == " work " ^^tt:username ) on new param:email_id:Entity(com.gmail:email_id) => notify
1389144	when i receive an e-mail from jim send an alert .	monitor ( ( @com.gmail.inbox ) filter param:sender_address:String == " jim " ^^tt:username ) on new param:email_id:Entity(com.gmail:email_id) => notify
1389145	search for something on bing .	now => @com.bing.web_search => notify
1389146	send an email	now => @com.gmail.send_email
1389147	search kitten videos on youtube	now => @com.youtube.search_videos param:query:String = " kitten " => notify
1389148	search images on bing	now => @com.bing.image_search => notify
1389149	do play music on my speaker	now => @org.thingpedia.bluetooth.speaker.a2dp.play_music
1389150	when i receive an email from _____ do notify me	monitor ( ( @com.gmail.inbox ) filter param:sender_address:Entity(tt:email_address) == undefined ) on new param:email_id:Entity(com.gmail:email_id) => notify
1389151	if i receive an email do something	monitor ( @com.gmail.inbox ) on new param:email_id:Entity(com.gmail:email_id) => notify
1389152	send text to husband	now => @org.thingpedia.builtin.thingengine.phone.send_sms param:to:Entity(tt:phone_number) = " husband " ^^tt:username
1389153	my calendar events	now => @org.thingpedia.icalendar.list_events => notify
1389154	send email to mom	now => @com.gmail.send_email param:to:Entity(tt:email_address) = " mom " ^^tt:username
1389155	do set the speaker volume down to NUMBER_0	now => @org.thingpedia.bluetooth.speaker.a2dp.set_volume param:percent:Number = NUMBER_0
1389157	send an email to patrick	now => @com.gmail.send_email param:to:Entity(tt:email_address) = " patrick " ^^tt:username
1389159	check my tumblr and alert me of feeds	monitor ( @com.tumblr.new_text ) => notify
1389160	do turn off my ge tv	now => @com.lg.tv.webos2.set_power param:power:Enum(on,off) = enum:off
1389161	when i receive an email with certain keywords it will alarm and get my attention .	monitor ( @com.gmail.inbox ) on new param:email_id:Entity(com.gmail:email_id) => notify
1389162	when its a holiday in the usa do notify my agenda	monitor ( ( @org.thingpedia.holidays.get_holidays param:country:Entity(tt:country) = " usa " ^^tt:country ) filter param:date:Date >= start_of unit:day and param:date:Date <= end_of unit:day ) => notify
1389163	go to bing to search for a meaning of something	now => @com.bing.web_search => notify
1389164	what 's the weather	now => @org.thingpedia.weather.current => notify	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify
1389166	call johnson now	now => @org.thingpedia.builtin.thingengine.phone.call param:number:Entity(tt:phone_number) = " johnson " ^^tt:username
1389167	when receive email from chel get message .	monitor ( ( @com.gmail.inbox ) filter param:sender_address:String == " chel " ^^tt:username ) on new param:email_id:Entity(com.gmail:email_id) => notify
1389168	do post a picture to facebook	now => @com.facebook.post_picture
1389170	when youtube channel im subcribed to posts get youtube channel post	monitor ( @com.youtube.list_videos ) => notify
1389171	when : it 's holiday in us , get : next holiday in us	monitor ( ( @org.thingpedia.holidays.get_holidays param:country:Entity(tt:country) = " us " ^^tt:country ) filter param:date:Date >= start_of unit:day and param:date:Date <= end_of unit:day ) => notify
1389172	when : someone i follow tweets , get : recent tweets from someone	( monitor ( @com.twitter.home_timeline ) ) => ( ( @com.twitter.search ) filter param:author:Entity(tt:username) == undefined ) => notify	( monitor ( @com.twitter.home_timeline ) ) => ( @com.twitter.search ) => notify
1389176	when a new file is created on onedrive upload a picture to onedrive with name new	monitor ( @com.live.onedrive.list_files ) on new param:file_id:Entity(com.live.onedrive:file_id) => @com.live.onedrive.upload_picture param:file_name:Entity(tt:path_name) = " new "
1389177	when i walk for NUMBER_0 steps , do turn off my lg tv	edge ( monitor ( @com.fitbit.getsteps ) ) on param:steps:Number >= NUMBER_0 => @com.lg.tv.webos2.set_power param:power:Enum(on,off) = enum:off
1389178	when : receive an email on gmail , get : the latest email	( monitor ( @com.gmail.inbox ) on new param:email_id:Entity(com.gmail:email_id) ) => ( @com.gmail.inbox ) => notify
1389179	do : lower volume of speaker when : time is TIME_0	attimer time = TIME_0 => @org.thingpedia.bluetooth.speaker.a2dp.lower_volume
1389180	when it 's TIME_0 everyday , send me a message saying it 's time to take a nap .	attimer time = TIME_0 => @org.thingpedia.builtin.thingengine.builtin.say param:message:String = " it 's time to take a nap "	attimer time = TIME_0 => @org.thingpedia.builtin.thingengine.phone.send_sms param:message:String = " it 's time to take a nap "
1389181	when an event in my calendar begins do turn on my security camera	edge ( monitor ( @org.thingpedia.icalendar.list_events ) ) on param:status:Enum(scheduled,upcoming,started,ended) == enum:started => @security-camera.set_power param:power:Enum(on,off) = enum:on
1389182	when my weight updates do post on facebook saying pounds lost	monitor ( @com.fitbit.getbody ) on new param:weight:Measure(kg) => @com.facebook.post param:status:String = " pounds lost "
1389183	when an asteroid passes close to the earth , tweet god 's throwing rocks at us .	monitor ( @gov.nasa.asteroid ) => @com.twitter.post param:status:String = " god 's throwing rocks at us "
1389184	when my weight is NUMBER_0 pounds , do mute my lg tv	edge ( monitor ( @com.fitbit.getbody ) ) on param:weight:Measure(kg) == NUMBER_0 unit:lb => @com.lg.tv.webos2.mute
1389186	when it is TIME_0 everyday , set my phone to silent .	attimer time = TIME_0 => @org.thingpedia.builtin.thingengine.phone.set_ringer param:mode:Enum(normal,vibrate,silent) = enum:silent
1389187	when my bmi is NUMBER_0 do post on facebook saying hit weight loss goal	edge ( monitor ( @com.fitbit.getbody ) ) on param:bmi:Number == NUMBER_0 => @com.facebook.post param:status:String = " hit weight loss goal "
1389188	when a new event detected on my security camera turn on security camera	monitor ( @security-camera.current_event ) => @security-camera.set_power param:power:Enum(on,off) = enum:on
1389191	post images to facebook everyday at TIME_0	attimer time = TIME_0 => @com.facebook.post_picture
1389192	keep my calendar and alert me of dates	monitor ( @org.thingpedia.icalendar.list_events ) => notify
1389193	when i receive an email marked as important , send an email to my boss with subject urgent with message please review .	monitor ( @com.gmail.inbox param:is_important:Boolean = true ) on new param:email_id:Entity(com.gmail:email_id) => @com.gmail.send_email param:message:String = " please review " param:subject:String = " urgent " param:to:Entity(tt:email_address) = " boss " ^^tt:username
1389194	when i receive an email do play a song	monitor ( @com.gmail.inbox ) on new param:email_id:Entity(com.gmail:email_id) => @org.thingpedia.bluetooth.speaker.a2dp.play_music
1389195	when my weight updates post a picture on facebook	monitor ( @com.fitbit.getbody ) on new param:weight:Measure(kg) => @com.facebook.post_picture
1389196	when my body measurement updates , tweet the new measurement .	monitor ( @com.fitbit.getbody ) => @com.twitter.post on param:status:String = event
1389197	when it 's TIME_0 every day , do raise the volume of my lg tv	attimer time = TIME_0 => @com.lg.tv.webos2.raise_volume
1389198	when i receive an email , send an email .	monitor ( @com.gmail.inbox ) on new param:email_id:Entity(com.gmail:email_id) => @com.gmail.send_email
1389199	when i receive an sms from julia , set my phone to vibrate .	monitor ( ( @org.thingpedia.builtin.thingengine.phone.sms ) filter param:sender:Entity(tt:phone_number) == " julia " ^^tt:username ) => @org.thingpedia.builtin.thingengine.phone.set_ringer param:mode:Enum(normal,vibrate,silent) = enum:vibrate
1389200	whenever i walked for NUMBER_0 steps , post on facebook saying i completed NUMBER_1 steps today .	edge ( monitor ( @com.fitbit.getsteps ) ) on param:steps:Number >= NUMBER_0 => @com.facebook.post param:status:String = " i completed NUMBER_1 steps today . "
1389201	when a new event is seen on my security camera , do take a snapshot with my security camera	monitor ( @security-camera.current_event ) => notify	( monitor ( @security-camera.current_event ) ) => ( @security-camera.current_event ) => notify
1389202	whenever my bmi is over NUMBER_0 , tweet i need to get more exercise .	edge ( monitor ( @com.fitbit.getbody ) ) on param:bmi:Number >= NUMBER_0 => @com.twitter.post param:status:String = " i need to get more exercise "
1389203	when someone i follow tweets do call 911	monitor ( @com.twitter.home_timeline ) => @org.thingpedia.builtin.thingengine.phone.call_emergency
1389204	when i recieve a message on omlet send a message on omlet to greg saying hello	monitor ( @me.omlet.chat.messages param:from_me:Boolean = false ) => @me.omlet.chat.send_to param:message:String = " hello " param:to:Entity(tt:username) = " greg " ^^tt:username
1389205	when a youtube channel i follow updates , send me an email on gmail with the title as subject line .	monitor ( @com.youtube.list_videos ) => @com.gmail.send_email on param:subject:String = param:title:String
1389206	when someone i follow tweets tweet hello	monitor ( @com.twitter.home_timeline ) => @com.twitter.post param:status:String = " hello "
1389207	when i receive email from school do send to EMAIL_ADDRESS_0	monitor ( ( @com.gmail.inbox ) filter param:sender_address:String == " school " ^^tt:username ) on new param:email_id:Entity(com.gmail:email_id) => @com.gmail.send_email param:to:Entity(tt:email_address) = EMAIL_ADDRESS_0
1389209	when receiving emails from my business auto reply to all inquirys	monitor ( @com.gmail.inbox ) on new param:email_id:Entity(com.gmail:email_id) => @com.gmail.reply on param:email_id:Entity(com.gmail:email_id) = param:email_id:Entity(com.gmail:email_id)
1389215	whenever i receive an email , send back an email to the sender -lrb- auto reply -rrb-	monitor ( @com.gmail.inbox ) on new param:email_id:Entity(com.gmail:email_id) => @com.gmail.reply on param:email_id:Entity(com.gmail:email_id) = param:email_id:Entity(com.gmail:email_id)
1389216	get a cat picture do post with caption i can haz sitz	now => @com.thecatapi.get => @com.facebook.post_picture param:caption:String = " i can haz sitz " on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
1389218	when my location changes turn off my lightbulb	monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) => @light-bulb.set_power param:power:Enum(on,off) = enum:off
1389219	when i receive an sms disco lights	monitor ( @org.thingpedia.builtin.thingengine.phone.sms ) => @light-bulb.color_loop
1389220	when i tweet alert the light-bulb	monitor ( @com.twitter.my_tweets ) => @light-bulb.alert_long
1389221	do : turn on lights when : motion sensor detects person entering room .	monitor ( ( @security-camera.current_event ) filter param:has_person:Boolean == true ) => @light-bulb.set_power param:power:Enum(on,off) = enum:on
1389222	when a new video from youtube channel i follow posts do disco lights	monitor ( @com.youtube.list_videos ) => @light-bulb.color_loop
1389223	when it 's TIME_0 every day , get nasa 's astronomy picture of the day and post it on my tumblr .	( attimer time = TIME_0 ) => ( @gov.nasa.apod ) => @com.tumblr.blog.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
1435843	get my email	now => @com.gmail.inbox => notify
1435844	send my email to ... . name ...	now => @com.gmail.send_email
1435846	get my security camera live feed	now => @security-camera.current_event => notify
1435847	monitor my home temperature	monitor ( @thermostat.get_temperature ) => notify
1435849	when it is cloudy outside get the weather report	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:cloudy => notify	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:cloudy => notify
1435851	search on bing	now => @com.bing.web_search => notify
1435852	when : a new xkcd is out , get the latest xkcd	monitor ( @com.xkcd.get_comic ) => notify
1435854	send an email to gavin with subject wtf with message you ruined my life , i hate you . will you marry me ?	now => @com.gmail.send_email param:message:String = " you ruined my life , i hate you . will you marry me ? " param:subject:String = " wtf " param:to:Entity(tt:email_address) = " gavin " ^^tt:username
1435855	when i get a text let me know	monitor ( @org.thingpedia.builtin.thingengine.phone.sms ) => notify
1435856	send email	now => @com.gmail.send_email
1435858	alert me when i receive a new update on tumblr	monitor ( @com.tumblr.new_text ) => notify
1435859	when an event on my calendar begins	edge ( monitor ( @org.thingpedia.icalendar.list_events ) ) on param:status:Enum(scheduled,upcoming,started,ended) == enum:started => notify
1435860	post a picture on facebook	now => @com.facebook.post_picture
1435861	to turn on lights in your home	now => @light-bulb.set_power param:power:Enum(on,off) = enum:on
1435862	when in youtube , search cat videos	now => @com.youtube.search_videos param:query:String = " cat " => notify
1435863	send email to	now => @com.gmail.send_email
1435864	call 911	now => @org.thingpedia.builtin.thingengine.phone.call_emergency
1435865	when i upload a picture on instagram	monitor ( @com.instagram.get_pictures ) => notify
1435866	make call	now => @org.thingpedia.builtin.thingengine.phone.call
1435867	send an email to ___ with subject ___ with message ___	now => @com.gmail.send_email
1435868	show calendar	now => @org.thingpedia.icalendar.list_events => notify
1435869	open my latest email	now => @com.gmail.inbox => notify
1435870	when a new xkcd is out , get the latest xkcd	monitor ( @com.xkcd.get_comic ) => notify	( monitor ( @com.xkcd.get_comic ) ) => ( @com.xkcd.get_comic ) => notify
1435871	post on facebook	now => @com.facebook.post
1435873	when it 's holiday in us , get next holiday in us	monitor ( ( @org.thingpedia.holidays.get_holidays param:country:Entity(tt:country) = " us " ^^tt:country ) filter param:date:Date >= start_of unit:day and param:date:Date <= end_of unit:day ) => notify
1435874	send text	now => @org.thingpedia.builtin.thingengine.phone.send_sms
1435875	post a status to facebook saying what a nice day .	now => @com.facebook.post param:status:String = " what a nice day "
1435876	if i receive an email , play a tune .	monitor ( @com.gmail.inbox ) on new param:email_id:Entity(com.gmail:email_id) => @org.thingpedia.bluetooth.speaker.a2dp.play_music
1435877	when a new article in wsj markets posts	monitor ( @com.wsj.get param:section:Enum(opinions,world_news,us_business,markets,technology,lifestyle) = enum:markets ) => notify
1435878	how long is the uber wait	now => @com.uber.time_estimate => notify	now => @com.uber.time_estimate param:start:Location = location:current_location => notify
1435879	when i receive an email marked important notify me	monitor ( @com.gmail.inbox param:is_important:Boolean = true ) on new param:email_id:Entity(com.gmail:email_id) => notify
1435880	get weather	now => @org.thingpedia.weather.current => notify	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify
1435881	when a washington post news article is posted , do notify me .	monitor ( @com.washingtonpost.get_article ) => notify
1435882	estimate my price and time in uber from ___________ to ______________ .	now => @com.uber.price_estimate => notify
1435883	when someone i follow tweets , send me a notification	monitor ( @com.twitter.home_timeline ) => notify
1435884	turn up volume	now => @org.thingpedia.bluetooth.speaker.a2dp.raise_volume
1435885	call people for me	now => @org.thingpedia.builtin.thingengine.phone.call
1435886	check my calendar and remind me of any meetings .	monitor ( @org.thingpedia.icalendar.list_events ) => notify
1435887	do post photo on facebook	now => @com.facebook.post_picture
1435889	message love and say good morning	now => @org.thingpedia.builtin.thingengine.phone.send_sms param:message:String = " good morning " param:to:Entity(tt:phone_number) = " love " ^^tt:username
1435890	search for recipes	now => @com.bing.web_search param:query:String = " recipes " => notify
1435891	notify me when someone tags john on twitter .	monitor ( ( @com.twitter.home_timeline ) filter param:in_reply_to:Entity(tt:username) == " john " ^^tt:username ) => notify	monitor ( ( @com.twitter.search ) filter param:in_reply_to:Entity(tt:username) == " john " ^^tt:username ) => notify
1435892	when i get a new email , do send me a notification .	monitor ( @com.gmail.inbox ) on new param:email_id:Entity(com.gmail:email_id) => notify
1435893	when the weather changes let me know	monitor ( @org.thingpedia.weather.current ) => notify	monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) => notify
1435894	when the temperature drops below freezing , send me an alert	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) <= 0 unit:C => notify	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) <= 0 unit:C => notify
1435895	search cookies on bing get cookie images	now => @com.bing.image_search param:query:String = " cookie " => notify
1435896	check bing for the results of the superbowl	now => @com.bing.web_search param:query:String = " superbowl " => notify
1435900	get a puppy video from youtube and post it to my facebook page	now => @com.youtube.search_videos param:query:String = " puppy " => @com.facebook.post on param:status:String = event
1435902	when receive an email get the latest email	monitor ( @com.gmail.inbox ) on new param:email_id:Entity(com.gmail:email_id) => notify
1435903	when someone i follow tweets , send it to my phone	monitor ( @com.twitter.home_timeline ) => notify
1435904	when it 's TIME_0 send me a message to work out	attimer time = TIME_0 => @org.thingpedia.builtin.thingengine.builtin.say param:message:String = " work out "
1435905	when it 's TIME_0 every day , send me a message	attimer time = TIME_0 => @org.thingpedia.builtin.thingengine.builtin.say
1435906	do turn on the lights when it is TIME_0 every day .	attimer time = TIME_0 => @light-bulb.set_power param:power:Enum(on,off) = enum:on
1435907	when i receive an sms send an sms to them saying i am driving	monitor ( @org.thingpedia.builtin.thingengine.phone.sms ) => @org.thingpedia.builtin.thingengine.phone.send_sms param:message:String = " i am driving " on param:to:Entity(tt:phone_number) = param:sender:Entity(tt:phone_number)
1435909	when it 's TIME_0 every day , get current time .	( attimer time = TIME_0 ) => ( @org.thingpedia.builtin.thingengine.builtin.get_time ) => notify
1435910	when my reddit page updates , then send a notification to my email .	monitor ( @com.reddit.frontpage.get ) => @com.gmail.send_email on param:message:String = event
1435911	when it 's TIME_0 , do turn on outdoor lights	attimer time = TIME_0 => @light-bulb.set_power param:power:Enum(on,off) = enum:on
1435912	when raining -lrb- per weather api -rrb- , do send me an email	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @com.gmail.send_email	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @com.gmail.send_email
1435913	call number PHONE_NUMBER_0 when i receive an sms	monitor ( @org.thingpedia.builtin.thingengine.phone.sms ) => @org.thingpedia.builtin.thingengine.phone.call param:number:Entity(tt:phone_number) = PHONE_NUMBER_0
1435914	send me a text when i receive an email on my gmail account	monitor ( @com.gmail.inbox ) on new param:email_id:Entity(com.gmail:email_id) => @org.thingpedia.builtin.thingengine.phone.send_sms
1435915	whenever stock price of bbb changes send an email to EMAIL_ADDRESS_0	monitor ( @com.yahoo.finance.get_stock_quote param:stock_id:Entity(tt:stock_id) = " bbb " ^^tt:stock_id ) => @com.gmail.send_email param:to:Entity(tt:email_address) = EMAIL_ADDRESS_0
1435916	when my security camera detects motion turn on my lg tv	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => @com.lg.tv.webos2.set_power param:power:Enum(on,off) = enum:on
1435917	at TIME_0 send me a message	attimer time = TIME_0 => @org.thingpedia.builtin.thingengine.builtin.say
1435918	when an event on my calendar begins send a sms to me saying what event	edge ( monitor ( @org.thingpedia.icalendar.list_events ) ) on param:status:Enum(scheduled,upcoming,started,ended) == enum:started => @org.thingpedia.builtin.thingengine.phone.send_sms on param:message:String = event
1435919	when i receive a new email on gmail , get the latest email	monitor ( @com.gmail.inbox ) on new param:email_id:Entity(com.gmail:email_id) => notify	( monitor ( @com.gmail.inbox ) on new param:email_id:Entity(com.gmail:email_id) ) => ( @com.gmail.inbox ) => notify
1435920	when my weight is NUMBER_0 , make a post on facebook saying i did it !	edge ( monitor ( @com.fitbit.getbody ) ) on param:weight:Measure(kg) == NUMBER_0 unit:kg => @com.facebook.post param:status:String = " i did it ! "
1435921	when new instagram photo posted , do new facebook post	monitor ( @com.instagram.get_pictures ) => @com.facebook.post
1435922	send an sms to PHONE_NUMBER_0 when my location changes	monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) => @org.thingpedia.builtin.thingengine.phone.send_sms param:to:Entity(tt:phone_number) = PHONE_NUMBER_0
1435923	when security camera detects motion , turn on lights in house .	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => @light-bulb.set_power param:power:Enum(on,off) = enum:on
1435924	whenever a new slack message from ccc is posted send an email to EMAIL_ADDRESS_0	monitor ( ( @com.slack.channel_history ) filter param:sender:Entity(tt:username) == " ccc " ^^tt:username ) => @com.gmail.send_email param:to:Entity(tt:email_address) = EMAIL_ADDRESS_0
1435925	get the latest email every DURATION_0 .	( timer base = now , interval = DURATION_0 ) => ( @com.gmail.inbox ) => notify
1435926	when i upload photo on instagram post on facebook just added pic	monitor ( @com.instagram.get_pictures ) => @com.facebook.post_picture param:caption:String = " just added pic " on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
1435927	when stock dividens for wmt changes , do send a message on slack to channel investors saying the stock price has changed	monitor ( @com.yahoo.finance.get_stock_quote param:stock_id:Entity(tt:stock_id) = " wmt " ^^tt:stock_id ) => @com.slack.send param:channel:Entity(tt:hashtag) = " investors " ^^tt:hashtag param:message:String = " the stock price has changed "
1435928	when : i receive a picture/text on omlet do : send an sms to -lrb- my cellphone number -rrb- saying a new picture/text was received from omlet	monitor ( @me.omlet.chat.messages param:from_me:Boolean = false ) => @org.thingpedia.builtin.thingengine.phone.send_sms param:message:String = " a new picture/text was received from omlet "
1435929	when it 's TIME_0 every day , do turn off my light bulb	attimer time = TIME_0 => @light-bulb.set_power param:power:Enum(on,off) = enum:off
1435930	if i receive an email from linkedin , send me a text message .	( monitor ( ( @com.gmail.inbox ) filter param:sender_address:String == " linkedin " ^^tt:username ) on new param:email_id:Entity(com.gmail:email_id) ) => ( @org.thingpedia.builtin.thingengine.phone.sms ) => notify
1435931	when new nest activity happens get sms alert	monitor ( @security-camera.current_event ) => @org.thingpedia.builtin.thingengine.phone.send_sms
1435932	when i get a new message on slack , set me to away/busy on slack	monitor ( @com.slack.channel_history ) => @com.slack.setPresence param:presence:Enum(away,auto) = enum:away
1435933	when a file is created on google drive , send me an email to EMAIL_ADDRESS_0	monitor ( @com.google.drive.list_drive_files param:order_by:Enum(created_time_increasing,created_time_decreasing,modified_time_increasing,modified_time_decreasing,name_increasing,name_decreasing) = enum:created_time_decreasing ) on new param:file_id:Entity(com.google.drive:file_id) => @com.gmail.send_email param:to:Entity(tt:email_address) = EMAIL_ADDRESS_0
1435934	i receive an sms from PHONE_NUMBER_0 set my phone to vibrate	monitor ( ( @org.thingpedia.builtin.thingengine.phone.sms ) filter param:sender:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => @org.thingpedia.builtin.thingengine.phone.set_ringer param:mode:Enum(normal,vibrate,silent) = enum:vibrate
1435935	whenever a reddit front page is updated send an email to EMAIL_ADDRESS_0	monitor ( @com.reddit.frontpage.get ) => @com.gmail.send_email param:to:Entity(tt:email_address) = EMAIL_ADDRESS_0
1435936	when my location changes set phone to mute	monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) => @org.thingpedia.builtin.thingengine.phone.set_ringer param:mode:Enum(normal,vibrate,silent) = enum:silent
1435937	when an asteroid passes close to earth , post on facebook saying time to watch the asteroid !	monitor ( @gov.nasa.asteroid ) => @com.facebook.post param:status:String = " time to watch the asteroid ! "
1435938	when : i walked for NUMBER_0 steps do : post on facebook saying i just did NUMBER_1 steps !	edge ( monitor ( @com.fitbit.getsteps ) ) on param:steps:Number >= NUMBER_0 => @com.facebook.post param:status:String = " i just did NUMBER_1 steps ! "
1435939	when i upload a picture on instagram , do post a picture on facebook	monitor ( @com.instagram.get_pictures ) => @com.facebook.post_picture on param:caption:String = param:caption:String on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)	monitor ( @com.instagram.get_pictures ) => @com.facebook.post_picture
1435940	when someone i follow tweets , send me a message .	monitor ( @com.twitter.home_timeline ) => notify
1435941	when location changes , do call 911 .	monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) => @org.thingpedia.builtin.thingengine.phone.call_emergency
1435942	when it 's TIME_0 , send me a text message .	attimer time = TIME_0 => @org.thingpedia.builtin.thingengine.phone.send_sms
1435944	when therealdonaldtrump tweets , send me an email alert .	monitor ( ( @com.twitter.home_timeline ) filter param:author:Entity(tt:username) == " therealdonaldtrump " ^^tt:username ) => @com.gmail.send_email	monitor ( ( @com.twitter.search ) filter param:author:Entity(tt:username) == " therealdonaldtrump " ^^tt:username ) => @com.gmail.send_email
1435945	when my location changes send an sms to PHONE_NUMBER_0 saying i 'm leaving .	monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) => @org.thingpedia.builtin.thingengine.phone.send_sms param:message:String = " i 'm leaving " param:to:Entity(tt:phone_number) = PHONE_NUMBER_0	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on not param:location == location:current_location => @org.thingpedia.builtin.thingengine.phone.send_sms param:message = " i 'm leaving " param:to = PHONE_NUMBER_0
1435946	whenever user ddd tweets send an email to EMAIL_ADDRESS_0	monitor ( ( @com.twitter.home_timeline ) filter param:author:Entity(tt:username) == " ddd " ^^tt:username ) => @com.gmail.send_email param:to:Entity(tt:email_address) = EMAIL_ADDRESS_0	monitor ( ( @com.twitter.search ) filter param:author:Entity(tt:username) == " ddd " ^^tt:username ) => @com.gmail.send_email param:to:Entity(tt:email_address) = EMAIL_ADDRESS_0
1435947	when location is home set phone to ring	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on param:location:Location == location:home => @org.thingpedia.builtin.thingengine.phone.set_ringer param:mode:Enum(normal,vibrate,silent) = enum:normal
1435948	when its TIME_0 , call work phone number	attimer time = TIME_0 => @org.thingpedia.builtin.thingengine.phone.call param:number:Entity(tt:phone_number) = " work " ^^tt:username
1435949	when my location changes get time estimate for uber	( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) => ( @com.uber.time_estimate ) on param:start:Location = param:location:Location => notify
1435951	when my weight is above NUMBER_0 lbs , search for healthy snacks on bing .	( edge ( monitor ( @com.fitbit.getbody ) ) on param:weight:Measure(kg) >= NUMBER_0 unit:lb ) => ( @com.bing.web_search param:query:String = " healthy snacks " ) => notify
1435952	when i receive an sms on my phone , set my phone to vibrate	monitor ( @org.thingpedia.builtin.thingengine.phone.sms ) => @org.thingpedia.builtin.thingengine.phone.set_ringer param:mode:Enum(normal,vibrate,silent) = enum:vibrate
1435953	when it 's TIME_0 , do turn down thermostat to NUMBER_0 f	attimer time = TIME_0 => @thermostat.set_target_temperature param:value:Measure(C) = NUMBER_0 unit:F
1435954	when it 's holiday in us , send an email to dad with subject hey dad , time to chill	monitor ( ( @org.thingpedia.holidays.get_holidays param:country:Entity(tt:country) = " us " ^^tt:country ) filter param:date:Date >= start_of unit:day and param:date:Date <= end_of unit:day ) => @com.gmail.send_email param:message:String = " hey dad , time to chill " param:to:Entity(tt:email_address) = " dad " ^^tt:username
1435955	when i change location , get uber estimated time to pick up	( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) => ( @com.uber.time_estimate ) on param:start:Location = param:location:Location => notify
1435956	if i receive an email , automate reply .	monitor ( @com.gmail.inbox ) on new param:email_id:Entity(com.gmail:email_id) => @com.gmail.reply on param:email_id:Entity(com.gmail:email_id) = param:email_id:Entity(com.gmail:email_id)
1435957	when my security camera detects a person do : call number	monitor ( ( @security-camera.current_event ) filter param:has_person:Boolean == true ) => @org.thingpedia.builtin.thingengine.phone.call
1435958	when i post a picture on instagram , get my latest posted pics .	( monitor ( @com.instagram.get_pictures ) ) => ( @com.instagram.get_pictures ) => notify
1435959	when the temperature on my thermostat updates run the a/c	monitor ( @thermostat.get_temperature ) => @thermostat.set_hvac_mode	monitor ( @thermostat.get_temperature ) => @thermostat.set_hvac_mode param:mode = enum:cool
1435960	when i receive an email from stephanie douglas , do reply with i love you	monitor ( ( @com.gmail.inbox ) filter param:sender_address:String == " stephanie douglas " ^^tt:username ) on new param:email_id:Entity(com.gmail:email_id) => @com.gmail.reply param:subject:String = " i love you " on param:email_id:Entity(com.gmail:email_id) = param:email_id:Entity(com.gmail:email_id)
1435961	when it 's TIME_0 every day , send a text message saying good morning to my girlfriend	attimer time = TIME_0 => @org.thingpedia.builtin.thingengine.phone.send_sms param:message:String = " good morning " param:to:Entity(tt:phone_number) = " girlfriend " ^^tt:username
1435962	when : my security camera detects a motion do : call number	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => @org.thingpedia.builtin.thingengine.phone.call
1435963	when it 's TIME_0 every day , get the weather in LOCATION_0	( attimer time = TIME_0 ) => ( @org.thingpedia.weather.current param:location:Location = LOCATION_0 ) => notify
1435964	when the weather is sunny , get me the sunset/sunrise times for my location .	( edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:sunny ) => ( @org.thingpedia.weather.sunrise param:location:Location = location:current_location ) => notify	( edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:sunny ) => ( @org.thingpedia.weather.sunrise param:location:Location = location:current_location ) => notify
1435965	when leaving work location post to facebook it 's play time	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on not param:location:Location == location:work => @com.facebook.post param:status:String = " it 's play time "
1435966	remind me to take my vitamins everyday at TIME_0 .	attimer time = TIME_0 => @org.thingpedia.builtin.thingengine.builtin.say param:message:String = " take my vitamins "
1435967	when new reddit post is in forum get sms alert	monitor ( @com.reddit.frontpage.get ) => @org.thingpedia.builtin.thingengine.phone.send_sms
1435968	when i have an event in my calendar , get the wait times for uber .	( edge ( monitor ( @org.thingpedia.icalendar.list_events ) ) on param:status:Enum(scheduled,upcoming,started,ended) == enum:started ) => ( @com.uber.time_estimate ) => notify
1435969	when message from sally on slack do reply hello	monitor ( ( @com.slack.channel_history ) filter param:sender:Entity(tt:username) == " sally " ^^tt:username ) => @com.slack.send param:message:String = " hello " on param:channel:Entity(tt:hashtag) = param:channel:Entity(tt:hashtag)
1435970	when phone number PHONE_NUMBER_0 , then forward the message to my sister .	monitor ( ( @org.thingpedia.builtin.thingengine.phone.sms ) filter param:sender:Entity(tt:phone_number) == PHONE_NUMBER_0 ) => @org.thingpedia.builtin.thingengine.phone.send_sms param:to:Entity(tt:phone_number) = " sister " ^^tt:username on param:message:String = param:message:String
1435971	when i receive an e-mail from jim , send jim an sms message saying thanks , i got the e-mail	monitor ( ( @com.gmail.inbox ) filter param:sender_address:String == " jim " ^^tt:username ) on new param:email_id:Entity(com.gmail:email_id) => @org.thingpedia.builtin.thingengine.phone.send_sms param:message:String = " thanks , i got the e-mail " param:to:Entity(tt:phone_number) = " jim " ^^tt:username
1435972	when it 's raining at location LOCATION_0 , get the weather in LOCATION_1	( edge ( monitor ( @org.thingpedia.weather.current param:location:Location = LOCATION_0 ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining ) => ( @org.thingpedia.weather.current param:location:Location = LOCATION_1 ) => notify
1435973	if raining alert me to grab umbrella .	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @org.thingpedia.builtin.thingengine.builtin.say param:message:String = " grab umbrella "	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @org.thingpedia.builtin.thingengine.builtin.say param:message:String = " grab umbrella "
1435974	when it turns TIME_0 , do remind me that i have to run NUMBER_0 miles tonight .	attimer time = TIME_0 => @org.thingpedia.builtin.thingengine.builtin.say param:message:String = " i have to run NUMBER_0 miles tonight "
1435975	when new youtube video from channel i follow , do send me an email	monitor ( @com.youtube.list_videos ) => @com.gmail.send_email
1435976	check temperature on thermostat , if it is below NUMBER_0 change it to NUMBER_1	now => ( @thermostat.get_temperature ) filter param:value:Measure(C) <= NUMBER_0 unit:F => @thermostat.set_target_temperature param:value:Measure(C) = NUMBER_1 unit:F
1435977	if i receive an email , instantly reply .	monitor ( @com.gmail.inbox ) on new param:email_id:Entity(com.gmail:email_id) => @com.gmail.reply on param:email_id:Entity(com.gmail:email_id) = param:email_id:Entity(com.gmail:email_id)
1435978	when an event on my calendar begins get my calendar events	( edge ( monitor ( @org.thingpedia.icalendar.list_events ) ) on param:status:Enum(scheduled,upcoming,started,ended) == enum:started ) => ( @org.thingpedia.icalendar.list_events ) => notify
1435979	when : someone i follow tweets do : send an sms saying there 's a new tweet on tweeter .	monitor ( @com.twitter.home_timeline ) => @org.thingpedia.builtin.thingengine.phone.send_sms param:message:String = " there 's a new tweet on tweeter "
1435981	when i upload an instagram picture get the last NUMBER_0 pictures .	( monitor ( @com.instagram.get_pictures ) ) => ( @com.instagram.get_pictures param:count:Number = NUMBER_0 ) => notify
1435982	when i walked for NUMBER_0 steps send a sms to me saying i walked NUMBER_1 steps	edge ( monitor ( @com.fitbit.getsteps ) ) on param:steps:Number >= NUMBER_0 => @org.thingpedia.builtin.thingengine.phone.send_sms param:message:String = " saying i walked NUMBER_1 steps "
1435983	when my security camera detects person , get live feed of security camera	monitor ( ( @security-camera.current_event ) filter param:has_person:Boolean == true ) => notify
1435984	when user maxinewaters tweets , do tweet USERNAME_0 yasssss queen	monitor ( ( @com.twitter.home_timeline ) filter param:author:Entity(tt:username) == " maxinewaters " ^^tt:username ) => @com.twitter.post param:status:String = " USERNAME_0 yasssss queen "	monitor ( ( @com.twitter.search ) filter param:author:Entity(tt:username) == " maxinewaters " ^^tt:username ) => @com.twitter.post param:status:String = " USERNAME_0 yasssss queen "
1435985	when an asteroid passes earth , post nasa 's picture of the day .	( monitor ( @gov.nasa.asteroid ) ) => ( @gov.nasa.apod ) => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
1435986	do make meme , post tumblr	now => @com.imgflip.generate => @com.tumblr.blog.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
1435988	when receive message decrease volume on my speaker	monitor ( @org.thingpedia.builtin.thingengine.phone.sms ) => @org.thingpedia.bluetooth.speaker.a2dp.lower_volume
1435989	when an even on my calendar begins play music	edge ( monitor ( @org.thingpedia.icalendar.list_events ) ) on param:status:Enum(scheduled,upcoming,started,ended) == enum:started => @org.thingpedia.bluetooth.speaker.a2dp.play_music
1435990	when my weight on fitnesstracker updates , play music on my speaker	monitor ( @com.fitbit.getbody ) on new param:weight:Measure(kg) => @org.thingpedia.bluetooth.speaker.a2dp.play_music
1435991	when my location changes decrease volume on my speaker	monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) => @org.thingpedia.bluetooth.speaker.a2dp.lower_volume
1435992	when file created on onedrive notify me by lowering volume on speaker to NUMBER_0 %	monitor ( @com.live.onedrive.list_files param:order_by:Enum(created_time_increasing,created_time_decreasing,modified_time_increasing,modified_time_decreasing,name_increasing,name_decreasing) = enum:created_time_decreasing ) on new param:file_id:Entity(com.live.onedrive:file_id) => @org.thingpedia.bluetooth.speaker.a2dp.set_volume param:percent:Number = NUMBER_0
1435993	do bluetooth volume down when time is TIME_0	attimer time = TIME_0 => @org.thingpedia.bluetooth.speaker.a2dp.lower_volume
ac0	get an email from monica	now => ( @com.gmail.inbox ) filter param:sender_address:Entity(tt:email_address) == " monica " ^^tt:username => notify
ac1	send an email with subject receipt	now => @com.gmail.send_email param:subject:String = " receipt "
ac2	notify me when trump tweets	monitor ( ( @com.twitter.home_timeline ) filter param:author:Entity(tt:username) == " trump " ^^tt:username ) => notify	monitor ( ( @com.twitter.search ) filter param:author:Entity(tt:username) == " trump " ^^tt:username ) => notify
ac3	notify me when i receive an dm from trump	monitor ( ( @com.twitter.direct_messages ) filter param:sender:Entity(tt:username) == " trump " ^^tt:username ) => notify
ac5	help me translate hello to chinese	now => @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " chinese " ^^tt:iso_lang_code param:text:String = " hello " => notify
ac6	warn me if it is going to snow	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:snowy => notify	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:snowy => notify
ac7	volume down my tv	now => @com.lg.tv.webos2.lower_volume
ac8	what 's the headline of new york times	now => @com.nytimes.get_front_page => notify
ac9	when my nest camera detects sound , notify me	monitor ( ( @security-camera.current_event ) filter param:has_sound:Boolean == true ) => notify
ac10	show me a cat gif	now => @com.giphy.get param:tag:Entity(tt:hashtag) = " cat " ^^tt:hashtag => notify
ac11	alart me if something changed in my google drive	monitor ( @com.google.drive.list_drive_files ) => notify
ac12	create a file with name / PATH_NAME_0 in my google drive	now => @com.google.drive.create_new_drive_file param:file_name:Entity(tt:path_name) = PATH_NAME_0
ac13	when is the next us holiday ?	now => @org.thingpedia.holidays.get_holidays param:country:Entity(tt:country) = " us " ^^tt:country => notify
ac14	how much is it to uber to LOCATION_0 from here ?	now => @com.uber.price_estimate param:end:Location = LOCATION_0 param:start:Location = location:current_location => notify
ac20	get my instagram posts with hashtag hamster	now => ( @com.instagram.get_pictures ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " hamster " ^^tt:hashtag => notify
ac21	how much space do i have left in dropbox	now => @com.dropbox.get_space_usage => notify
ac22	search for a NUMBER_0 x NUMBER_1 picture on bing	now => ( @com.bing.image_search ) filter param:height:Number == NUMBER_1 and param:width:Number == NUMBER_0 => notify
ac25	send today 's nasa picture to random on slack	now => @gov.nasa.apod => @com.slack.send_picture param:channel:Entity(tt:hashtag) = " random " ^^tt:hashtag on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
ac26	turn my phone to vibrate mode when an event orgnized by monica starts	edge ( monitor ( ( @org.thingpedia.icalendar.list_events ) filter param:organizer:String =~ " monica " ) ) on param:status:Enum(scheduled,upcoming,started,ended) == enum:started => @org.thingpedia.builtin.thingengine.phone.set_ringer param:mode:Enum(normal,vibrate,silent) = enum:vibrate
ac30	when monica sends me an email , notify me on slack	monitor ( ( @com.gmail.inbox ) filter param:sender_address:Entity(tt:email_address) == " monica " ^^tt:username ) on new param:email_id:Entity(com.gmail:email_id) => @com.slack.send on param:message:String = event
ac33	if today is a holiday , mute my phone	now => ( @org.thingpedia.holidays.get_holidays ) filter param:date:Date >= start_of unit:day and param:date:Date <= end_of unit:day => @org.thingpedia.builtin.thingengine.phone.set_ringer param:mode:Enum(normal,vibrate,silent) = enum:silent
ac34	send all new york times headlines to my email EMAIL_ADDRESS_0	now => @com.nytimes.get_front_page => @com.gmail.send_email param:to:Entity(tt:email_address) = EMAIL_ADDRESS_0 on param:message:String = param:title:String
ac36	if i receive an sms containing verification code , forward it to my slack	monitor ( ( @org.thingpedia.builtin.thingengine.phone.sms ) filter param:message:String =~ " verification code " ) => @com.slack.send on param:message:String = param:message:String
ac37	when i leave home , text monica i 'm coming	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on not param:location:Location == location:home => @org.thingpedia.builtin.thingengine.phone.send_sms param:message:String = " i 'm coming " param:to:Entity(tt:phone_number) = " monica " ^^tt:username
ac38	when i reach work , text monica i 'm on my way up	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on param:location:Location == location:work => @org.thingpedia.builtin.thingengine.phone.send_sms param:message:String = " i 'm on my way up " param:to:Entity(tt:phone_number) = " monica " ^^tt:username
ac39	when the security detects a person , post the snapshot to twitter	monitor ( ( @security-camera.current_event ) filter param:has_person:Boolean == true ) => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
ac43	turn off the tv if nobody is in the room	monitor ( ( @security-camera.current_event ) filter param:has_person:Boolean == false ) => @com.lg.tv.webos2.set_power param:power:Enum(on,off) = enum:off
ac44	show me all new york times headline in chinese	now => ( @com.nytimes.get_front_page ) join ( @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " chinese " ^^tt:iso_lang_code ) on param:text:String = param:title:String => notify
ac45	mute my phone when get to work	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on param:location:Location == location:work => @org.thingpedia.builtin.thingengine.phone.set_ringer param:mode:Enum(normal,vibrate,silent) = enum:silent
ac47	when somebody sends me a dm , flash the light bulb	monitor ( @com.twitter.direct_messages ) => @light-bulb.alert_long
ac48	when there is a new video by mkbhd , shoot an email	monitor ( ( @com.youtube.list_videos ) filter param:channel_title:String =~ " mkbhd " ) => @com.gmail.send_email
ac49	when there is a new issue created on github , comment this repository has been deprecated .	monitor ( @com.github.get_issue ) => @com.github.comment_issue param:body:String = " this repository has been deprecated " on param:issue_number:Number = param:number:Number
ac51	show me phdcomics	now => @com.phdcomics.get_post => notify
ac52	what are today 's news from the new york times	now => ( @com.nytimes.get_front_page ) filter param:updated:Date >= start_of unit:day => notify
ac53	how do you say hola como estas in english	now => @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " english " ^^tt:iso_lang_code param:text:String = " hola como estas " => notify
ac58	notify me when onlyporridge uploads something to twitter	monitor ( ( @com.twitter.home_timeline ) filter param:author:Entity(tt:username) == " onlyporridge " ^^tt:username ) => notify	monitor ( ( @com.twitter.search ) filter param:author:Entity(tt:username) == " onlyporridge " ^^tt:username ) => notify
ac60	cool down the room by turning on the ac	now => @thermostat.set_hvac_mode param:mode:Enum(heat,cool,heat_cool,off) = enum:cool
ac63	follow tweets from realdonaldtrump	now => @com.twitter.follow param:user_name:Entity(tt:username) = " realdonaldtrump " ^^tt:username
ac65	get today 's xkcd	now => @com.xkcd.get_comic => notify
ac67	search youtube videos from last week tonight	now => @com.youtube.search_videos param:query:String = " last week tonight " => notify
ac68	i want to do a web search	now => @com.bing.web_search => notify
ac69	get a cat gif	now => @com.giphy.get param:tag:Entity(tt:hashtag) = " cat " ^^tt:hashtag => notify
ac71	make a meme that says cheatsheet at the bottom	now => @com.imgflip.generate param:text_bottom:String = " cheatsheet " => notify
ac73	find me my last NUMBER_0 lo-fi instagram pictures	now => ( @com.instagram.get_pictures param:count:Number = NUMBER_0 ) filter param:filter:Entity(com.instagram:filter) == " lo-fi " ^^com.instagram:filter => notify
ac74	silence my phone	now => @org.thingpedia.builtin.thingengine.phone.set_ringer param:mode:Enum(normal,vibrate,silent) = enum:silent
ac75	when it 's snowing outside crank up the thermostat to NUMBER_0 degrees	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:snowy => @thermostat.set_target_temperature param:value:Measure(C) = NUMBER_0 unit:F	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:snowy => @thermostat.set_target_temperature param:value:Measure(C) = NUMBER_0 unit:F
ac76	send a dog picture to slack channel random	now => @uk.co.thedogapi.get => @com.slack.send_picture param:channel:Entity(tt:hashtag) = " random " ^^tt:hashtag on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
ac77	email my linkedin profile to monica	now => @com.linkedin.get_profile => @com.gmail.send_email param:to:Entity(tt:email_address) = " monica " ^^tt:username on param:message:String = event
ac80	order me a large latte when i get to work	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on param:location:Location == location:work => @org.thingpedia.demo.coffee.order param:beverage:Enum(drip_coffee,espresso,latte,flat_white,mocha,caramel_mocha,white_mocha,macchiato,caramel_macchiato,cappuccino,americano) = enum:latte param:size:Enum(small,medium,large) = enum:large
ac81	auto translate all new washington post articles to italian	( monitor ( @com.washingtonpost.get_article ) ) => ( @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " italian " ^^tt:iso_lang_code ) on param:text:String = param:title:String => notify
ac84	when somebody enters in the living room turn on the tv	monitor ( ( @security-camera.current_event ) filter param:has_person:Boolean == true ) => @com.lg.tv.webos2.set_power param:power:Enum(on,off) = enum:on
ac85	tweet we 're all gon na die when nasa says there is an asteroid nearby	monitor ( @gov.nasa.asteroid ) => @com.twitter.post param:status:String = " we 're all gon na die "
ac86	send a random number to slack random	now => @org.thingpedia.builtin.thingengine.builtin.get_random_between => @com.slack.send param:channel:Entity(tt:hashtag) = " random " ^^tt:hashtag on param:message:String = event
ac87	pick a random number between NUMBER_0 and NUMBER_1 , and if it 's exactly NUMBER_2 , say critical hit !	now => ( @org.thingpedia.builtin.thingengine.builtin.get_random_between param:high:Number = NUMBER_1 param:low:Number = NUMBER_0 ) filter param:random:Number == NUMBER_2 => @org.thingpedia.builtin.thingengine.builtin.say param:message:String = " critical hit ! "
ac92	turn my phone off when my meeting starts	edge ( monitor ( @org.thingpedia.icalendar.list_events ) ) on param:status:Enum(scheduled,upcoming,started,ended) == enum:started => @org.thingpedia.builtin.thingengine.phone.set_ringer param:mode:Enum(normal,vibrate,silent) = enum:silent
ac93	when the washington post has a politics article about trump , pull up realdonaldtrump 's tweets	( monitor ( ( @com.washingtonpost.get_article param:section:Enum(politics,opinions,local,sports,national,world,business,lifestyle) = enum:politics ) filter param:title:String =~ " trump " ) ) => ( ( @com.twitter.search ) filter param:author:Entity(tt:username) == " realdonaldtrump " ^^tt:username ) => notify
ac94	when there is a new xkcd out , post it to twitter , caption and everything	monitor ( @com.xkcd.get_comic ) => @com.twitter.post_picture on param:caption:String = event on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
ac95	call the police when the security camera detects a person	monitor ( ( @security-camera.current_event ) filter param:has_person:Boolean == true ) => @org.thingpedia.builtin.thingengine.phone.call_emergency
ac97	retweet everything from almondstanford	monitor ( ( @com.twitter.home_timeline ) filter param:author:Entity(tt:username) == " almondstanford " ^^tt:username ) => @com.twitter.retweet on param:tweet_id:Entity(com.twitter:id) = param:tweet_id:Entity(com.twitter:id)	monitor ( ( @com.twitter.search ) filter param:author:Entity(tt:username) == " almondstanford " ^^tt:username ) => @com.twitter.retweet on param:tweet_id:Entity(com.twitter:id) = param:tweet_id:Entity(com.twitter:id)
ac98	automatically copy everything from almondstanford from twitter to facebook	monitor ( ( @com.twitter.home_timeline ) filter param:author:Entity(tt:username) == " almondstanford " ^^tt:username ) => @com.facebook.post on param:status:String = param:text:String	monitor ( ( @com.twitter.search ) filter param:author:Entity(tt:username) == " almondstanford " ^^tt:username ) => @com.facebook.post on param:status:String = param:text:String
ac99	when i total more than NUMBER_0 steps in a day , post on facebook about it	edge ( monitor ( @com.fitbit.getsteps ) ) on param:steps:Number >= NUMBER_0 => @com.facebook.post on param:status:String = event
ep0	did i get an email today ?	now => ( @com.gmail.inbox ) filter param:date:Date >= start_of unit:day => notify
ep1	show me my emails	now => @com.gmail.inbox => notify
ep2	find emails from monica	now => ( @com.gmail.inbox ) filter param:sender_address:Entity(tt:email_address) == " monica " ^^tt:username => notify
ep3	list all the work emails	now => ( @com.gmail.inbox ) filter param:labels:Array(String) contains " work " ^^tt:hashtag => notify
ep4	search tweets from realdonaldtrump	now => ( @com.twitter.search ) filter param:author:Entity(tt:username) == " realdonaldtrump " ^^tt:username => notify
ep5	search tweets about the oscars	now => ( @com.twitter.search ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " oscars " ^^tt:hashtag => notify	now => ( @com.twitter.search ) filter param:text:String =~ " oscars " => notify
ep6	show recent tweets	now => @com.twitter.search => notify
ep7	what are people tweeting about today	now => @com.twitter.search => notify
ep8	tweet that i 'm at work and i 'm bored	now => @com.twitter.post param:status:String = " i 'm at work and i 'm bored "
ep9	get my direct message history out of twitter	now => @com.twitter.direct_messages => notify
ep10	get my twitter direct messages	now => @com.twitter.direct_messages => notify
ep11	send a dm to realdonaldtrump	now => @com.twitter.send_direct_message param:to:Entity(tt:username) = " realdonaldtrump " ^^tt:username
ep12	tell somebody to fuck off on twitter	now => @com.twitter.send_direct_message param:message:String = " fuck off "
ep13	post good morning on facebook	now => @com.facebook.post param:status:String = " good morning "
ep14	make a facebook post	now => @com.facebook.post
ep15	order a large black coffee	now => @org.thingpedia.demo.coffee.order param:beverage:Enum(drip_coffee,espresso,latte,flat_white,mocha,caramel_mocha,white_mocha,macchiato,caramel_macchiato,cappuccino,americano) = enum:drip_coffee param:size:Enum(small,medium,large) = enum:large
ep16	order an iced mocha	now => @org.thingpedia.demo.coffee.order param:beverage:Enum(drip_coffee,espresso,latte,flat_white,mocha,caramel_mocha,white_mocha,macchiato,caramel_macchiato,cappuccino,americano) = enum:mocha param:iced:Boolean = true
ep17	get me a large coffee here	now => @org.thingpedia.demo.coffee.order param:beverage:Enum(drip_coffee,espresso,latte,flat_white,mocha,caramel_mocha,white_mocha,macchiato,caramel_macchiato,cappuccino,americano) = enum:drip_coffee param:delivery_location:Location = location:current_location param:size:Enum(small,medium,large) = enum:large
ep18	bring me a coffee	now => @org.thingpedia.demo.coffee.order param:beverage:Enum(drip_coffee,espresso,latte,flat_white,mocha,caramel_mocha,white_mocha,macchiato,caramel_macchiato,cappuccino,americano) = enum:drip_coffee
ep19	i want a small latte	now => @org.thingpedia.demo.coffee.order param:beverage:Enum(drip_coffee,espresso,latte,flat_white,mocha,caramel_mocha,white_mocha,macchiato,caramel_macchiato,cappuccino,americano) = enum:latte param:size:Enum(small,medium,large) = enum:small
ep20	please order me a medium latte , no sugar	now => @org.thingpedia.demo.coffee.order param:beverage:Enum(drip_coffee,espresso,latte,flat_white,mocha,caramel_mocha,white_mocha,macchiato,caramel_macchiato,cappuccino,americano) = enum:latte param:extras:Enum(none,milk,sugar,both) = enum:none param:size:Enum(small,medium,large) = enum:medium
ep21	search colbert on youtube	now => @com.youtube.search_videos param:query:String = " colbert " => notify	now => @com.youtube.search_channel param:query:String = " colbert " => notify
ep24	what 's pewdiepie 's channel on youtube	now => @com.youtube.search_channel param:query:String = " pewdiepie " => notify
ep25	show me music channels on youtube	now => @com.youtube.channels_by_category param:category_id:Enum(best_of_youtube,recommended,paid,music,comedy,film_and_entertainment,gaming,beauty_and_fashion,from_tv,automotive,animation,sports,diy,tech,science,cooking,causes,news_and_politics,lifestyle) = enum:music => notify
ep26	what are channels i follow	now => @com.youtube.list_subscriptions => notify
ep27	show me wall street journal world news	now => @com.wsj.get param:section:Enum(opinions,world_news,us_business,markets,technology,lifestyle) = enum:world_news => notify
ep28	what 's happening in the world today according to the wall street journal ?	now => ( @com.wsj.get param:section:Enum(opinions,world_news,us_business,markets,technology,lifestyle) = enum:world_news ) filter param:updated:Date >= start_of unit:day => notify
ep29	what 's happening in the world today according to the new york times ?	now => ( @com.nytimes.get_front_page ) filter param:updated:Date >= start_of unit:day => notify
ep30	alert me if somebody is in front of my security camera	monitor ( ( @security-camera.current_event ) filter param:has_person:Boolean == true ) => notify
ep31	alert me if something moves in front of my security camera	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => notify
ep32	lem me know if the motion sensor detects something	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => notify
ep33	notify me if there is sound in my house	monitor ( ( @security-camera.current_event ) filter param:has_sound:Boolean == true ) => notify
ep35	show me my security camera	now => @security-camera.current_event => notify
ep36	turn my security camera off	now => @security-camera.set_power param:power:Enum(on,off) = enum:off
ep37	set the ac off	now => @thermostat.set_hvac_mode param:mode:Enum(heat,cool,heat_cool,off) = enum:off
ep38	turn the thermostat to NUMBER_0	now => @thermostat.set_target_temperature param:value:Measure(C) = NUMBER_0 unit:F
ep39	what 's the humidity in the room	now => @thermostat.get_humidity => notify
ep40	what 's the temperature inside my house	now => @thermostat.get_temperature => notify
ep41	is the ac on ?	now => @thermostat.get_hvac_state => notify
ep42	what 's the humidity outside	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify	now => @org.thingpedia.weather.current => notify
ep43	what 's the temperature outside at home	now => @org.thingpedia.weather.current param:location:Location = location:home => notify
ep44	is it raining outside ?	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify	now => @org.thingpedia.weather.current => notify
ep45	tell me when it starts raining	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => notify	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status == enum:raining => notify
ep46	what 's the wind speed ?	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify	now => @org.thingpedia.weather.current => notify
ep47	search on bing	now => @com.bing.web_search => notify
ep48	i want to do a web search on bing	now => @com.bing.web_search => notify
ep49	i want to use bing to search something	now => @com.bing.web_search => notify
ep50	i 'm looking for the oscars	now => @com.bing.web_search param:query:String = " oscars " => notify
ep51	search oscars news	now => @com.bing.web_search param:query:String = " oscars news " => notify
ep52	search a picture on bing	now => @com.bing.image_search => notify
ep53	look up a picture on bing	now => @com.bing.image_search => notify
ep54	look up a picture of cats on bing	now => @com.bing.image_search param:query:String = " cats " => notify
ep55	lookup the president of tanzania on bing	now => @com.bing.web_search param:query:String = " president of tanzania " => notify
ep56	bing the definition of assistant	now => @com.bing.web_search param:query:String = " assistant " => notify
ep57	list my files from google drive	now => @com.google.drive.list_drive_files => notify
ep58	list my files in google drive	now => @com.google.drive.list_drive_files => notify
ep59	sort my google drive files by name	now => @com.google.drive.list_drive_files param:order_by:Enum(created_time_increasing,created_time_decreasing,modified_time_increasing,modified_time_decreasing,name_increasing,name_decreasing) = enum:name_increasing => notify
ep60	show me my google drive files created this week	now => ( @com.google.drive.list_drive_files param:order_by:Enum(created_time_increasing,created_time_decreasing,modified_time_increasing,modified_time_decreasing,name_increasing,name_decreasing) = enum:created_time_decreasing ) filter param:created_time:Date >= start_of unit:week => notify
ep61	show me my google drive files created since monday	now => ( @com.google.drive.list_drive_files param:order_by:Enum(created_time_increasing,created_time_decreasing,modified_time_increasing,modified_time_decreasing,name_increasing,name_decreasing) = enum:created_time_decreasing ) filter param:created_time:Date >= start_of unit:week => notify
ep62	what google files are bigger than 1 megabyte	now => ( @com.google.drive.list_drive_files ) filter param:file_size:Measure(byte) >= 1 unit:MB => notify
ep63	how much space do i have left on dropbox ?	now => @com.dropbox.get_space_usage => notify
ep64	what dropbox files are bigger than 1 megabyte	now => ( @com.dropbox.list_folder ) filter param:file_size:Measure(byte) >= 1 unit:MB => notify
ep65	list the dropbox files in / foo	now => @com.dropbox.list_folder param:folder_name:Entity(tt:path_name) = " foo " => notify
ep66	create a file in onedrive , call it PATH_NAME_0 , and put some text into it	now => @com.live.onedrive.create_file param:file_name:Entity(tt:path_name) = PATH_NAME_0
ep67	rename PATH_NAME_0 to PATH_NAME_1 in my one drive	now => @com.live.onedrive.rename_file param:new_name:Entity(tt:path_name) = PATH_NAME_1 param:old_name:Entity(tt:path_name) = PATH_NAME_0
ep68	rename PATH_NAME_0 to PATH_NAME_1 in my dropbox drive	now => @com.dropbox.move param:new_name:Entity(tt:path_name) = PATH_NAME_1 param:old_name:Entity(tt:path_name) = PATH_NAME_0
ep69	upload a pic to onedrive	now => @com.live.onedrive.upload_picture
ep71	how many steps did i walk today ?	now => @com.fitbit.getsteps => notify
ep72	how many steps today	now => @com.fitbit.getsteps => notify
ep73	show me my steps from fitbit	now => @com.fitbit.getsteps => notify
ep74	congratulate me when i walk NUMBER_0 steps	edge ( monitor ( @com.fitbit.getsteps ) ) on param:steps:Number >= NUMBER_0 => notify
ep75	show me my meetings today	now => ( @org.thingpedia.icalendar.list_events ) filter param:start_date:Date >= start_of unit:day and param:start_date:Date <= end_of unit:day => notify
ep76	show me today 's appointments	now => ( @org.thingpedia.icalendar.list_events ) filter param:start_date:Date >= start_of unit:day and param:start_date:Date <= end_of unit:day => notify
ep77	do i have any meeting today ?	now => ( @org.thingpedia.icalendar.list_events ) filter param:start_date:Date >= start_of unit:day and param:start_date:Date <= end_of unit:day => notify
ep78	do i have any meeting next week ?	now => ( @org.thingpedia.icalendar.list_events ) filter param:start_date:Date >= end_of unit:week and param:start_date:Date <= end_of unit:week + 1 unit:week => notify
ep79	where is my next meeting	now => @org.thingpedia.icalendar.list_events => notify
ep80	when does the next meeting start	now => @org.thingpedia.icalendar.list_events => notify
ep81	where is the next event in my calendar ?	now => @org.thingpedia.icalendar.list_events => notify
ep82	list my calendar events	now => @org.thingpedia.icalendar.list_events => notify
ep83	list my upcoming calendar events	now => ( @org.thingpedia.icalendar.list_events ) filter param:status:Enum(scheduled,upcoming,started,ended) == enum:upcoming => notify
ep84	list calendar events in progress	now => ( @org.thingpedia.icalendar.list_events ) filter param:status:Enum(scheduled,upcoming,started,ended) == enum:started => notify
ep85	tell me when the meeting starts	edge ( monitor ( @org.thingpedia.icalendar.list_events ) ) on param:status:Enum(scheduled,upcoming,started,ended) == enum:started => notify
ep86	alert everybody when the meeting is over	edge ( monitor ( @org.thingpedia.icalendar.list_events ) ) on param:status:Enum(scheduled,upcoming,started,ended) == enum:ended => notify
ep87	turn on the tv	now => @com.lg.tv.webos2.set_power param:power:Enum(on,off) = enum:on
ep88	raise the volume of the tv	now => @com.lg.tv.webos2.raise_volume
ep89	make a meme	now => @com.imgflip.generate => notify
ep90	throw a dice	now => @org.thingpedia.builtin.thingengine.builtin.get_random_between => notify
ep91	send a text to bob	now => @org.thingpedia.builtin.thingengine.phone.send_sms param:to:Entity(tt:phone_number) = " bob " ^^tt:username
ep92	alert me when bob texts me	monitor ( ( @org.thingpedia.builtin.thingengine.phone.sms ) filter param:sender:Entity(tt:phone_number) == " bob " ^^tt:username ) => notify
ep93	call 911	now => @org.thingpedia.builtin.thingengine.phone.call_emergency
ep94	call mom	now => @org.thingpedia.builtin.thingengine.phone.call param:number:Entity(tt:phone_number) = " mom " ^^tt:username
ep95	make a phone call	now => @org.thingpedia.builtin.thingengine.phone.call
ep96	send a text	now => @org.thingpedia.builtin.thingengine.phone.send_sms
ep97	tell mom i am late for dinner	now => @org.thingpedia.builtin.thingengine.phone.send_sms param:message:String = " i am late for dinner " param:to:Entity(tt:phone_number) = " mom " ^^tt:username
ep98	google translate	now => @com.yandex.translate.translate => notify
ep99	translate a sentence to english	now => @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " english " ^^tt:iso_lang_code => notify
R120466-0	can i haz NUMBER_0 cats	now => @com.thecatapi.get param:count:Number = NUMBER_0 => notify
R120467-0	call PHONE_NUMBER_0	now => @org.thingpedia.builtin.thingengine.phone.call param:number:Entity(tt:phone_number) = PHONE_NUMBER_0
R120471-0	xkcd NUMBER_0	now => @com.xkcd.get_comic param:number:Number = NUMBER_0 => notify
R120475-0	fb post	now => @com.facebook.post
R120478-0	give me xkcd NUMBER_0	now => @com.xkcd.get_comic param:number:Number = NUMBER_0 => notify
R120482-0	notify me if i receive an email on gmail	monitor ( @com.gmail.inbox ) on new param:email_id:Entity(com.gmail:email_id) => notify
R120487-0	send email	now => @com.gmail.send_email
R120488-0	set my thermostat between NUMBER_0 c and NUMBER_1 c	now => @thermostat.set_minmax_temperature param:high:Measure(C) = NUMBER_1 unit:C param:low:Measure(C) = NUMBER_0 unit:C
R120490-0	get gif with tag frooty	now => @com.giphy.get param:tag:Entity(tt:hashtag) = " frooty " ^^tt:hashtag => notify
R120498-0	list meme templates	now => @com.imgflip.list => notify
R120499-0	if i receive a tweet with hashtag bdaycelebrationscontinu then send a message on slack	monitor ( ( @com.twitter.home_timeline ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " bdaycelebrationscontinu " ^^tt:hashtag ) => @com.slack.send	monitor ( ( @com.twitter.search ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " bdaycelebrationscontinu " ^^tt:hashtag ) => @com.slack.send
R120500-0	monitor omlet	monitor ( @me.omlet.chat.messages param:from_me:Boolean = false ) => notify	monitor ( @me.omlet.chat.messages ) => notify
R120503-0	how far is uber	now => @com.uber.time_estimate => notify
R120508-0	raise the volume	now => @org.thingpedia.bluetooth.speaker.a2dp.raise_volume
R120518-0	send gmail	now => @com.gmail.send_email
R120519-0	notify me if i receive a tweet from craigyferg with hashtag jornalbrasil	monitor ( ( @com.twitter.home_timeline ) filter param:author:Entity(tt:username) == " craigyferg " ^^tt:username and param:hashtags:Array(Entity(tt:hashtag)) contains " jornalbrasil " ^^tt:hashtag ) => notify	monitor ( ( @com.twitter.search ) filter param:author:Entity(tt:username) == " craigyferg " ^^tt:username and param:hashtags:Array(Entity(tt:hashtag)) contains " jornalbrasil " ^^tt:hashtag ) => notify
R120520-0	give me NUMBER_0 cats	now => @com.thecatapi.get param:count:Number = NUMBER_0 => notify
R120522-0	need moar cats	now => @com.thecatapi.get => notify
R120523-0	get random int	now => @org.thingpedia.builtin.thingengine.builtin.get_random_between => notify
R120532-0	if there are new photo posts on tumblr then post picture on tumblr	monitor ( @com.tumblr.new_photo ) => @com.tumblr.blog.post_picture
R120534-0	hey almond can you monitor xkcd	monitor ( @com.xkcd.get_comic ) => notify
R120535-0	flash lights	now => @light-bulb.alert_long
R120536-0	get moar xkcd	now => @com.xkcd.random_comic => notify
R120540-0	translate to hill mari	now => @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " hill mari " ^^tt:iso_lang_code => notify
R120542-0	need NUMBER_0 moar cats	now => @com.thecatapi.get param:count:Number = NUMBER_0 => notify
R120544-0	send a message	now => @org.thingpedia.builtin.thingengine.phone.send_sms
R120546-0	get latest gmail	now => @com.gmail.inbox => notify
R120548-0	get cat	now => @com.thecatapi.get => notify
R120551-0	my profile on linkedin	now => @com.linkedin.get_profile => notify
R120552-0	increase the volume on my tv	now => @com.lg.tv.webos2.raise_volume
R120565-0	monitor if temperature greater than NUMBER_0 f	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) >= NUMBER_0 unit:F => notify	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:F => notify	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:F => notify
R120567-0	post on phd comics	now => @com.phdcomics.get_post => notify
R120568-0	hey almond can you call me an ambulance	now => @org.thingpedia.builtin.thingengine.phone.call_emergency
R120569-0	call someone	now => @org.thingpedia.builtin.thingengine.phone.call
R120574-0	tweet	now => @com.twitter.post
R120576-0	comment on issue on github	now => @com.github.comment_issue
R120577-0	monitor twitter	monitor ( @com.twitter.home_timeline ) => notify	monitor ( @com.twitter.search ) => notify
R120586-0	send me wall street journal technology on gmail	monitor ( @com.wsj.get param:section:Enum(opinions,world_news,us_business,markets,technology,lifestyle) = enum:technology ) => @com.gmail.send_email on param:message:String = event	now => @com.wsj.get param:section:Enum(opinions,world_news,us_business,markets,technology,lifestyle) = enum:technology => @com.gmail.send_email on param:message:String = event
R120588-0	notify me if i receive a tweet from kellyosbourne	monitor ( ( @com.twitter.home_timeline ) filter param:author:Entity(tt:username) == " kellyosbourne " ^^tt:username ) => notify	monitor ( ( @com.twitter.search ) filter param:author:Entity(tt:username) == " kellyosbourne " ^^tt:username ) => notify
R120589-0	more cat	now => @com.thecatapi.get => notify
R120590-0	notify me if i 'm using more than 1 gb on dropbox	edge ( monitor ( @com.dropbox.get_space_usage ) ) on param:used_space:Measure(byte) >= 1 unit:GB => notify
R120591-0	play music on speaker	now => @org.thingpedia.bluetooth.speaker.a2dp.play_music
R120596-0	disco light	now => @light-bulb.color_loop
R120600-0	pump up the volume	now => @org.thingpedia.bluetooth.speaker.a2dp.raise_volume	now => @com.lg.tv.webos2.raise_volume
R120601-0	send sms	now => @org.thingpedia.builtin.thingengine.phone.send_sms
R120603-0	get politicsnation gif	now => @com.giphy.get param:tag:Entity(tt:hashtag) = " politicsnation " ^^tt:hashtag => notify
R120606-0	rename PATH_NAME_0 in onedrive	now => @com.live.onedrive.rename_file param:old_name:Entity(tt:path_name) = PATH_NAME_0
R120617-0	call	now => @org.thingpedia.builtin.thingengine.phone.call
R120619-0	get NUMBER_0 cats	now => @com.thecatapi.get param:count:Number = NUMBER_0 => notify
R120624-0	rename PATH_NAME_0 to PATH_NAME_1 on onedrive	now => @com.live.onedrive.rename_file param:new_name:Entity(tt:path_name) = PATH_NAME_1 param:old_name:Entity(tt:path_name) = PATH_NAME_0
R120632-0	delete file PATH_NAME_0 on onedrive	now => @com.live.onedrive.delete_file param:file_name:Entity(tt:path_name) = PATH_NAME_0
R120637-0	send message on slack to hyperacusia saying	now => @com.slack.send param:channel:Entity(tt:hashtag) = " hyperacusia " ^^tt:hashtag
R120638-0	twitter get tweets	now => @com.twitter.home_timeline => notify
R120639-0	hey almond can you please show me xkcd	now => @com.xkcd.get_comic => notify
R120641-0	comment on github issue NUMBER_0 in repo PATH_NAME_0	now => @com.github.comment_issue param:issue_number:Number = NUMBER_0 param:repo_name:Entity(tt:path_name) = PATH_NAME_0
R120646-0	turn the light	now => @light-bulb.set_power
R120647-0	get cats every DURATION_0	( timer base = now , interval = DURATION_0 ) => ( @com.thecatapi.get ) => notify
R120649-0	message slack	now => @com.slack.send
R120654-0	make a meme then send it on slack	now => @com.imgflip.generate => @com.slack.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R120660-0	notify me if i receive an email on gmail from EMAIL_ADDRESS_0	monitor ( ( @com.gmail.inbox ) filter param:sender_address:Entity(tt:email_address) == EMAIL_ADDRESS_0 ) on new param:email_id:Entity(com.gmail:email_id) => notify
R120665-0	send text to PHONE_NUMBER_0	now => @org.thingpedia.builtin.thingengine.phone.send_sms param:to:Entity(tt:phone_number) = PHONE_NUMBER_0
R120671-0	turn off my tv	now => @com.lg.tv.webos2.set_power param:power:Enum(on,off) = enum:off
R120678-0	what day is today	now => @org.thingpedia.builtin.thingengine.builtin.get_date => notify
R120681-0	get giphy	now => @com.giphy.get => notify
R120682-0	search pictures	now => @com.bing.image_search => notify
R120689-0	get gifs	now => @com.giphy.get => notify
R120693-0	get memes	now => @com.imgflip.list => notify
R120695-0	get weather	now => @org.thingpedia.weather.current => notify	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify
R120698-0	call police	now => @org.thingpedia.builtin.thingengine.phone.call_emergency
R120701-0	monitor rss	monitor ( @org.thingpedia.rss.get_post ) => notify
R120702-0	send an sms to PHONE_NUMBER_0	now => @org.thingpedia.builtin.thingengine.phone.send_sms param:to:Entity(tt:phone_number) = PHONE_NUMBER_0
R120706-0	get xkcd	now => @com.xkcd.get_comic => notify
R120710-0	every day at TIME_0 show me a cat pic	( attimer time = TIME_0 ) => ( @com.thecatapi.get ) => notify
R120711-0	what 's the weather here	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify	now => @org.thingpedia.weather.current => notify
R120712-0	monitor the humidity	monitor ( @thermostat.get_humidity ) => notify
R120721-0	disco lights	now => @light-bulb.color_loop
R120722-0	cool down if temperature is above NUMBER_0 f	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) >= NUMBER_0 unit:F => notify
R120723-0	monitor asteroids	monitor ( @gov.nasa.asteroid ) => notify
R120725-0	set my thermostat to NUMBER_0 c	now => @thermostat.set_target_temperature param:value:Measure(C) = NUMBER_0 unit:C
R120735-0	monitor github issue NUMBER_0	monitor ( ( @com.github.get_issue ) filter param:number:Number == NUMBER_0 ) => notify
R120736-0	comment on issue NUMBER_0 in PATH_NAME_0 on github	now => @com.github.comment_issue param:issue_number:Number = NUMBER_0 param:repo_name:Entity(tt:path_name) = PATH_NAME_0
R120737-0	get tweets	monitor ( @com.twitter.home_timeline ) => notify	monitor ( @com.twitter.search ) => notify
R120742-0	follow latari on tumblr	monitor ( @com.tumblr.new_photo param:blog_name:Entity(tt:username) = " latari " ^^tt:username ) => notify
R120743-0	list files smaller than NUMBER_0 mb	now => ( @com.dropbox.list_folder ) filter param:file_size:Measure(byte) <= NUMBER_0 unit:MB => notify
R120744-0	set volume on my tv	now => @com.lg.tv.webos2.set_volume
R120750-0	get random integer	now => @org.thingpedia.builtin.thingengine.builtin.get_random_between => notify
R120755-0	send message on slack to cleanish	now => @com.slack.send param:channel:Entity(tt:hashtag) = " cleanish " ^^tt:hashtag
R120758-0	get cats every hour	( timer base = now , interval = 1 unit:h ) => ( @com.thecatapi.get ) => notify
R120759-0	monitor some rss feed	monitor ( @org.thingpedia.rss.get_post ) => notify
R120761-0	weather now	now => @org.thingpedia.weather.current => notify	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify
R120762-0	get me a cat	now => @com.thecatapi.get => notify
R120765-0	monitor thermostat	monitor ( @thermostat.get_temperature ) => notify
R120769-0	get NUMBER_0 cat pictures now	now => @com.thecatapi.get param:count:Number = NUMBER_0 => notify
R120772-0	phone normal	now => @org.thingpedia.builtin.thingengine.phone.set_ringer param:mode:Enum(normal,vibrate,silent) = enum:normal
R120773-0	get the latest gmail	now => @com.gmail.inbox => notify
R120789-0	call for help	now => @org.thingpedia.builtin.thingengine.phone.call_emergency
R120794-0	set my thermostat to NUMBER_0 f	now => @thermostat.set_target_temperature param:value:Measure(C) = NUMBER_0 unit:F
R120797-0	what 's the weather somewhere	now => @org.thingpedia.weather.current => notify	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify
R120808-0	how much is an uber	now => @com.uber.price_estimate => notify
R120821-0	call an ambulance	now => @org.thingpedia.builtin.thingengine.phone.call_emergency
R120824-0	watch rss	monitor ( @org.thingpedia.rss.get_post ) => notify
R120826-0	create a new file on onedrive	now => @com.live.onedrive.create_file
R120827-0	every day at TIME_0 send a text to PHONE_NUMBER_0	attimer time = TIME_0 => @org.thingpedia.builtin.thingengine.phone.send_sms param:to:Entity(tt:phone_number) = PHONE_NUMBER_0
R120839-0	get nasa curiosity pic	now => @gov.nasa.rover => notify
R120842-0	post on fucking twitter now	now => @com.twitter.post
R120845-0	what 's the time	now => @org.thingpedia.builtin.thingengine.builtin.get_time => notify
R120849-0	send a text	now => @org.thingpedia.builtin.thingengine.phone.send_sms
R120853-0	call fire dept	now => @org.thingpedia.builtin.thingengine.phone.call_emergency
R120858-0	tweet a message	now => @com.twitter.post
R120861-0	every day at TIME_0 give me NUMBER_0 cats	( attimer time = TIME_0 ) => ( @com.thecatapi.get param:count:Number = NUMBER_0 ) => notify
R120865-0	monitor github issues	monitor ( @com.github.get_issue ) => notify
R120872-0	monitor my tweets	monitor ( @com.twitter.my_tweets ) => notify
R120876-0	NUMBER_0 cats	now => @com.thecatapi.get param:count:Number = NUMBER_0 => notify
R120882-0	list youtube channels by category	now => @com.youtube.channels_by_category => notify
R120886-0	notify me if i receive an important email on gmail from EMAIL_ADDRESS_0	monitor ( ( @com.gmail.inbox param:is_important:Boolean = true ) filter param:sender_address:Entity(tt:email_address) == EMAIL_ADDRESS_0 ) on new param:email_id:Entity(com.gmail:email_id) => notify
R120888-0	translate from kyrgyz	now => @com.yandex.translate.translate param:source_language:Entity(tt:iso_lang_code) = " kyrgyz " ^^tt:iso_lang_code => notify
R120891-0	set ringer	now => @org.thingpedia.builtin.thingengine.phone.set_ringer
R120892-0	get gif	now => @com.giphy.get => notify
R120893-0	give me NUMBER_0 cats once a day at TIME_0	( attimer time = TIME_0 ) => ( @com.thecatapi.get param:count:Number = NUMBER_0 ) => notify
R120908-0	send a text to PHONE_NUMBER_0	now => @org.thingpedia.builtin.thingengine.phone.send_sms param:to:Entity(tt:phone_number) = PHONE_NUMBER_0
R120909-0	if i receive a message on slack then flash lights on hue	monitor ( @com.slack.channel_history ) => @light-bulb.alert_long
R120910-0	phd comics	now => @com.phdcomics.get_post => notify
R120914-0	send sms every day at TIME_0	attimer time = TIME_0 => @org.thingpedia.builtin.thingengine.phone.send_sms
R120941-0	search images whose width is less than NUMBER_0	now => ( @com.bing.image_search ) filter param:width:Number <= NUMBER_0 => notify
R120942-0	search images whose width is more than NUMBER_0 and height is less than NUMBER_1	now => ( @com.bing.image_search ) filter param:height:Number <= NUMBER_1 and param:width:Number >= NUMBER_0 => notify
R120949-0	flash my hue at TIME_0	attimer time = TIME_0 => @light-bulb.alert_long
R120950-0	list memes	now => @com.imgflip.list => notify
R120955-0	post all my tweets to facebook	monitor ( @com.twitter.my_tweets ) => @com.facebook.post on param:status:String = event
R120961-0	send a me random gif every DURATION_0	( timer base = now , interval = DURATION_0 ) => ( @com.giphy.get ) => notify
R120962-0	send a me random itsathursday gif every DURATION_0	( timer base = now , interval = DURATION_0 ) => ( @com.giphy.get param:tag:Entity(tt:hashtag) = " itsathursday " ^^tt:hashtag ) => notify
R120963-0	give me a flatsmumbai gif	now => @com.giphy.get param:tag:Entity(tt:hashtag) = " flatsmumbai " ^^tt:hashtag => notify
R120965-0	send an email on gmail to EMAIL_ADDRESS_0	now => @com.gmail.send_email param:to:Entity(tt:email_address) = EMAIL_ADDRESS_0
R120977-0	notify me when my next appointment starts on my calendar	edge ( monitor ( @org.thingpedia.icalendar.list_events ) ) on param:status:Enum(scheduled,upcoming,started,ended) == enum:started => notify
R120981-0	when are my next meetings	now => @org.thingpedia.icalendar.list_events => notify
R120982-0	generate a pepperidge farm remembers meme	now => @com.imgflip.generate param:template:Entity(imgflip:meme_id) = " pepperidge farm remembers " ^^imgflip:meme_id => notify
R120992-0	what 's my linkedin profile	now => @com.linkedin.get_profile => notify
R120996-0	flash the hue if there is a dangerous asteroid nearby	edge ( monitor ( @gov.nasa.asteroid ) ) on param:is_dangerous:Boolean == true => @light-bulb.alert_long
R120998-0	flash the lights when the temperature is above NUMBER_0 c	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) >= NUMBER_0 unit:C => @light-bulb.alert_long
R120999-0	every day upload all nasa apod pictures to onedrive	( timer base = now , interval = 1 unit:day ) => ( @gov.nasa.apod ) => @com.live.onedrive.upload_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121000-0	upload a cat picture to onedrive	now => @com.thecatapi.get => @com.live.onedrive.upload_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121009-0	send phdcomics to slack	now => @com.phdcomics.get_post => @com.slack.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121010-0	send a message to aragorn on omlet	now => @me.omlet.chat.send_to param:to:Entity(tt:username) = " aragorn " ^^tt:username
R121011-0	set my phone to vibrate	now => @org.thingpedia.builtin.thingengine.phone.set_ringer param:mode:Enum(normal,vibrate,silent) = enum:vibrate
R121012-0	make my phone vibrate	now => @org.thingpedia.builtin.thingengine.phone.set_ringer param:mode:Enum(normal,vibrate,silent) = enum:vibrate
R121013-0	if my thermostat is less than 0 f call emergency	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) <= 0 unit:F => @org.thingpedia.builtin.thingengine.phone.call_emergency
R121018-0	auto reply to my twitter dm	monitor ( @com.twitter.direct_messages ) => @com.twitter.send_direct_message on param:to:Entity(tt:username) = param:sender:Entity(tt:username)
R121019-0	auto reply to my twitter dms	monitor ( @com.twitter.direct_messages ) => @com.twitter.send_direct_message on param:to:Entity(tt:username) = param:sender:Entity(tt:username)
R121020-0	auto reply to slack	monitor ( @com.slack.channel_history ) => @com.slack.send on param:channel:Entity(tt:hashtag) = param:channel:Entity(tt:hashtag)
R121024-0	show the best of youtube	now => @com.youtube.channels_by_category param:category_id:Enum(best_of_youtube,recommended,paid,music,comedy,film_and_entertainment,gaming,beauty_and_fashion,from_tv,automotive,animation,sports,diy,tech,science,cooking,causes,news_and_politics,lifestyle) = enum:best_of_youtube => notify
R121025-0	list youtube music channels	now => @com.youtube.channels_by_category param:category_id:Enum(best_of_youtube,recommended,paid,music,comedy,film_and_entertainment,gaming,beauty_and_fashion,from_tv,automotive,animation,sports,diy,tech,science,cooking,causes,news_and_politics,lifestyle) = enum:music => notify
R121027-0	send xkcd to slack	now => @com.xkcd.get_comic => @com.slack.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121035-0	send the weather on slack	now => @org.thingpedia.weather.current => @com.slack.send on param:message:String = event	now => @org.thingpedia.weather.current param:location:Location = location:current_location => @com.slack.send on param:message:String = event
R121036-0	set phone to vibrate at TIME_0	attimer time = TIME_0 => @org.thingpedia.builtin.thingengine.phone.set_ringer param:mode:Enum(normal,vibrate,silent) = enum:vibrate
R121042-0	tweet wall street journal headlines	monitor ( @com.wsj.get param:section:Enum(opinions,world_news,us_business,markets,technology,lifestyle) = enum:opinions ) => @com.twitter.post on param:status:String = event
R121046-0	send a cat picture to omlet	now => @com.thecatapi.get => @me.omlet.chat.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121047-0	send a cat picture to avagrace on omlet	now => @com.thecatapi.get => @me.omlet.chat.send_picture param:to:Entity(tt:username) = " avagrace " ^^tt:username on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121049-0	if the weather is colder than NUMBER_0 c then set my thermostat to NUMBER_1 c	now => ( @org.thingpedia.weather.current ) filter param:temperature:Measure(C) <= NUMBER_0 unit:C => @thermostat.set_target_temperature param:value:Measure(C) = NUMBER_1 unit:C	now => ( @org.thingpedia.weather.current param:location:Location = location:current_location ) filter param:temperature:Measure(C) <= NUMBER_0 unit:C => @thermostat.set_target_temperature param:value:Measure(C) = NUMBER_1 unit:C
R121052-0	get my instagram pictures	now => @com.instagram.get_pictures => notify
R121053-0	monitor my new instagram pictures	monitor ( @com.instagram.get_pictures ) => notify
R121056-0	mute my phone at TIME_0	attimer time = TIME_0 => @org.thingpedia.builtin.thingengine.phone.set_ringer param:mode:Enum(normal,vibrate,silent) = enum:silent
R121059-0	post a fucking picture on twitter	now => @com.twitter.post_picture
R121060-0	post my instagram pictures on twitter	monitor ( @com.instagram.get_pictures ) => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)	now => @com.instagram.get_pictures => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121061-0	post my instagram pictures on facebook	monitor ( @com.instagram.get_pictures ) => @com.facebook.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)	now => @com.instagram.get_pictures => @com.facebook.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture
R121062-0	post my new instagram pictures on facebook	monitor ( @com.instagram.get_pictures ) => @com.facebook.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)	now => @com.instagram.get_pictures => @com.facebook.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121063-0	post my new instagram pictures on twitter	monitor ( @com.instagram.get_pictures ) => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)	now => @com.instagram.get_pictures => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121064-0	tweet all new xkcds	monitor ( @com.xkcd.get_comic ) => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121065-0	tweet new xkcds	monitor ( @com.xkcd.get_comic ) => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121067-0	every day tweet the new nasa astronomy picture of the day	monitor ( @gov.nasa.apod ) => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121068-0	every day post the new nasa astronomy picture of the day on facebook	monitor ( @gov.nasa.apod ) => @com.facebook.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121069-0	post new xkcds on tumblr	monitor ( @com.xkcd.get_comic ) => @com.tumblr.blog.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121070-0	post new my instagram pictures on tumblr	monitor ( @com.instagram.get_pictures ) => @com.tumblr.blog.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121071-0	post my new instagram pictures on tumblr	monitor ( @com.instagram.get_pictures ) => @com.tumblr.blog.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121076-0	tweet if the temperature is less than NUMBER_0 f	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) <= NUMBER_0 unit:F => @com.twitter.post	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) <= NUMBER_0 unit:F => @com.twitter.post	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) <= NUMBER_0 unit:F => @com.twitter.post
R121084-0	post on tumblr if the temperature is more than NUMBER_0 f	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) >= NUMBER_0 unit:F => @com.tumblr.blog.post_text	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:F => @com.tumblr.blog.post_text	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:F => @com.tumblr.blog.post_text
R121085-0	share a link on linkedin if the temperature is more than NUMBER_0 f	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) >= NUMBER_0 unit:F => @com.linkedin.share	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:F => @com.linkedin.share	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:F => @com.linkedin.share
R121086-0	disco lights if the temperature is more than NUMBER_0 f	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) >= NUMBER_0 unit:F => @light-bulb.color_loop	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:F => @light-bulb.color_loop	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:F => @light-bulb.color_loop
R121087-0	disco lights if the temperature is less than NUMBER_0 c	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) <= NUMBER_0 unit:C => @light-bulb.color_loop	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) <= NUMBER_0 unit:F => @light-bulb.color_loop	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) <= NUMBER_0 unit:F => @light-bulb.color_loop
R121088-0	disco lights if the temperature is exactly NUMBER_0 c	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) == NUMBER_0 unit:C => @light-bulb.color_loop	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) == NUMBER_0 unit:F => @light-bulb.color_loop	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) == NUMBER_0 unit:F => @light-bulb.color_loop
R121089-0	set volume on my speaker to NUMBER_0 %	now => @org.thingpedia.bluetooth.speaker.a2dp.set_volume param:percent:Number = NUMBER_0
R121090-0	if a new xkcd comes out then notify me	monitor ( @com.xkcd.get_comic ) => notify
R121091-0	if a new xkcd comes out then flash the alert lights	monitor ( @com.xkcd.get_comic ) => @light-bulb.alert_long
R121092-0	if it 's TIME_0 in the morning then flash the alert lights	attimer time = TIME_0 => @light-bulb.alert_long
R121103-0	if someone tweets with hashtag foreverjuntas then post it on facebook	monitor ( ( @com.twitter.home_timeline ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " foreverjuntas " ^^tt:hashtag ) => @com.facebook.post on param:status:String = event	monitor ( ( @com.twitter.search ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " foreverjuntas " ^^tt:hashtag ) => @com.facebook.post on param:status:String = event
R121104-0	if a post a picture on instagram then flash the lights	monitor ( @com.instagram.get_pictures ) => @light-bulb.alert_long
R121105-0	if i post a picture on instagram then flash the lights	monitor ( @com.instagram.get_pictures ) => @light-bulb.alert_long
R121106-0	every time i post a picture on instagram flash the lights	monitor ( @com.instagram.get_pictures ) => @light-bulb.alert_long
R121107-0	flash the lights every time i post a picture on instagram	monitor ( @com.instagram.get_pictures ) => @light-bulb.alert_long
R121108-0	flash the lights when i post a picture on instagram	monitor ( @com.instagram.get_pictures ) => @light-bulb.alert_long
R121111-0	if i post a picture on instagram then post it on twitter	monitor ( @com.instagram.get_pictures ) => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121113-0	monitor if the temperature is between NUMBER_0 f and NUMBER_1 f	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) <= NUMBER_1 unit:F and param:value:Measure(C) >= NUMBER_0 unit:F => notify
R121115-0	if the temperature is between NUMBER_0 f and NUMBER_1 f then flash the light	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) <= NUMBER_1 unit:F and param:value:Measure(C) >= NUMBER_0 unit:F => @light-bulb.alert_long
R121116-0	flash the light	now => @light-bulb.alert_long
R121118-0	if i post a picture on instagram with hashtag amethist then post it on twitter	monitor ( ( @com.instagram.get_pictures ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " amethist " ^^tt:hashtag ) => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121119-0	if i post a picture on instagram with hashtag cali then notify me	monitor ( ( @com.instagram.get_pictures ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " cali " ^^tt:hashtag ) => notify
R121120-0	if i post a picture on instagram at home then post it on twitter	monitor ( ( @com.instagram.get_pictures ) filter param:location:Location == location:home ) => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121121-0	post a tweet at TIME_0	attimer time = TIME_0 => @com.twitter.post
R121122-0	tweet at TIME_0	attimer time = TIME_0 => @com.twitter.post
R121124-0	ig pictures to twitter	now => @com.instagram.get_pictures => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121138-0	post my instagram pictures to slack	now => @com.instagram.get_pictures => @com.slack.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121139-0	post all my instagram pictures to slack	now => @com.instagram.get_pictures => @com.slack.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121140-0	send a nasa picture to slack every day at TIME_0	( attimer time = TIME_0 ) => ( @gov.nasa.apod ) => @com.slack.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121151-0	turn off the lights at TIME_0	attimer time = TIME_0 => @light-bulb.set_power param:power:Enum(on,off) = enum:off
R121158-0	get cats	now => @com.thecatapi.get => notify
R121163-0	post on slack	now => @com.slack.send
R121166-0	post on tumblr	now => @com.tumblr.blog.post_text
R121169-0	what 's the weather today	now => @org.thingpedia.weather.current => notify	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify
R121174-0	send a message to unnobilitated on slack	now => @com.slack.send param:channel:Entity(tt:hashtag) = " unnobilitated " ^^tt:hashtag
R121177-0	send cat pictures on gmail	now => @com.thecatapi.get => @com.gmail.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121179-0	send an sms	now => @org.thingpedia.builtin.thingengine.phone.send_sms
R121180-0	get xkcd with number is 1	now => @com.xkcd.get_comic param:number:Number = 1 => notify
R121181-0	monitor new messages on omlet	monitor ( @me.omlet.chat.messages param:from_me:Boolean = false ) => notify
R121183-0	what 's the weather	now => @org.thingpedia.weather.current => notify	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify
R121187-0	set my thermostat between NUMBER_0 c and high NUMBER_1 c	now => @thermostat.set_minmax_temperature param:high:Measure(C) = NUMBER_1 unit:C param:low:Measure(C) = NUMBER_0 unit:C
R121188-0	notify me if i 'm using more than NUMBER_0 mb on dropbox	edge ( monitor ( @com.dropbox.get_space_usage ) ) on param:used_space:Measure(byte) >= NUMBER_0 unit:MB => notify
R121189-0	monitor sms	monitor ( @org.thingpedia.builtin.thingengine.phone.sms ) => notify
R121192-0	list events	now => @org.thingpedia.icalendar.list_events => notify
R121203-0	tell me if someone tweets on twitter	monitor ( @com.twitter.home_timeline ) => notify
R121208-0	how much am i using on dropbox ?	now => @com.dropbox.get_space_usage => notify
R121210-0	send me new articles from the wall street journal us business section on gmail	monitor ( @com.wsj.get param:section:Enum(opinions,world_news,us_business,markets,technology,lifestyle) = enum:us_business ) => @com.gmail.send_email on param:message:String = event
R121215-0	hey almond what time is it	now => @org.thingpedia.builtin.thingengine.builtin.get_time => notify
R121217-0	send cat picture on gmail	now => @com.thecatapi.get => @com.gmail.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121218-0	turn on my lg tv	now => @com.lg.tv.webos2.set_power param:power:Enum(on,off) = enum:on
R121220-0	i want NUMBER_0 cats	now => @com.thecatapi.get param:count:Number = NUMBER_0 => notify
R121226-0	get xkcd with number NUMBER_0	now => @com.xkcd.get_comic param:number:Number = NUMBER_0 => notify
R121227-0	monitor my twitter	monitor ( @com.twitter.home_timeline ) => notify	monitor ( @com.twitter.my_tweets ) => notify
R121230-0	hey almond can you give me NUMBER_0 cats	now => @com.thecatapi.get param:count:Number = NUMBER_0 => notify
R121235-0	turn off my lg tv	now => @com.lg.tv.webos2.set_power param:power:Enum(on,off) = enum:off
R121238-0	send cat pictures	now => @com.thecatapi.get => @com.gmail.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121240-0	translate from danish to danish	now => @com.yandex.translate.translate param:source_language:Entity(tt:iso_lang_code) = " danish " ^^tt:iso_lang_code param:target_language:Entity(tt:iso_lang_code) = " danish " ^^tt:iso_lang_code => notify
R121240-1	translate from dutch to kannada	now => @com.yandex.translate.translate param:source_language:Entity(tt:iso_lang_code) = " dutch " ^^tt:iso_lang_code param:target_language:Entity(tt:iso_lang_code) = " kannada " ^^tt:iso_lang_code => notify
R121244-0	text a friend	now => @org.thingpedia.builtin.thingengine.phone.send_sms
R121246-0	monitor xkcd	monitor ( @com.xkcd.get_comic ) => notify
R121272-0	call the police	now => @org.thingpedia.builtin.thingengine.phone.call_emergency
R121273-0	set my thermostat min and max	now => @thermostat.set_minmax_temperature
R121278-0	loop colors on hue	now => @light-bulb.color_loop
R121282-0	send cat pictures on slack	now => @com.thecatapi.get => @com.slack.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121283-0	get NUMBER_0 nasa curiosity pics	now => @gov.nasa.rover param:count:Number = NUMBER_0 => notify
R121284-0	honk tesla	now => @car.honk_horn
R121285-0	send a message on slack	now => @com.slack.send
R121286-0	lower volume on my lg tv	now => @com.lg.tv.webos2.lower_volume
R121287-0	send me wall street journal opinions on gmail	now => @com.wsj.get param:section:Enum(opinions,world_news,us_business,markets,technology,lifestyle) = enum:opinions => @com.gmail.send_email on param:message:String = event
R121289-0	send cat picture	now => @com.thecatapi.get => @com.gmail.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)	now => @com.thecatapi.get => notify
R121290-0	call 911	now => @org.thingpedia.builtin.thingengine.phone.call_emergency
R121296-0	send message on twitter	now => @com.twitter.send_direct_message
R121297-0	call a friend	now => @org.thingpedia.builtin.thingengine.phone.call
R121309-0	chat with specter-wan on slack	now => @com.slack.send param:channel:Entity(tt:hashtag) = " specter-wan " ^^tt:hashtag
R121312-0	share this link on linkedin	now => @com.linkedin.share
R121315-0	get my linkedin profile	now => @com.linkedin.get_profile => notify
R121317-0	get xkcd NUMBER_0	now => @com.xkcd.get_comic param:number:Number = NUMBER_0 => notify
R121323-0	get nasa asteroid picture of the day	now => @gov.nasa.apod => notify
R121339-0	post pic on facebook	now => @com.facebook.post_picture
R121340-0	what time is it	now => @org.thingpedia.builtin.thingengine.builtin.get_time => notify
R121343-0	once a day get cats	( timer base = now , interval = 1 unit:day ) => ( @com.thecatapi.get ) => notify
R121344-0	send me new articles from the wall street journal technology section on gmail	monitor ( @com.wsj.get param:section:Enum(opinions,world_news,us_business,markets,technology,lifestyle) = enum:technology ) => @com.gmail.send_email on param:message:String = event
R121346-0	get a cat everyday at TIME_0	( attimer time = TIME_0 ) => ( @com.thecatapi.get ) => notify
R121352-0	every day at TIME_0 send a text	attimer time = TIME_0 => @org.thingpedia.builtin.thingengine.phone.send_sms
R121354-0	get random number	now => @org.thingpedia.builtin.thingengine.builtin.get_random_between => notify
R121356-0	play something on the speaker	now => @org.thingpedia.bluetooth.speaker.a2dp.play_music
R121363-0	notify me if i receive an important email on gmail	monitor ( @com.gmail.inbox param:is_important:Boolean = true ) on new param:email_id:Entity(com.gmail:email_id) => notify
R121367-0	send picture on omlet to nikash	now => @me.omlet.chat.send_picture param:to:Entity(tt:username) = " nikash " ^^tt:username
R121370-0	increase volume on my tv	now => @com.lg.tv.webos2.raise_volume
R121374-0	watch this rss feed	monitor ( @org.thingpedia.rss.get_post ) => notify
R121376-0	list files greater than NUMBER_0 kb	now => ( @com.dropbox.list_folder ) filter param:file_size:Measure(byte) >= NUMBER_0 unit:KB => notify
R121380-0	twitter tweet	now => @com.twitter.post
R121389-0	send a slack message to hibernical	now => @com.slack.send param:channel:Entity(tt:hashtag) = " hibernical " ^^tt:hashtag
R121398-0	get date	now => @org.thingpedia.builtin.thingengine.builtin.get_date => notify
R121401-0	post to twitter	now => @com.twitter.post
R121404-0	get xkcd number NUMBER_0	now => @com.xkcd.get_comic param:number:Number = NUMBER_0 => notify
R121411-0	post on phdcomics	now => @com.phdcomics.get_post => notify
R121416-0	set volume to NUMBER_0 on my tv	now => @com.lg.tv.webos2.set_volume param:percent:Number = NUMBER_0
R121424-0	how far is uber from home	now => @com.uber.time_estimate param:start:Location = location:home => notify
R121430-0	every DURATION_0 send message on slack to tenuous	timer base = now , interval = DURATION_0 => @com.slack.send param:channel:Entity(tt:hashtag) = " tenuous " ^^tt:hashtag
R121433-10	translate from greek to greek	now => @com.yandex.translate.translate param:source_language:Entity(tt:iso_lang_code) = " greek " ^^tt:iso_lang_code param:target_language:Entity(tt:iso_lang_code) = " greek " ^^tt:iso_lang_code => notify
R121441-0	get cat pictures now	now => @com.thecatapi.get => notify
R121444-0	comment on issue NUMBER_0 on github	now => @com.github.comment_issue param:issue_number:Number = NUMBER_0
R121447-0	show my security camera	now => @security-camera.current_event => notify
R121453-0	post a tweet	now => @com.twitter.post
R121457-0	get nasa apod	now => @gov.nasa.apod => notify
R121461-0	send me a daily cat	( timer base = now , interval = 1 unit:day ) => ( @com.thecatapi.get ) => notify
R121464-0	set phone to vibrate	now => @org.thingpedia.builtin.thingengine.phone.set_ringer param:mode:Enum(normal,vibrate,silent) = enum:vibrate
R121475-0	search images whose width is less than NUMBER_0 and height is less than NUMBER_1	now => ( @com.bing.image_search ) filter param:height:Number <= NUMBER_1 and param:width:Number <= NUMBER_0 => notify
R121478-0	every day at TIME_0 give me the nasa astronomical picture of the day	( attimer time = TIME_0 ) => ( @gov.nasa.apod ) => notify
R121485-0	send something to PHONE_NUMBER_0	now => @org.thingpedia.builtin.thingengine.phone.send_sms param:to:Entity(tt:phone_number) = PHONE_NUMBER_0
R121490-0	when are my next appointments	now => @org.thingpedia.icalendar.list_events => notify
R121499-0	upload a meme to onedrive	now => @com.imgflip.generate => @com.live.onedrive.upload_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121508-0	send phdcomics to omlet	now => @com.phdcomics.get_post => @me.omlet.chat.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121509-0	send latest xkcd to omlet	now => @com.xkcd.get_comic => @me.omlet.chat.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121510-0	monitor xkcd then send it to omlet	monitor ( @com.xkcd.get_comic ) => @me.omlet.chat.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121511-0	disco lights every day at TIME_0	attimer time = TIME_0 => @light-bulb.color_loop
R121516-0	auto reply to my emails	monitor ( @com.gmail.inbox ) on new param:email_id:Entity(com.gmail:email_id) => @com.gmail.reply on param:email_id:Entity(com.gmail:email_id) = param:email_id:Entity(com.gmail:email_id)
R121518-0	get a random xkcd	now => @com.xkcd.random_comic => notify
R121521-0	list comedy channels on youtube	now => @com.youtube.channels_by_category param:category_id:Enum(best_of_youtube,recommended,paid,music,comedy,film_and_entertainment,gaming,beauty_and_fashion,from_tv,automotive,animation,sports,diy,tech,science,cooking,causes,news_and_politics,lifestyle) = enum:comedy => notify
R121527-0	if the weather is colder than NUMBER_0 c then set my thermostat to NUMBER_1 f	now => ( @org.thingpedia.weather.current ) filter param:temperature:Measure(C) <= NUMBER_0 unit:C => @thermostat.set_target_temperature param:value:Measure(C) = NUMBER_1 unit:F	now => ( @org.thingpedia.weather.current param:location:Location = location:current_location ) filter param:temperature:Measure(C) <= NUMBER_0 unit:C => @thermostat.set_target_temperature param:value:Measure(C) = NUMBER_1 unit:F	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature <= NUMBER_0 unit:C => @thermostat.set_target_temperature param:value = NUMBER_1 unit:F	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature <= NUMBER_0 unit:C => @thermostat.set_target_temperature param:value = NUMBER_1 unit:F
R121530-0	unmute my ringer in the morning at TIME_0	attimer time = TIME_0 => @org.thingpedia.builtin.thingengine.phone.set_ringer param:mode:Enum(normal,vibrate,silent) = enum:normal
R121531-0	automatically post my tweets on facebook when i include hashtag jackfowler	monitor ( ( @com.twitter.my_tweets ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " jackfowler " ^^tt:hashtag ) => @com.facebook.post on param:status:String = event
R121532-0	tweet when a new xkcd comes out	monitor ( @com.xkcd.get_comic ) => @com.twitter.post
R121533-0	post new xkcds on facebook	monitor ( @com.xkcd.get_comic ) => @com.facebook.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121536-0	disco lights if the humidity is more than NUMBER_0 %	edge ( monitor ( @thermostat.get_humidity ) ) on param:value:Number >= NUMBER_0 => @light-bulb.color_loop
R121537-0	if the temperature is less than NUMBER_0 c then set volume on my speaker to NUMBER_1 %	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) <= NUMBER_0 unit:C => @org.thingpedia.bluetooth.speaker.a2dp.set_volume param:percent:Number = NUMBER_1	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) <= NUMBER_0 unit:C => @org.thingpedia.bluetooth.speaker.a2dp.set_volume param:percent:Number = NUMBER_1	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) <= NUMBER_0 unit:C => @org.thingpedia.bluetooth.speaker.a2dp.set_volume param:percent:Number = NUMBER_1
R121538-0	if the thermostat says less than NUMBER_0 c then set volume on my speaker to NUMBER_1 %	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) <= NUMBER_0 unit:C => @org.thingpedia.bluetooth.speaker.a2dp.set_volume param:percent:Number = NUMBER_1
R121539-0	if the thermostat says less than NUMBER_0 c then notify me	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) <= NUMBER_0 unit:C => notify
R121542-0	when i post a picture on instagram notify me	monitor ( @com.instagram.get_pictures ) => notify
R121543-0	when i post a picture on instagram post it on twitter	monitor ( @com.instagram.get_pictures ) => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121548-0	if i post a picture on instagram at home then notify me	monitor ( ( @com.instagram.get_pictures ) filter param:location:Location == location:home ) => notify
R121550-0	post my ig pictures on twitter	monitor ( @com.instagram.get_pictures ) => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121552-0	ig pictures to facebook	monitor ( @com.instagram.get_pictures ) => @com.facebook.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R121586-0	monitor phd comics	monitor ( @com.phdcomics.get_post ) => notify
R122785-0	when i publish a new picture on instagram , post it on twitter	monitor ( @com.instagram.get_pictures ) => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R122793-0	monitor phdcomics	monitor ( @com.phdcomics.get_post ) => notify
R122796-0	silence phone	now => @org.thingpedia.builtin.thingengine.phone.set_ringer param:mode:Enum(normal,vibrate,silent) = enum:silent
R122797-0	search youtube	now => @com.youtube.search_videos => notify
R122799-0	monitor email	monitor ( @com.gmail.inbox ) on new param:email_id:Entity(com.gmail:email_id) => notify
R122805-0	send post now	now => @com.twitter.post
R122832-0	tv off	now => @com.lg.tv.webos2.set_power param:power:Enum(on,off) = enum:off
R122834-0	receive a tweet on twitter	monitor ( @com.twitter.home_timeline ) => notify
R122835-0	new xkcd	monitor ( @com.xkcd.get_comic ) => notify
R122837-0	get a gif with some tag	now => @com.giphy.get param:tag:Entity(tt:hashtag) = undefined => notify
R122908-0	turn off my security camera	now => @security-camera.set_power param:power:Enum(on,off) = enum:off
R122909-0	turn on my security camera	now => @security-camera.set_power param:power:Enum(on,off) = enum:on
R122910-0	what 's the temperature	now => @thermostat.get_temperature => notify
R122913-0	turn on security camera	now => @security-camera.set_power param:power:Enum(on,off) = enum:on
R122914-0	every day at TIME_0 send snapshot on security camera	( attimer time = TIME_0 ) => ( @security-camera.current_event ) => notify
R122915-0	every day at TIME_0 send snapshot of security camera on gmail	( attimer time = TIME_0 ) => ( @security-camera.current_event ) => @com.gmail.send_email
R123028-0	get hvac state	now => @thermostat.get_hvac_state => notify
R123029-0	what 's the temperature on my thermostat	now => @thermostat.get_temperature => notify
R123030-0	show the temperature on my thermostat	now => @thermostat.get_temperature => notify
R123031-0	get temperature	now => @thermostat.get_temperature => notify	now => @org.thingpedia.weather.current => notify	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify
R123032-0	what 's my thermostat saying	now => @thermostat.get_temperature => notify
R123033-0	what 's the humidity on my thermostat	now => @thermostat.get_humidity => notify
R123034-0	is my heating on in my thermostat	now => @thermostat.get_hvac_state => notify
R123035-0	is my heating on	now => @thermostat.get_hvac_state => notify
R123036-0	is the heater on	now => @thermostat.get_hvac_state => notify
R123037-0	is the hvac cooling or heating	now => @thermostat.get_hvac_state => notify
R123038-0	is the ac cooling or heating	now => @thermostat.get_hvac_state => notify
R123039-0	get ac state	now => @thermostat.get_hvac_state => notify
R123041-0	flash the lights if the camera detects motion	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => @light-bulb.alert_long
R123042-0	flash the lights if the camera detects a person	monitor ( ( @security-camera.current_event ) filter param:has_person:Boolean == true ) => @light-bulb.alert_long
R123043-0	flash the lights if the camera detects sounds	monitor ( ( @security-camera.current_event ) filter param:has_sound:Boolean == true ) => @light-bulb.alert_long
R123044-0	notify me if the camera detects sounds	monitor ( ( @security-camera.current_event ) filter param:has_sound:Boolean == true ) => notify
R123045-0	notify me if the camera detects a person	monitor ( ( @security-camera.current_event ) filter param:has_person:Boolean == true ) => notify
R123046-0	notify me if the camera detects motion and a person	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true and param:has_person:Boolean == true ) => notify
R123047-0	notify me if the camera detects motion and sound	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true and param:has_sound:Boolean == true ) => notify
R123048-0	get a snapshot from the camera every DURATION_0	( timer base = now , interval = DURATION_0 ) => ( @security-camera.current_event ) => notify
R123049-0	get a snapshot from the camera every hour	( timer base = now , interval = 1 unit:h ) => ( @security-camera.current_event ) => notify
R123052-0	when my camera detects motion post it on facebook	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => @com.facebook.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R123053-0	when my camera detects a person post it on facebook	monitor ( ( @security-camera.current_event ) filter param:has_person:Boolean == true ) => @com.facebook.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R123054-0	when my camera detects something post it on tumblr	monitor ( @security-camera.current_event ) => @com.tumblr.blog.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R123055-0	when my camera detects motion post it on tumblr	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => @com.tumblr.blog.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R123056-0	when my camera detects a person post it on tumblr	monitor ( ( @security-camera.current_event ) filter param:has_person:Boolean == true ) => @com.tumblr.blog.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R123057-0	when my camera detects a person post it on twitter	monitor ( ( @security-camera.current_event ) filter param:has_person:Boolean == true ) => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R123058-0	when my camera detects motion post it on twitter	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R123060-0	when my camera detects motion send it on slack	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => @com.slack.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R123064-0	when my camera detects no person turn off the tv	monitor ( ( @security-camera.current_event ) filter param:has_person:Boolean == false ) => @com.lg.tv.webos2.set_power param:power:Enum(on,off) = enum:off
R123065-0	turn on my camera at TIME_0	attimer time = TIME_0 => @security-camera.set_power param:power:Enum(on,off) = enum:on
R123066-0	turn off my camera at TIME_0	attimer time = TIME_0 => @security-camera.set_power param:power:Enum(on,off) = enum:off
R123067-0	turn off my camera at TIME_0 in the morning	attimer time = TIME_0 => @security-camera.set_power param:power:Enum(on,off) = enum:off
R123070-0	send a message on omlet when the security camera detects motion	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => @me.omlet.chat.send_to on param:message:String = event
R123071-0	send a message on omlet when the security camera detects a person	monitor ( ( @security-camera.current_event ) filter param:has_person:Boolean == true ) => @me.omlet.chat.send_to on param:message:String = event
R123074-0	how hot is it on my thermostat	now => @thermostat.get_temperature => notify
R123075-0	how hot is it	now => @thermostat.get_temperature => notify
R123076-0	how cold is it	now => @thermostat.get_temperature => notify
R123077-0	please almond tell me what 's the temperature	now => @thermostat.get_temperature => notify
R123079-0	send nest snapshot on slack	now => @security-camera.current_event => @com.slack.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R123080-0	what 's the temperature ?	now => @thermostat.get_temperature => notify	now => @org.thingpedia.weather.current => notify	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify
R123083-0	show me the video if there is motion on my security camera	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => notify
R123085-0	get liam neeson taken meme	now => @com.imgflip.generate param:template:Entity(imgflip:meme_id) = " liam neeson taken " ^^imgflip:meme_id => notify
R123115-0	tell me if there is motion on my security camera	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => notify
R123117-0	translate new wall street journal opinion posts	( monitor ( @com.wsj.get param:section:Enum(opinions,world_news,us_business,markets,technology,lifestyle) = enum:opinions ) ) => ( @com.yandex.translate.translate ) on param:text:String = event => notify
R123118-0	translate new wall street journal technology posts	( monitor ( @com.wsj.get param:section:Enum(opinions,world_news,us_business,markets,technology,lifestyle) = enum:technology ) ) => ( @com.yandex.translate.translate ) on param:text:String = event => notify
R123120-0	if new post in wall street journal technology then translate it	( monitor ( @com.wsj.get param:section:Enum(opinions,world_news,us_business,markets,technology,lifestyle) = enum:technology ) ) => ( @com.yandex.translate.translate ) on param:text:String = event => notify
R123121-0	if new post in wall street journal world news then translate it	( monitor ( @com.wsj.get param:section:Enum(opinions,world_news,us_business,markets,technology,lifestyle) = enum:world_news ) ) => ( @com.yandex.translate.translate ) on param:text:String = event => notify
R123123-0	show me the security camera	now => @security-camera.current_event => notify
R123124-0	get new xkcd	now => @com.xkcd.get_comic => notify
R123125-0	send me xkcd comic if there is a new one	monitor ( @com.xkcd.get_comic ) => notify	( monitor ( @com.xkcd.get_comic ) ) => ( @com.xkcd.get_comic ) => notify
R126040-0	follow rustyrockets on twitter	now => @com.twitter.follow param:user_name:Entity(tt:username) = " rustyrockets " ^^tt:username
R127890-0	get the washington post and translate it to xhosa	( monitor ( @com.washingtonpost.get_article ) ) => ( @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " xhosa " ^^tt:iso_lang_code ) on param:text:String = event => notify
R127891-0	monitor the fix on the washington post	monitor ( @com.washingtonpost.get_blog_post param:section:Enum(the_fix,politics,powerpost,fact_checker,world_views,compost,the_plum_line,post_partisan,post_everything,right_turn,capital_weather_gang,morning_mix,wonkblog) = enum:the_fix ) => notify
R127893-0	monitor politics in the washington post	monitor ( @com.washingtonpost.get_article param:section:Enum(politics,opinions,local,sports,national,world,business,lifestyle) = enum:politics ) => notify
R127940-0	monitor world views on the washington post	monitor ( @com.washingtonpost.get_blog_post param:section:Enum(the_fix,politics,powerpost,fact_checker,world_views,compost,the_plum_line,post_partisan,post_everything,right_turn,capital_weather_gang,morning_mix,wonkblog) = enum:world_views ) => notify
R127966-0	monitor the washington post	monitor ( @com.washingtonpost.get_article ) => notify
R127967-0	monitor articles in the washington post	monitor ( @com.washingtonpost.get_article ) => notify
R127968-0	off light	now => @light-bulb.set_power param:power:Enum(on,off) = enum:off
R128251-0	turn on the light	now => @light-bulb.set_power param:power:Enum(on,off) = enum:on
R128252-0	turn off the light	now => @light-bulb.set_power param:power:Enum(on,off) = enum:off
R128253-0	every day at TIME_0 turn on the light	attimer time = TIME_0 => @light-bulb.set_power param:power:Enum(on,off) = enum:on
R128254-0	every day at TIME_0 turn off the light	attimer time = TIME_0 => @light-bulb.set_power param:power:Enum(on,off) = enum:off
R128255-0	if my camera detects motion turn on the light	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => @light-bulb.set_power param:power:Enum(on,off) = enum:on
R128256-0	if my camera detects no motion turn off the light	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == false ) => @light-bulb.set_power param:power:Enum(on,off) = enum:off
R128257-0	lights off	now => @light-bulb.set_power param:power:Enum(on,off) = enum:off
R128258-0	lights on	now => @light-bulb.set_power param:power:Enum(on,off) = enum:on
R128259-0	light bulb off	now => @light-bulb.set_power param:power:Enum(on,off) = enum:off
R128260-0	light bulb on	now => @light-bulb.set_power param:power:Enum(on,off) = enum:on
R128263-0	color loop lights	now => @light-bulb.color_loop
R128264-0	lights off at TIME_0	attimer time = TIME_0 => @light-bulb.set_power param:power:Enum(on,off) = enum:off
R128265-0	lights on at TIME_0	attimer time = TIME_0 => @light-bulb.set_power param:power:Enum(on,off) = enum:on
R129620-0	monitor washington post	monitor ( @com.washingtonpost.get_article ) => notify
R130232-0	turn on hi sense tv	now => @com.lg.tv.webos2.set_power param:power:Enum(on,off) = enum:on
R130234-0	generate meme	now => @com.imgflip.generate => notify
R130235-0	post latest weather on twitter	now => @org.thingpedia.weather.current => @com.twitter.post on param:status:String = event	now => @org.thingpedia.weather.current param:location:Location = location:current_location => @com.twitter.post on param:status:String = event
R131455-0	what is the weather like	now => @org.thingpedia.weather.current => notify	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify
R131799-0	play something from youtube on my tv	now => @com.youtube.search_videos => @com.lg.tv.webos2.play_url on param:url:Entity(tt:url) = param:video_url:Entity(tt:url)
R131800-0	search youtube then play youtube on tv	now => @com.youtube.search_videos => @com.lg.tv.webos2.play_url on param:url:Entity(tt:url) = param:video_url:Entity(tt:url)
R131806-0	tell me when ihrithik tweets	monitor ( ( @com.twitter.home_timeline ) filter param:author:Entity(tt:username) == " ihrithik " ^^tt:username ) => notify	monitor ( ( @com.twitter.search ) filter param:author:Entity(tt:username) == " ihrithik " ^^tt:username ) => notify
R135723-0	monitor tweets from magicjohnson	monitor ( ( @com.twitter.home_timeline ) filter param:author:Entity(tt:username) == " magicjohnson " ^^tt:username ) => notify	monitor ( ( @com.twitter.search ) filter param:author:Entity(tt:username) == " magicjohnson " ^^tt:username ) => notify
R135725-0	monitor if i receive a tweet with hashtag gethustled	monitor ( ( @com.twitter.home_timeline ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " gethustled " ^^tt:hashtag ) => notify	monitor ( ( @com.twitter.search ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " gethustled " ^^tt:hashtag ) => notify
R135726-0	send a message to slack	now => @com.slack.send
R135852-0	if there is a new xkcd send it to slack bineweed	monitor ( @com.xkcd.get_comic ) => @com.slack.send_picture param:channel:Entity(tt:hashtag) = " bineweed " ^^tt:hashtag on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R135853-0	if there is a new xkcd send the link to slack rashes	monitor ( @com.xkcd.get_comic ) => @com.slack.send param:channel:Entity(tt:hashtag) = " rashes " ^^tt:hashtag on param:message:String = param:link:Entity(tt:url)
R135854-0	send an hourly cat on slack to soberness	( timer base = now , interval = 1 unit:h ) => ( @com.thecatapi.get ) => @com.slack.send_picture param:channel:Entity(tt:hashtag) = " soberness " ^^tt:hashtag on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R135855-0	every DURATION_0 send a cat on slack to enculturated	( timer base = now , interval = DURATION_0 ) => ( @com.thecatapi.get ) => @com.slack.send_picture param:channel:Entity(tt:hashtag) = " enculturated " ^^tt:hashtag on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R135859-0	send a random gif to slack tarp	now => @com.giphy.get => @com.slack.send_picture param:channel:Entity(tt:hashtag) = " tarp " ^^tt:hashtag on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R135860-0	send a cat picture to sinhalese	now => @com.thecatapi.get => @com.slack.send_picture param:channel:Entity(tt:hashtag) = " sinhalese " ^^tt:hashtag on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R135861-0	send a curiosity rover pic to slack pantryman	now => @gov.nasa.rover => @com.slack.send_picture param:channel:Entity(tt:hashtag) = " pantryman " ^^tt:hashtag on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R135862-0	send new washington post the fix articles on slack to creepiness	monitor ( @com.washingtonpost.get_blog_post param:section:Enum(the_fix,politics,powerpost,fact_checker,world_views,compost,the_plum_line,post_partisan,post_everything,right_turn,capital_weather_gang,morning_mix,wonkblog) = enum:the_fix ) => @com.slack.send param:channel:Entity(tt:hashtag) = " creepiness " ^^tt:hashtag on param:message:String = event
R135863-0	send new washington post world views articles on slack to relaxations	monitor ( @com.washingtonpost.get_blog_post param:section:Enum(the_fix,politics,powerpost,fact_checker,world_views,compost,the_plum_line,post_partisan,post_everything,right_turn,capital_weather_gang,morning_mix,wonkblog) = enum:world_views ) => @com.slack.send param:channel:Entity(tt:hashtag) = " relaxations " ^^tt:hashtag on param:message:String = event
R135864-0	send picture on fucking gmail	now => @com.gmail.send_picture
R135868-0	give me a cat picture every day at TIME_0	( attimer time = TIME_0 ) => ( @com.thecatapi.get ) => notify
R135869-0	give me cat picture every day at TIME_0	( attimer time = TIME_0 ) => ( @com.thecatapi.get ) => notify
R135870-0	give me cat picture	now => @com.thecatapi.get => notify
R135871-0	give me a cat picture	now => @com.thecatapi.get => notify
R135916-0	set my thermostat to cool if a new file is created on google drive	monitor ( @com.google.drive.list_drive_files param:order_by:Enum(created_time_increasing,created_time_decreasing,modified_time_increasing,modified_time_decreasing,name_increasing,name_decreasing) = enum:created_time_decreasing ) on new param:file_id:Entity(com.google.drive:file_id) => @thermostat.set_hvac_mode param:mode:Enum(heat,cool,heat_cool,off) = enum:cool
R135926-0	tweet a picture	now => @com.twitter.post_picture
R141672-0	translate washington post to czech	( monitor ( @com.washingtonpost.get_article ) ) => ( @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " czech " ^^tt:iso_lang_code ) on param:text:String = event => notify
R153901-0	monitor new omlet messages	monitor ( @me.omlet.chat.messages param:from_me:Boolean = false ) => notify
R153902-0	share new security camera notifications on linkedin	monitor ( @security-camera.current_event ) => @com.linkedin.share on param:status:String = event
R337942-0	i want to send a mail	now => @com.gmail.send_email
R337947-0	open dropbox	now => @com.dropbox.open => notify
R337951-0	get phdcomics	now => @com.phdcomics.get_post => notify
R337962-0	turn up the volume on my tv	now => @com.lg.tv.webos2.raise_volume
R337979-0	hey almond how much am i using on dropbox ?	now => @com.dropbox.get_space_usage => notify
R337981-0	show me my cameras	now => @security-camera.current_event => notify
R337982-0	if there is motion on my camera , send me email	monitor ( @security-camera.current_event ) => @com.gmail.send_email
R337983-0	get a picture from the camera	now => @security-camera.current_event => notify
R337997-0	turn on tv	now => @com.lg.tv.webos2.set_power param:power:Enum(on,off) = enum:on
R338011-0	search for something on twitter	now => @com.twitter.search => notify
R340491-0	what 's the weather today ?	now => @org.thingpedia.weather.current => notify	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify
R340499-0	nickiminaj most recent tweet	now => ( @com.twitter.search ) filter param:author:Entity(tt:username) == " nickiminaj " ^^tt:username => notify
R341433-0	what is the weather in LOCATION_0 ?	now => @org.thingpedia.weather.current param:location:Location = LOCATION_0 => notify
R341434-0	tell me if it will rain in LOCATION_0	monitor ( @org.thingpedia.weather.current param:location:Location = LOCATION_0 ) => notify
R341535-0	notify me if it 's raining weather	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => notify	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => notify
R341536-0	notify me if it 's raining	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => notify	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => notify
R341538-0	notify me if it rains	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => notify	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => notify
R341539-0	notify me if it 's cloudy weather	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:cloudy => notify	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:cloudy => notify
R341540-0	notify me if it 's cloudy	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:cloudy => notify	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:cloudy => notify
R341542-0	notify me if it 's snowing weather	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:snowy => notify	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:snowy => notify
R341543-0	notify me if it 's snowing	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:snowy => notify	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:snowy => notify
R341546-0	notify me if it 's snowy	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:snowy => notify	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:snowy => notify
R341548-0	if the weather is raining , let me know	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => notify	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => notify
R341549-0	if the weather is raining , send a gmail	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @com.gmail.send_email	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @com.gmail.send_email
R341550-0	if it 's raining , send a gmail	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @com.gmail.send_email	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @com.gmail.send_email
R341552-0	if it 's rains , send a gmail	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @com.gmail.send_email	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @com.gmail.send_email
R341553-0	if it rains , send a gmail	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @com.gmail.send_email	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @com.gmail.send_email
R341562-0	send tweet	now => @com.twitter.post
R341572-0	monitor wsj news about google	monitor ( @com.wsj.get param:section:Enum(opinions,world_news,us_business,markets,technology,lifestyle) = enum:technology ) => notify
R359838-0	send my recent photos on instagram to facebook	now => @com.instagram.get_pictures => @com.facebook.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R359840-0	if my security camera detects any motion , flash my light bulb	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => @light-bulb.alert_long
R359841-0	get uber price and send it on sms	now => @com.uber.price_estimate => @org.thingpedia.builtin.thingengine.phone.send_sms on param:message:String = event
R359843-0	get how far uber is and send it via sms	now => @com.uber.price_estimate => @org.thingpedia.builtin.thingengine.phone.send_sms on param:message:String = event
R359846-0	play some video from youtube on my tv	now => @com.youtube.search_videos => @com.lg.tv.webos2.play_url on param:url:Entity(tt:url) = param:video_url:Entity(tt:url)
R359847-0	get a snapshot from my security camera every hour	( timer base = now , interval = 1 unit:h ) => ( @security-camera.current_event ) => notify
R359848-0	translate washington post headlines to swedish	( monitor ( @com.washingtonpost.get_article ) ) => ( @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " swedish " ^^tt:iso_lang_code ) on param:text:String = param:title:String => notify
R359849-0	turn on my tv if there is a person in the room	monitor ( ( @security-camera.current_event ) filter param:has_person:Boolean == true ) => @com.lg.tv.webos2.set_power param:power:Enum(on,off) = enum:on
R359850-0	show me a daily cat picture	( timer base = now , interval = 1 unit:day ) => ( @com.thecatapi.get ) => notify
R359851-0	send me a daily cat picture	( timer base = now , interval = 1 unit:day ) => ( @com.thecatapi.get ) => notify
R359887-0	how far is uber black	now => ( @com.uber.time_estimate ) filter param:uber_type:Enum(pool,uber_x,uber_xl,uber_black,select,suv,assist) == enum:uber_black => notify
R359888-0	send new phd comics picture to my gmail	monitor ( @com.phdcomics.get_post ) => @com.gmail.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R359889-0	send phd comics on gmail	now => @com.phdcomics.get_post => @com.gmail.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R359891-0	find busy on calendar	now => @org.thingpedia.icalendar.list_events => notify
R359892-0	set me as away on slack if calendar busy	edge ( monitor ( @org.thingpedia.icalendar.list_events ) ) on param:status:Enum(scheduled,upcoming,started,ended) == enum:started => @com.slack.setPresence param:presence:Enum(away,auto) = enum:away
R359895-0	notify me if a mail has label important	monitor ( @com.gmail.inbox param:is_important:Boolean = true ) on new param:email_id:Entity(com.gmail:email_id) => notify
R359896-0	get a random phd comic	now => @com.phdcomics.get_post => notify
R359897-0	get phd comics	now => @com.phdcomics.get_post => notify
R359898-0	is it raining ?	now => @org.thingpedia.weather.current => notify	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify
R359900-0	if it is going to rain alert me	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => notify	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => notify
R359906-0	set my room temperature to NUMBER_0 when i reach home	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on param:location == location:home => @thermostat.set_target_temperature param:value = NUMBER_0 unit:F
R359912-0	reduce volume of my radio	now => @org.thingpedia.bluetooth.speaker.a2dp.lower_volume
R359913-0	post a photo to facebook	now => @com.facebook.post_picture
R359916-0	if i upload a new photo to instagram , also upload it to twitter	monitor ( @com.instagram.get_pictures ) => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R359919-0	if i send a new picture to instagram , send this new picture to facebook	monitor ( @com.instagram.get_pictures ) => @com.facebook.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R359921-0	give me weather every day	( timer base = now , interval = 1 unit:day ) => ( @org.thingpedia.weather.current ) => notify	( timer base = now , interval = 1 unit:day ) => ( @org.thingpedia.weather.current param:location:Location = location:current_location ) => notify
R363765-0	tweet pictures	now => @com.twitter.post_picture
R367267-0	tweet cat picture	now => @com.thecatapi.get => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R367268-0	get gmail send subject via sms	now => @com.gmail.inbox => @org.thingpedia.builtin.thingengine.phone.send_sms on param:message:String = param:subject:String
R367269-0	turn off bedroom lamp	now => @light-bulb.set_power param:power:Enum(on,off) = enum:off
R367272-0	get the latest email from EMAIL_ADDRESS_0	now => ( @com.gmail.inbox ) filter param:sender_address:Entity(tt:email_address) == EMAIL_ADDRESS_0 => notify
R383082-0	send me a cat picture	now => @com.thecatapi.get => notify
R383085-0	dial	now => @org.thingpedia.builtin.thingengine.phone.call
R383086-0	dial call	now => @org.thingpedia.builtin.thingengine.phone.call
R383087-0	dial phone	now => @org.thingpedia.builtin.thingengine.phone.call
R383088-0	make a call	now => @org.thingpedia.builtin.thingengine.phone.call
R383228-0	tell me the current date	now => @org.thingpedia.builtin.thingengine.builtin.get_date => notify
R383232-0	post on twitter	now => @com.twitter.post
R383234-0	post on twitter if i receive mail in gmail	monitor ( @com.gmail.inbox param:is_important:Boolean = true ) on new param:email_id:Entity(com.gmail:email_id) => @com.twitter.post
R383235-0	notify me when i receive messages on twitter	monitor ( @com.twitter.direct_messages ) => notify
R383237-0	turn on light at TIME_0	attimer time = TIME_0 => @light-bulb.set_power param:power:Enum(on,off) = enum:on
R383383-0	list channels in category automotive on youtube	now => @com.youtube.channels_by_category param:category_id:Enum(best_of_youtube,recommended,paid,music,comedy,film_and_entertainment,gaming,beauty_and_fashion,from_tv,automotive,animation,sports,diy,tech,science,cooking,causes,news_and_politics,lifestyle) = enum:automotive => notify
R383385-0	how the weather today	now => @org.thingpedia.weather.current => notify	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify
R383386-0	how is the weather in LOCATION_0 ?	now => @org.thingpedia.weather.current param:location:Location = LOCATION_0 => notify
R383387-0	search dogs images by bing	now => @com.bing.image_search param:query:String = " dogs " => notify
R383388-0	list my email	now => @com.gmail.inbox => notify
R383389-0	send me a message when my security camera detects something	monitor ( @security-camera.current_event ) => notify
R383390-0	get a cat picture	now => @com.thecatapi.get => notify
R383391-0	post facebook	now => @com.facebook.post
R383392-0	post on my facebook	now => @com.facebook.post
R383393-0	what is the time	now => @org.thingpedia.builtin.thingengine.builtin.get_time => notify
R383395-0	i would like to know current time	now => @org.thingpedia.builtin.thingengine.builtin.get_time => notify
R383396-0	pull up a picture of a cat	now => @com.thecatapi.get => notify
R383463-0	generate a meme then post it on facebook	now => @com.imgflip.generate => @com.facebook.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R1389132-0	send message	now => @org.thingpedia.builtin.thingengine.phone.send_sms
R1389296-0	get security camera snapshot	now => @security-camera.current_event => notify
R1435445-0	what is the weather	now => @org.thingpedia.weather.current => notify	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify
R1435452-0	check my email	now => @com.gmail.inbox => notify	monitor ( @com.gmail.inbox ) => notify
R1435456-0	weather	now => @org.thingpedia.weather.current => notify	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify
R1435457-0	weather please	now => @org.thingpedia.weather.current => notify	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify
R1435462-0	post today 's xkcd on twitter	now => @com.xkcd.get_comic => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R1435477-0	notify me if my nest temperature changes .	monitor ( @thermostat.get_temperature ) => notify
R1435478-0	notify me if there is motion on my security camera	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => notify
R1435487-0	text message	now => @org.thingpedia.builtin.thingengine.phone.send_sms
R1435490-0	send me a picture from the security camera	now => @security-camera.current_event => notify
R1435491-0	show me a photo of my security camera in the backyard	now => @security-camera.current_event => notify
R1435492-0	get a snapshot from the security camera in the backyard	now => @security-camera.current_event => notify
R1435493-0	get a snapshot from security camera	now => @security-camera.current_event => notify
R1435495-0	get xkcd comic	now => @com.xkcd.get_comic => notify
R1435499-0	what the weather link today	now => @org.thingpedia.weather.current => notify	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify
R1435503-0	call my phone number	now => @org.thingpedia.builtin.thingengine.phone.call
R1435506-0	notify me for tweets with astuzia	monitor ( ( @com.twitter.home_timeline ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " astuzia " ^^tt:hashtag ) => notify	monitor ( ( @com.twitter.search ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " astuzia " ^^tt:hashtag ) => notify
R1435507-0	post my tweets on facebook	now => @com.twitter.my_tweets => @com.facebook.post on param:status:String = event
R1435508-0	send slack the weather	now => @org.thingpedia.weather.current => @com.slack.send on param:message:String = event	now => @org.thingpedia.weather.current param:location:Location = location:current_location => @com.slack.send on param:message:String = event
R1435509-0	cat	now => @com.thecatapi.get => notify
R1435510-0	i want a cat picture	now => @com.thecatapi.get => notify
R1435515-0	post a status update to facebook	now => @com.facebook.post
R1435520-0	find me a cat picture	now => @com.thecatapi.get => notify
R1435521-0	play music	now => @org.thingpedia.bluetooth.speaker.a2dp.play_music
R1435524-0	search pizza	now => @com.bing.web_search => notify
R1435525-0	turn off my lights	now => @light-bulb.set_power param:power:Enum(on,off) = enum:off
R1435529-0	get cat picture everyday	( timer base = now , interval = 1 unit:day ) => ( @com.thecatapi.get ) => notify
R1435530-0	get an xkcd everyday .	( timer base = now , interval = 1 unit:day ) => ( @com.xkcd.random_comic ) => notify	( timer base = now , interval = 1 unit:day ) => ( @com.xkcd.get_comic ) => notify
R1435535-0	get tweets from craigyferg	monitor ( ( @com.twitter.home_timeline ) filter param:author:Entity(tt:username) == " craigyferg " ^^tt:username ) => notify	monitor ( ( @com.twitter.search ) filter param:author:Entity(tt:username) == " craigyferg " ^^tt:username ) => notify
R1435537-0	get snapshot from security camera	now => @security-camera.current_event => notify
R1435538-0	whenever it rains remind me to bring an umbrella	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => notify	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => notify
R1435541-0	tell me when it 's going to rain in remind me to bring an umbrella	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => notify	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => notify
R1435543-0	get sec camera snapshot	now => @security-camera.current_event => notify
R1435545-0	get cat pictures	now => @com.thecatapi.get => notify
R1439555-0	when it rains remind me to bring my umbrella	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => notify	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => notify
R1439689-0	get email	now => @com.gmail.inbox => notify
R1439747-0	get latest email	now => @com.gmail.inbox => notify
R1439891-0	get random xkcd	now => @com.xkcd.random_comic => notify
R1439970-0	what is the weather here	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify	now => @org.thingpedia.weather.current => notify
R1439971-0	weather here	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify	now => @org.thingpedia.weather.current => notify
R1440690-0	monitor wall street journal	monitor ( @com.wsj.get param:section:Enum(opinions,world_news,us_business,markets,technology,lifestyle) = enum:opinions ) => notify
R1440691-0	notify me when there is a new video from youtube channels that i follow	monitor ( @com.youtube.list_videos ) => notify
R1441248-0	post hello world to my facebook	now => @com.facebook.post param:status:String = " hello world "
R1441249-0	what was my last email	now => @com.gmail.inbox => notify
R1441252-0	whats the weather	now => @org.thingpedia.weather.current => notify	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify
R1441254-0	get giphy with tag setamapy	now => @com.giphy.get param:tag:Entity(tt:hashtag) = " setamapy " ^^tt:hashtag => notify
R1441256-0	monitor wsj	monitor ( @com.wsj.get param:section:Enum(opinions,world_news,us_business,markets,technology,lifestyle) = enum:technology ) => notify
R1441257-0	turn off the lights	now => @light-bulb.set_power param:power:Enum(on,off) = enum:off
R1441557-0	what 's the weather like today in LOCATION_0 ?	now => @org.thingpedia.weather.current param:location:Location = LOCATION_0 => notify
R1441560-0	turn off my phone	now => @org.thingpedia.builtin.thingengine.phone.set_ringer param:mode:Enum(normal,vibrate,silent) = enum:silent
R1441564-0	turn on light	now => @light-bulb.set_power param:power:Enum(on,off) = enum:on
R1441566-0	get snapshot of my security camera	now => @security-camera.current_event => notify
R1441567-0	make a phone call !	now => @org.thingpedia.builtin.thingengine.phone.call
R1441568-0	get snapshot from my security camera	now => @security-camera.current_event => notify
R1441569-0	get a snapshot from my security camera	now => @security-camera.current_event => notify
R1441570-0	every DURATION_0 get a snapshot of my security camera	( timer base = now , interval = DURATION_0 ) => ( @security-camera.current_event ) => notify
R1441572-0	post on facebook	now => @com.facebook.post
R1441576-0	get nasa picture of day	now => @gov.nasa.apod => notify
R1441631-0	send a message on slack to teapoy	now => @com.slack.send param:channel:Entity(tt:hashtag) = " teapoy " ^^tt:hashtag
R1441631-5	send a message on slack to send	now => @com.slack.send param:channel:Entity(tt:hashtag) = " send " ^^tt:hashtag
R1441639-0	get linkedin profile	now => @com.linkedin.get_profile => notify
R1441640-0	get instagram pictures	now => @com.instagram.get_pictures => notify
R1441652-0	call mother	now => @org.thingpedia.builtin.thingengine.phone.call param:number:Entity(tt:phone_number) = " mother " ^^tt:username
R1441657-0	get snapshot from security camera then post it on twitter	now => @security-camera.current_event => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R1441658-0	monitor security camera	monitor ( @security-camera.current_event ) => notify
R1441662-0	get nasa	now => @gov.nasa.apod => notify
R1448546-0	notify me when i receive an sms	monitor ( @org.thingpedia.builtin.thingengine.phone.sms ) => notify
R1448703-0	get my calendar events when i move to LOCATION_0	( edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on param:location:Location == LOCATION_0 ) => ( @org.thingpedia.icalendar.list_events ) => notify
R1448706-0	get my location	now => @org.thingpedia.builtin.thingengine.phone.get_gps => notify
R1448721-0	play something on my speaker	now => @org.thingpedia.bluetooth.speaker.a2dp.play_music
R1448727-0	get steps on fitbit	now => @com.fitbit.getsteps => notify
R1448743-0	list events in my calendar	now => @org.thingpedia.icalendar.list_events => notify
R1448782-0	list emails	now => @com.gmail.inbox => notify
R1448821-0	search youtube videos	now => @com.youtube.search_videos => notify
R1455915-0	get xkcd then send a message with title	now => @com.xkcd.get_comic => @org.thingpedia.builtin.thingengine.phone.send_sms on param:message:String = param:title:String
R1458596-0	list event on calendar	now => @org.thingpedia.icalendar.list_events => notify
R1459605-0	generate a meme	now => @com.imgflip.generate => notify
R1459786-0	every hour send the weather on gmail	( timer base = now , interval = 1 unit:h ) => ( @org.thingpedia.weather.current ) => @com.gmail.send_picture on param:message:String = event	( timer base = now , interval = 1 unit:h ) => ( @org.thingpedia.weather.current param:location:Location = location:current_location ) => @com.gmail.send_picture on param:message:String = event
R1465775-0	say something	now => @org.thingpedia.builtin.thingengine.builtin.say
R1465986-0	turn on the lights	now => @light-bulb.set_power param:power:Enum(on,off) = enum:on
R1465988-0	what 's the weather in LOCATION_0 , ct right now	now => @org.thingpedia.weather.current param:location:Location = LOCATION_0 => notify
R1468960-0	list calendar events	now => @org.thingpedia.icalendar.list_events => notify
R1470264-0	post to facebook	now => @com.facebook.post
R1470269-0	what 's the weather like	now => @org.thingpedia.weather.current => notify	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify
R1470277-0	get the random gif from giphy	now => @com.giphy.get => notify
R1470283-0	nasa picture of today	now => @gov.nasa.apod => notify
R1470294-0	list channel by category on youtube with category id entertainment	now => @com.youtube.channels_by_category param:category_id:Enum(best_of_youtube,recommended,paid,music,comedy,film_and_entertainment,gaming,beauty_and_fashion,from_tv,automotive,animation,sports,diy,tech,science,cooking,causes,news_and_politics,lifestyle) = enum:film_and_entertainment => notify
R1470324-0	what 's what is the temperature now	now => @thermostat.get_temperature => notify	now => @org.thingpedia.weather.current => notify	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify
R1470338-0	do : post a picture on facebook	now => @com.facebook.post_picture
R1470578-0	email	now => @com.gmail.send_email
R1470580-0	weather at LOCATION_0	now => @org.thingpedia.weather.current param:location:Location = LOCATION_0 => notify
R1470583-0	weather of a place	now => @org.thingpedia.weather.current => notify	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify
R1470588-0	get a security picture	now => @security-camera.current_event => notify
R1470589-0	post a picture on twitter	now => @com.twitter.post_picture
R1470590-0	set my phone to sound	now => @org.thingpedia.builtin.thingengine.phone.set_ringer param:mode:Enum(normal,vibrate,silent) = enum:normal
R1470591-0	call somebody	now => @org.thingpedia.builtin.thingengine.phone.call
R1470592-0	show a popup	now => @org.thingpedia.builtin.thingengine.builtin.say
R1470593-0	get time	now => @org.thingpedia.builtin.thingengine.builtin.get_time => notify
R1470594-0	get random	now => @org.thingpedia.builtin.thingengine.builtin.get_random_between => notify
R1470595-0	get random between 1 and NUMBER_0	now => @org.thingpedia.builtin.thingengine.builtin.get_random_between param:high:Number = NUMBER_0 param:low:Number = 1 => notify
R1470598-0	get a picture from my security camera	now => @security-camera.current_event => notify
R1470599-0	if there is motion on my camera send snapshot to EMAIL_ADDRESS_0	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => @com.gmail.send_picture param:to:Entity(tt:email_address) = EMAIL_ADDRESS_0 on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R1471780-0	get my security camera	now => @security-camera.current_event => notify
R1471781-0	get thermostat	now => @thermostat.get_temperature => notify
R1471818-0	monitor xkcd then post it on facebook	monitor ( @com.xkcd.get_comic ) => @com.facebook.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R1471820-0	post a cat picture on twitter	now => @com.thecatapi.get => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R1471824-0	could you find something on google	now => @com.bing.web_search => notify
R1471831-0	get instagram	now => @com.instagram.get_pictures => notify
R1471832-0	monitor when johngreen tweets	monitor ( ( @com.twitter.home_timeline ) filter param:author:Entity(tt:username) == " johngreen " ^^tt:username ) => notify	monitor ( ( @com.twitter.search ) filter param:author:Entity(tt:username) == " johngreen " ^^tt:username ) => notify
R1471843-0	what s the time	now => @org.thingpedia.builtin.thingengine.builtin.get_time => notify
R1471844-0	play some music	now => @org.thingpedia.bluetooth.speaker.a2dp.play_music
R1471845-0	time	now => @org.thingpedia.builtin.thingengine.builtin.get_time => notify
R1471846-0	nasa 's picture of today	now => @gov.nasa.apod => notify
R1471849-0	post xkcd on twitter	now => @com.xkcd.get_comic => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R1471986-0	monitor tweet with loopchild	monitor ( ( @com.twitter.home_timeline ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " loopchild " ^^tt:hashtag ) => notify	monitor ( ( @com.twitter.search ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " loopchild " ^^tt:hashtag ) => notify
R1471999-0	search twitter	now => @com.twitter.search => notify
R1472006-0	search twitter from kyliejenner	now => ( @com.twitter.search ) filter param:author:Entity(tt:username) == " kyliejenner " ^^tt:username => notify
R1472686-0	give me a random number	now => @org.thingpedia.builtin.thingengine.builtin.get_random_between => notify
R1472688-0	when it 's TIME_0 send me the latest xkcd	( attimer time = TIME_0 ) => ( @com.xkcd.get_comic ) => notify
R1472689-0	every day at TIME_0 send me the latest xkcd	( attimer time = TIME_0 ) => ( @com.xkcd.get_comic ) => notify
R1472694-0	when i tweet , NUMBER_0 cats	( monitor ( @com.twitter.my_tweets ) ) => ( @com.thecatapi.get param:count:Number = NUMBER_0 ) => notify
R1472696-0	get the latest xkcd	now => @com.xkcd.get_comic => notify
R1472756-0	get NUMBER_0 cat pictures	now => @com.thecatapi.get param:count:Number = NUMBER_0 => notify
R1473103-0	get price estimate on uber	now => @com.uber.price_estimate => notify
R1473105-0	snapshot a cat	now => @com.thecatapi.get => notify
R1473109-0	monitor tweets with marknicdao	monitor ( ( @com.twitter.home_timeline ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " marknicdao " ^^tt:hashtag ) => notify	monitor ( ( @com.twitter.search ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " marknicdao " ^^tt:hashtag ) => notify
R1473565-0	show me the weather at TIME_0	( attimer time = TIME_0 ) => ( @org.thingpedia.weather.current ) => notify	( attimer time = TIME_0 ) => ( @org.thingpedia.weather.current param:location:Location = location:current_location ) => notify
R1473566-0	show me the weather at TIME_0 in the morning	( attimer time = TIME_0 ) => ( @org.thingpedia.weather.current ) => notify	( attimer time = TIME_0 ) => ( @org.thingpedia.weather.current param:location:Location = location:current_location ) => notify
R1473567-0	what 's the weather at home	now => @org.thingpedia.weather.current param:location:Location = location:home => notify
R1473568-0	get weather in LOCATION_0	now => @org.thingpedia.weather.current param:location:Location = LOCATION_0 => notify
R1473569-0	get uber from here to LOCATION_0	now => @com.uber.price_estimate param:end:Location = LOCATION_0 param:start:Location = location:current_location => notify
R1473570-0	get uber prices from here to LOCATION_0	now => @com.uber.price_estimate param:end:Location = LOCATION_0 param:start:Location = location:current_location => notify
R1473572-0	get uber prices from LOCATION_0 to LOCATION_1	now => @com.uber.price_estimate param:end:Location = LOCATION_1 param:start:Location = LOCATION_0 => notify
R1473574-0	please show me a cat	now => @com.thecatapi.get => notify
R1473748-0	search tweets from tripleh	now => ( @com.twitter.search ) filter param:author:Entity(tt:username) == " tripleh " ^^tt:username => notify
R1473780-0	send an email to deina	now => @com.gmail.send_email param:to:Entity(tt:email_address) = " deina " ^^tt:username
R1473981-0	get my latest emails	now => @com.gmail.inbox => notify
R1473982-0	send an email	now => @com.gmail.send_email
R1473983-0	get my recent instagram pictures	now => @com.instagram.get_pictures => notify
R1473984-0	search video on youtube	now => @com.youtube.search_videos => notify
R1473987-0	get wall street journal opinions	now => @com.wsj.get param:section:Enum(opinions,world_news,us_business,markets,technology,lifestyle) = enum:opinions => notify
R1473991-0	get the weather at TIME_0	( attimer time = TIME_0 ) => ( @org.thingpedia.weather.current ) => notify	( attimer time = TIME_0 ) => ( @org.thingpedia.weather.current param:location:Location = location:current_location ) => notify
R1473994-0	check omlet messages	monitor ( @me.omlet.chat.messages param:from_me:Boolean = false ) => notify	monitor ( @me.omlet.chat.messages ) => notify
R1473995-0	get my omlet messages	monitor ( @me.omlet.chat.messages param:from_me:Boolean = false ) => notify	monitor ( @me.omlet.chat.messages ) => notify	monitor ( @me.omlet.chat.messages param:from_me:Boolean = true ) => notify
R1473997-0	send a message on omlet to helge	now => @me.omlet.chat.send_to param:to:Entity(tt:username) = " helge " ^^tt:username
R1474052-0	list channels in youtube category sports then send a message on slack to channel honey-flowing saying channel title	now => @com.youtube.channels_by_category param:category_id:Enum(best_of_youtube,recommended,paid,music,comedy,film_and_entertainment,gaming,beauty_and_fashion,from_tv,automotive,animation,sports,diy,tech,science,cooking,causes,news_and_politics,lifestyle) = enum:sports => @com.slack.send param:channel:Entity(tt:hashtag) = " honey-flowing " ^^tt:hashtag on param:message:String = param:title:String
R1474117-0	search on twitter hashtag havingatrampday	now => ( @com.twitter.search ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " havingatrampday " ^^tt:hashtag => notify
R1474118-0	tweet for me	now => @com.twitter.post
R1474150-0	send email to EMAIL_ADDRESS_0	now => @com.gmail.send_email param:to:Entity(tt:email_address) = EMAIL_ADDRESS_0
R1475051-0	get a snapshot	now => @security-camera.current_event => notify
R1475052-0	when motion is detected on my security camera , get a snapshot .	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => notify
R1475053-0	notify me if there 's motion on the security camera	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => notify
R1475288-0	get recent instagram pictures	now => @com.instagram.get_pictures => notify
R1475308-0	give me my gps position please	now => @org.thingpedia.builtin.thingengine.phone.get_gps => notify
R1475309-0	get : search almond on bing	now => @com.bing.web_search param:query:String = " almond " => notify
R1475310-0	search for almond on bing	now => @com.bing.web_search param:query:String = " almond " => notify
R1475313-0	get my mail	now => @com.gmail.inbox => notify
R1475314-0	get my email	now => @com.gmail.inbox => notify
R1475315-0	get current weather	now => @org.thingpedia.weather.current => notify	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify
R1475322-0	time estimate for uber	now => @com.uber.time_estimate => notify	
R1475324-0	whats the weather here	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify	now => @org.thingpedia.weather.current => notify
R1475327-0	i want the latest email	now => @com.gmail.inbox => notify
R1475330-0	show me the weather	now => @org.thingpedia.weather.current => notify	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify
R1475332-0	get me a cat picture .	now => @com.thecatapi.get => notify
R1475334-0	what time is it ?	now => @org.thingpedia.builtin.thingengine.builtin.get_time => notify
R1475337-0	get a cat picture .	now => @com.thecatapi.get => notify
R1475338-0	the weather .	now => @org.thingpedia.weather.current => notify	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify
R1475339-0	get the weather .	now => @org.thingpedia.weather.current => notify	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify
R1475342-0	call gabriel	now => @org.thingpedia.builtin.thingengine.phone.call param:number:Entity(tt:phone_number) = " gabriel " ^^tt:username
R1475359-0	monitor compost blog in washington post	monitor ( @com.washingtonpost.get_blog_post param:section:Enum(the_fix,politics,powerpost,fact_checker,world_views,compost,the_plum_line,post_partisan,post_everything,right_turn,capital_weather_gang,morning_mix,wonkblog) = enum:compost ) => notify
R1475360-0	show a kitten picture	now => @com.thecatapi.get => notify
R1475362-0	what 's the weather like ?	now => @org.thingpedia.weather.current => notify	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify
R1475365-0	get xkcd .	now => @com.xkcd.get_comic => notify
R1475366-0	how is the weather like outside	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify	now => @org.thingpedia.weather.current => notify
R1475367-0	get galaxy picture now	now => @gov.nasa.apod => notify
R1475369-0	turn the light on	now => @light-bulb.set_power param:power:Enum(on,off) = enum:on
R1475370-0	what time is it now	now => @org.thingpedia.builtin.thingengine.builtin.get_time => notify
R1475372-0	set my phone to vibrate every morning at TIME_0	attimer time = TIME_0 => @org.thingpedia.builtin.thingengine.phone.set_ringer param:mode:Enum(normal,vibrate,silent) = enum:vibrate
R1475373-0	can i see a cat	now => @com.thecatapi.get => notify
R1475376-0	give me kitten picture	now => @com.thecatapi.get => notify
R1475508-0	monitor if security camera has motion	monitor ( ( @security-camera.current_event ) filter param:has_motion:Boolean == true ) => notify
R1475511-0	notify me if i receive a tweet with hashtag ausboatrace	monitor ( ( @com.twitter.home_timeline ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " ausboatrace " ^^tt:hashtag ) => notify	monitor ( ( @com.twitter.search ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " ausboatrace " ^^tt:hashtag ) => notify
R1475514-0	i wan na tweet .	now => @com.twitter.post
R1475516-0	find a cat picture	now => @com.thecatapi.get => notify
R1475521-0	what 's the weather today ?	now => @org.thingpedia.weather.current => notify	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify
R1475522-0	get wsj opinions	now => @com.wsj.get param:section:Enum(opinions,world_news,us_business,markets,technology,lifestyle) = enum:opinions => notify
R1475685-0	get wsj news	now => @com.wsj.get => notify
R1477732-0	get my dropbox quota	now => @com.dropbox.get_space_usage => notify
R1477819-0	get a followmeeveryone gif	now => @com.giphy.get param:tag:Entity(tt:hashtag) = " followmeeveryone " ^^tt:hashtag => notify
R1478155-0	generate meme back in my day	now => @com.imgflip.generate param:template:Entity(imgflip:meme_id) = " back in my day " ^^imgflip:meme_id => notify
R1478169-0	list my instagram pictures	now => @com.instagram.get_pictures => notify
R1478288-0	what 's the date today	now => @org.thingpedia.builtin.thingengine.builtin.get_date => notify
R1478289-0	give me a random number between 1 and NUMBER_0	now => @org.thingpedia.builtin.thingengine.builtin.get_random_between param:high:Number = NUMBER_0 param:low:Number = 1 => notify
R1478344-0	get curiosity pictures	now => @gov.nasa.rover => notify
R1478345-0	get curiosity pictures on DATE_0	now => @gov.nasa.rover param:date_taken:Date = DATE_0 => notify
R1478881-0	search tweets with gorillalife	now => ( @com.twitter.search ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " gorillalife " ^^tt:hashtag => notify	now => ( @com.twitter.search ) filter param:text =~ " gorillalife " => notify
R1478882-0	search for hashtag autissumpah on twitter	now => ( @com.twitter.search ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " autissumpah " ^^tt:hashtag => notify
R1479020-0	get uber time estimate	now => @com.uber.time_estimate => notify
R1479651-0	monitor wsj world news	monitor ( @com.wsj.get param:section:Enum(opinions,world_news,us_business,markets,technology,lifestyle) = enum:world_news ) => notify
R1498655-0	every DURATION_0 get a cat picture	( timer base = now , interval = DURATION_0 ) => ( @com.thecatapi.get ) => notify
R1498766-0	turn on the tv	now => @com.lg.tv.webos2.set_power param:power:Enum(on,off) = enum:on
R1504512-0	get : my linkedin profile	now => @com.linkedin.get_profile => notify
R1505585-0	how many steps have i take today	now => @com.fitbit.getsteps => notify
R1507254-0	order a large espresso	now => @org.thingpedia.demo.coffee.order param:beverage:Enum(drip_coffee,espresso,latte,flat_white,mocha,caramel_mocha,white_mocha,macchiato,caramel_macchiato,cappuccino,americano) = enum:espresso param:size:Enum(small,medium,large) = enum:large
R1507255-0	order a large coffee	now => @org.thingpedia.demo.coffee.order param:beverage:Enum(drip_coffee,espresso,latte,flat_white,mocha,caramel_mocha,white_mocha,macchiato,caramel_macchiato,cappuccino,americano) = enum:drip_coffee param:size:Enum(small,medium,large) = enum:large
R1507256-0	order a large caramel mocha	now => @org.thingpedia.demo.coffee.order param:beverage:Enum(drip_coffee,espresso,latte,flat_white,mocha,caramel_mocha,white_mocha,macchiato,caramel_macchiato,cappuccino,americano) = enum:caramel_mocha param:size:Enum(small,medium,large) = enum:large
R1507257-0	order a large caramel macchiato	now => @org.thingpedia.demo.coffee.order param:beverage:Enum(drip_coffee,espresso,latte,flat_white,mocha,caramel_mocha,white_mocha,macchiato,caramel_macchiato,cappuccino,americano) = enum:caramel_macchiato param:size:Enum(small,medium,large) = enum:large
R1510928-0	what 's my dropbox quota	now => @com.dropbox.get_space_usage => notify
R1510954-0	turn up the volume on the speakers	now => @org.thingpedia.bluetooth.speaker.a2dp.raise_volume
R1511108-0	read a wsj article	now => @com.wsj.get => notify
R1511124-0	turn up the volume on the speaker	now => @org.thingpedia.bluetooth.speaker.a2dp.raise_volume
R1511126-0	turn up the volume on my speaker	now => @org.thingpedia.bluetooth.speaker.a2dp.raise_volume
R1511132-0	turn up the volume on my speakers	now => @org.thingpedia.bluetooth.speaker.a2dp.raise_volume
R1511136-0	turn up the volume on my speakers .	now => @org.thingpedia.bluetooth.speaker.a2dp.raise_volume
R1511146-0	read a wall street journal article	now => @com.wsj.get => notify
R1511153-0	read a wsj article .	now => @com.wsj.get => notify
R1511175-0	get new york times	now => @com.nytimes.get_front_page => notify
R1511308-0	get washington post opinions	now => @com.washingtonpost.get_article param:section:Enum(politics,opinions,local,sports,national,world,business,lifestyle) = enum:opinions => notify
R1511383-0	read a nyt article .	now => @com.nytimes.get_front_page => notify
R1512027-0	get steps	now => @com.fitbit.getsteps => notify
R1512059-0	get fitbit step count	now => @com.fitbit.getsteps => notify
R1513164-0	get a dog picture	now => @uk.co.thedogapi.get => notify
R1513165-0	get dog pictures	now => @uk.co.thedogapi.get => notify
R1513453-0	get the current time	now => @org.thingpedia.builtin.thingengine.builtin.get_time => notify
R1513513-0	get a random number	now => @org.thingpedia.builtin.thingengine.builtin.get_random_between => notify
R1514645-0	get my security camera live feed	now => @security-camera.current_event => notify
R1515072-0	get PATH_NAME_0 from dropbox	now => @com.dropbox.open param:file_name:Entity(tt:path_name) = PATH_NAME_0 => notify
R1515486-0	generate a meme then send it to slack	now => @com.imgflip.generate => @com.slack.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R1515487-0	generate a meme then send it to slack grummeter	now => @com.imgflip.generate => @com.slack.send_picture param:channel:Entity(tt:hashtag) = " grummeter " ^^tt:hashtag on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R1515736-0	send me a message at TIME_0	attimer time = TIME_0 => @org.thingpedia.builtin.thingengine.builtin.say
R1515830-0	every DURATION_0 get a random xkcd	( timer base = now , interval = DURATION_0 ) => ( @com.xkcd.random_comic ) => notify
R1515843-0	when i go home set the thermostat to NUMBER_0 f	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on param:location:Location == location:home => @thermostat.set_target_temperature param:value:Measure(C) = NUMBER_0 unit:F
R1515955-0	send a gif on slack	now => @com.giphy.get => @com.slack.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R1516800-0	what 's the weather like .	now => @org.thingpedia.weather.current => notify	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify
R1516978-0	read a nyt article	now => @com.nytimes.get_front_page => notify
R1516992-0	notify when anyone tweets	monitor ( @com.twitter.home_timeline ) => notify
R1517496-0	at TIME_0 get a cat picture	( attimer time = TIME_0 ) => ( @com.thecatapi.get ) => notify
R1517758-0	get current time	now => @org.thingpedia.builtin.thingengine.builtin.get_time => notify
R1518256-0	play link URL_0 on my lg tv	now => @com.lg.tv.webos2.play_url param:url:Entity(tt:url) = URL_0
R1518397-0	notify me when chrisrock tweets	monitor ( ( @com.twitter.home_timeline ) filter param:author:Entity(tt:username) == " chrisrock " ^^tt:username ) => notify	monitor ( ( @com.twitter.search ) filter param:author:Entity(tt:username) == " chrisrock " ^^tt:username ) => notify
R1519198-0	order an iced latte	now => @org.thingpedia.demo.coffee.order param:beverage:Enum(drip_coffee,espresso,latte,flat_white,mocha,caramel_mocha,white_mocha,macchiato,caramel_macchiato,cappuccino,americano) = enum:latte param:iced:Boolean = true
R1519394-0	set minimum temperature to NUMBER_0 f	now => @thermostat.set_minmax_temperature param:low:Measure(C) = NUMBER_0 unit:F
R1519395-0	set min temperature to NUMBER_0 f	now => @thermostat.set_minmax_temperature param:low:Measure(C) = NUMBER_0 unit:F
R1519396-0	set min temperature to NUMBER_0 f on my thermostat	now => @thermostat.set_minmax_temperature param:low:Measure(C) = NUMBER_0 unit:F
R1519399-0	set max temperature to NUMBER_0 f on my thermostat	now => @thermostat.set_minmax_temperature param:high:Measure(C) = NUMBER_0 unit:F
R1519405-0	give me a random number greater than NUMBER_0	now => @org.thingpedia.builtin.thingengine.builtin.get_random_between param:low:Number = NUMBER_0 => notify
R1519407-0	give me a random number less than NUMBER_0	now => @org.thingpedia.builtin.thingengine.builtin.get_random_between param:high:Number = NUMBER_0 => notify
R1519416-0	give me a random number between NUMBER_0 and __	now => @org.thingpedia.builtin.thingengine.builtin.get_random_between param:low:Number = NUMBER_0 => notify
R1519432-0	give me a random number between __ and NUMBER_0	now => @org.thingpedia.builtin.thingengine.builtin.get_random_between param:high:Number = NUMBER_0 => notify
R1519448-0	get an iced latte	now => @org.thingpedia.demo.coffee.order param:beverage:Enum(drip_coffee,espresso,latte,flat_white,mocha,caramel_mocha,white_mocha,macchiato,caramel_macchiato,cappuccino,americano) = enum:latte param:iced:Boolean = true
R1519755-0	rename PATH_NAME_0 to PATH_NAME_1 on my onedrive	now => @com.live.onedrive.rename_file param:new_name:Entity(tt:path_name) = PATH_NAME_1 param:old_name:Entity(tt:path_name) = PATH_NAME_0
R1520079-0	set min and max temperature on my thermostat	now => @thermostat.set_minmax_temperature
R1520110-0	send gif to gmail	now => @com.giphy.get => @com.gmail.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R1520113-0	send tepiombakshortmovie gif to gmail	now => @com.giphy.get param:tag:Entity(tt:hashtag) = " tepiombakshortmovie " ^^tt:hashtag => @com.gmail.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R1520115-0	send a tagged gif to gmail	now => @com.giphy.get => @com.gmail.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R1520117-0	send a tagged gif to EMAIL_ADDRESS_0	now => @com.giphy.get => @com.gmail.send_picture param:to:Entity(tt:email_address) = EMAIL_ADDRESS_0 on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R1520125-0	generate a hide the pain harold meme and send it to slack	now => @com.imgflip.generate param:template:Entity(imgflip:meme_id) = " hide the pain harold " ^^imgflip:meme_id => @com.slack.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R1520127-0	when security camera detects something call 911	monitor ( @security-camera.current_event ) => @org.thingpedia.builtin.thingengine.phone.call_emergency
R1520128-0	tweet my instagram pictures	monitor ( @com.instagram.get_pictures ) => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)	now => @com.instagram.get_pictures => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R1520129-0	set my phone to vibrate every day at TIME_0	attimer time = TIME_0 => @org.thingpedia.builtin.thingengine.phone.set_ringer param:mode:Enum(normal,vibrate,silent) = enum:vibrate
R1520131-0	tweet the latest nasa astronomy picture of the day	now => @gov.nasa.apod => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R1520132-0	send my weight to EMAIL_ADDRESS_0	now => @com.fitbit.getbody => @com.gmail.send_email param:to:Entity(tt:email_address) = EMAIL_ADDRESS_0 on param:message:String = event
R1520237-0	get my current location	now => @org.thingpedia.builtin.thingengine.phone.get_gps => notify
R1520527-0	login to my twitter and post a new update	now => @com.twitter.post
R1520809-0	what 's the weather like in LOCATION_0	now => @org.thingpedia.weather.current param:location:Location = LOCATION_0 => notify
R1520850-0	send a tagged gif to slack	now => @com.giphy.get => @com.slack.send_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R1520895-0	every day at ____ turn off the lights	timer base = now , interval = 1 unit:day => @light-bulb.set_power param:power:Enum(on,off) = enum:off
R1520942-0	turn on light every day TIME_0	attimer time = TIME_0 => @light-bulb.set_power param:power:Enum(on,off) = enum:on
R1521526-0	honk the horn on my car	now => @car.honk_horn
R1528009-0	nasa asteroid notify	monitor ( @gov.nasa.asteroid ) => notify
R1544261-0	show me the latest xkcd	now => @com.xkcd.get_comic => notify
R1544499-0	get me a picture of a cat	now => @com.thecatapi.get => notify
R1544501-0	get me a picture of dog .	now => @uk.co.thedogapi.get => notify
R1545152-0	if weather rains send email	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @com.gmail.send_email	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:status:Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy) == enum:raining => @com.gmail.send_email
R1545176-0	turn tv off	now => @com.lg.tv.webos2.set_power param:power:Enum(on,off) = enum:off
R1545472-0	get me my last email	now => @com.gmail.inbox => notify
R1545509-0	list youtube channels with category news and politics	now => @com.youtube.channels_by_category param:category_id:Enum(best_of_youtube,recommended,paid,music,comedy,film_and_entertainment,gaming,beauty_and_fashion,from_tv,automotive,animation,sports,diy,tech,science,cooking,causes,news_and_politics,lifestyle) = enum:news_and_politics => notify
R1545617-0	upload a cat image to my facebook	now => @com.thecatapi.get => @com.facebook.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R1641950-0	turn on my tv	now => @com.lg.tv.webos2.set_power param:power:Enum(on,off) = enum:on
R1641952-0	get a dog	now => @uk.co.thedogapi.get => notify
R1641954-0	get a cat	now => @com.thecatapi.get => notify
R1641956-0	get my ig	now => @com.instagram.get_pictures => notify
R1641959-0	get the holidays in the american samoa	now => @org.thingpedia.holidays.get_holidays param:country:Entity(tt:country) = " american samoa " ^^tt:country => notify
R1641961-0	get the upcoming holidays in the netherlands	now => @org.thingpedia.holidays.get_holidays param:country:Entity(tt:country) = " netherlands " ^^tt:country => notify
R1641963-0	list the holidays in the denmark	now => @org.thingpedia.holidays.get_holidays param:country:Entity(tt:country) = " denmark " ^^tt:country => notify
R1642132-0	get NUMBER_0 instagram pics	now => @com.instagram.get_pictures param:count:Number = NUMBER_0 => notify
R1642136-0	get my instagram pics with walden filter	now => ( @com.instagram.get_pictures ) filter param:filter:Entity(com.instagram:filter) == " walden " ^^com.instagram:filter => notify
R1642173-0	get my latest email from gmail	now => @com.gmail.inbox => notify
R1642175-0	show my latest email from gmail	now => @com.gmail.inbox => notify
R1642177-0	show me my latest email from gmail	now => @com.gmail.inbox => notify
R1642180-0	show me my latest email from EMAIL_ADDRESS_0	now => ( @com.gmail.inbox ) filter param:sender_address:Entity(tt:email_address) == EMAIL_ADDRESS_0 => notify
R1642273-0	get recent tweets	now => @com.twitter.search => notify
R1642356-0	get my latest email	now => @com.gmail.inbox => notify
R1642360-0	get my latest email from EMAIL_ADDRESS_0	now => ( @com.gmail.inbox ) filter param:sender_address:Entity(tt:email_address) == EMAIL_ADDRESS_0 => notify
R1642370-0	get my latest emails from EMAIL_ADDRESS_0	now => ( @com.gmail.inbox ) filter param:sender_address:Entity(tt:email_address) == EMAIL_ADDRESS_0 => notify
R1642489-0	get a snapshot of my security camera	now => @security-camera.current_event => notify
R1642538-0	get my emails	now => @com.gmail.inbox => notify
R1642540-0	get my gmail	now => @com.gmail.inbox => notify
R1642542-0	get my latest gmail	now => @com.gmail.inbox => notify
R1642565-0	get my emails from EMAIL_ADDRESS_0	now => ( @com.gmail.inbox ) filter param:sender_address:Entity(tt:email_address) == EMAIL_ADDRESS_0 => notify
R1642808-0	show me news articles from washington post	now => @com.washingtonpost.get_article => notify
R1642812-0	show me news articles published in the last DURATION_0 from new york times	now => ( @com.nytimes.get_front_page ) filter param:updated:Date >= now - DURATION_0 => notify
R1645660-0	show me some pictures	now => @uk.co.thedogapi.get => notify
R1645702-0	translate	now => @com.yandex.translate.translate => notify
R1645777-0	play loud	now => @org.thingpedia.bluetooth.speaker.a2dp.play_music
R1646014-0	get a trantchilla picture	now => @com.giphy.get param:tag:Entity(tt:hashtag) = " trantchilla " ^^tt:hashtag => notify
R1646017-0	show me a studentcentral picture	now => @com.giphy.get param:tag:Entity(tt:hashtag) = " studentcentral " ^^tt:hashtag => notify
R1646227-0	at TIME_0 get a cat and send it to EMAIL_ADDRESS_0	( attimer time = TIME_0 ) => ( @com.thecatapi.get ) => @com.gmail.send_picture param:to:Entity(tt:email_address) = EMAIL_ADDRESS_0 on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R1646328-0	get a picture of a dog	now => @uk.co.thedogapi.get => notify
R1647169-0	show me tweets from johngreen	now => ( @com.twitter.search ) filter param:author:Entity(tt:username) == " johngreen " ^^tt:username => notify
R1647185-0	get washington post	now => @com.washingtonpost.get_article => notify
R1647187-0	what 's the latest news in the washington post	now => @com.washingtonpost.get_article => notify
R1647189-0	what 's the latest international news in the washington post	now => @com.washingtonpost.get_article param:section:Enum(politics,opinions,local,sports,national,world,business,lifestyle) = enum:world => notify
R1647191-0	what 's the latest op-ed in the washington post	now => @com.washingtonpost.get_article param:section:Enum(politics,opinions,local,sports,national,world,business,lifestyle) = enum:opinions => notify
R1647193-0	get the washington post editorial page	now => @com.washingtonpost.get_article param:section:Enum(politics,opinions,local,sports,national,world,business,lifestyle) = enum:opinions => notify
R1647195-0	get the washington post op-ed page	now => @com.washingtonpost.get_article param:section:Enum(politics,opinions,local,sports,national,world,business,lifestyle) = enum:opinions => notify
R1647212-0	show me the emails from huxley	now => ( @com.gmail.inbox ) filter param:sender_address:Entity(tt:email_address) == " huxley " ^^tt:username => notify
R1647215-0	send francise an email	now => @com.gmail.send_email param:to:Entity(tt:email_address) = " francise " ^^tt:username
R1647245-0	i need a grande latte at work now	now => @org.thingpedia.demo.coffee.order param:beverage:Enum(drip_coffee,espresso,latte,flat_white,mocha,caramel_mocha,white_mocha,macchiato,caramel_macchiato,cappuccino,americano) = enum:latte param:delivery_location:Location = location:work param:size:Enum(small,medium,large) = enum:medium
R1647247-0	get me a grande caramel macchiato with extra sugar	now => @org.thingpedia.demo.coffee.order param:beverage:Enum(drip_coffee,espresso,latte,flat_white,mocha,caramel_mocha,white_mocha,macchiato,caramel_macchiato,cappuccino,americano) = enum:caramel_macchiato param:extras:Enum(none,milk,sugar,both) = enum:sugar param:size:Enum(small,medium,large) = enum:medium
R1647249-0	get me a venti caramel macchiato with extra sugar	now => @org.thingpedia.demo.coffee.order param:beverage:Enum(drip_coffee,espresso,latte,flat_white,mocha,caramel_mocha,white_mocha,macchiato,caramel_macchiato,cappuccino,americano) = enum:caramel_macchiato param:extras:Enum(none,milk,sugar,both) = enum:sugar param:size:Enum(small,medium,large) = enum:large
R1647251-0	get me a tall coffee	now => @org.thingpedia.demo.coffee.order param:beverage:Enum(drip_coffee,espresso,latte,flat_white,mocha,caramel_mocha,white_mocha,macchiato,caramel_macchiato,cappuccino,americano) = enum:drip_coffee param:size:Enum(small,medium,large) = enum:small
R1647253-0	i want a coffee , size venti	now => @org.thingpedia.demo.coffee.order param:beverage:Enum(drip_coffee,espresso,latte,flat_white,mocha,caramel_mocha,white_mocha,macchiato,caramel_macchiato,cappuccino,americano) = enum:drip_coffee param:size:Enum(small,medium,large) = enum:large
R1647255-0	i need a venti latte with extra sugar	now => @org.thingpedia.demo.coffee.order param:beverage:Enum(drip_coffee,espresso,latte,flat_white,mocha,caramel_mocha,white_mocha,macchiato,caramel_macchiato,cappuccino,americano) = enum:latte param:extras:Enum(none,milk,sugar,both) = enum:sugar param:size:Enum(small,medium,large) = enum:large
R1647257-0	i need a coffee with room for milk	now => @org.thingpedia.demo.coffee.order param:beverage:Enum(drip_coffee,espresso,latte,flat_white,mocha,caramel_mocha,white_mocha,macchiato,caramel_macchiato,cappuccino,americano) = enum:drip_coffee param:extras:Enum(none,milk,sugar,both) = enum:milk
R1647259-0	i need a coffee with room	now => @org.thingpedia.demo.coffee.order param:beverage:Enum(drip_coffee,espresso,latte,flat_white,mocha,caramel_mocha,white_mocha,macchiato,caramel_macchiato,cappuccino,americano) = enum:drip_coffee param:extras:Enum(none,milk,sugar,both) = enum:milk
R1647261-0	get me a coffee	now => @org.thingpedia.demo.coffee.order param:beverage:Enum(drip_coffee,espresso,latte,flat_white,mocha,caramel_mocha,white_mocha,macchiato,caramel_macchiato,cappuccino,americano) = enum:drip_coffee
R1647330-0	get the list of files in my dropbox	now => @com.dropbox.list_folder => notify	now => @com.dropbox.list_folder param:order_by:Enum(modified_time_decreasing,modified_time_increasing,name_decreasing,name_increasing) = enum:name_increasing => notify
R1647332-0	get the list of files in my dropbox , sorted by name	now => @com.dropbox.list_folder param:order_by:Enum(modified_time_decreasing,modified_time_increasing,name_decreasing,name_increasing) = enum:name_increasing => notify
R1647437-0	get a snapshot from my security camera every DURATION_0	( timer base = now , interval = DURATION_0 ) => ( @security-camera.current_event ) => notify
R1647462-0	warn me when an asteroid is close	monitor ( @gov.nasa.asteroid ) => notify
R1647464-0	warn me when a dangerous asteroid is close	monitor ( ( @gov.nasa.asteroid ) filter param:is_dangerous:Boolean == true ) => notify
R1647466-0	turn off my tv if there is a person in the room	monitor ( ( @security-camera.current_event ) filter param:has_person:Boolean == true ) => @com.lg.tv.webos2.set_power param:power:Enum(on,off) = enum:off
R1647467-0	turn off my tv if there is no person in the room	monitor ( ( @security-camera.current_event ) filter param:has_person:Boolean == false ) => @com.lg.tv.webos2.set_power param:power:Enum(on,off) = enum:off
R1647469-0	turn off my tv if there is nobody in the room	monitor ( ( @security-camera.current_event ) filter param:has_person:Boolean == false ) => @com.lg.tv.webos2.set_power param:power:Enum(on,off) = enum:off
R1647471-0	turn off my tv if the security camera detects nobody in the room	monitor ( ( @security-camera.current_event ) filter param:has_person:Boolean == false ) => @com.lg.tv.webos2.set_power param:power:Enum(on,off) = enum:off
R1647474-0	translate wall street journal headlines to korean	now => ( @com.wsj.get ) join ( @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " korean " ^^tt:iso_lang_code ) on param:text:String = param:title:String => notify
R1647476-0	get wall street journal headlines	now => @com.wsj.get => notify
R1647478-0	get wall street journal headlines translated to italian	now => ( @com.wsj.get param:section:Enum(opinions,world_news,us_business,markets,technology,lifestyle) = enum:markets ) join ( @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " italian " ^^tt:iso_lang_code ) on param:text:String = param:title:String => notify
R1647480-0	show me wall street journal headlines translated to finnish	now => ( @com.wsj.get param:section:Enum(opinions,world_news,us_business,markets,technology,lifestyle) = enum:markets ) join ( @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " finnish " ^^tt:iso_lang_code ) on param:text:String = param:title:String => notify
R1647494-0	send a text to ajanai	now => @org.thingpedia.builtin.thingengine.phone.send_sms param:to:Entity(tt:phone_number) = " ajanai " ^^tt:username
R1647539-0	how many steps did i take today	now => @com.fitbit.getsteps => notify
R1647543-0	show me my latest slack	now => @com.slack.channel_history => notify
R1647546-0	show me my latest tweets	now => @com.twitter.my_tweets => notify
R1647548-0	show me the latest tweets by djpaulyd	now => ( @com.twitter.search ) filter param:author:Entity(tt:username) == " djpaulyd " ^^tt:username => notify
R1647550-0	monitor camerondallas on twitter	monitor ( ( @com.twitter.home_timeline ) filter param:author:Entity(tt:username) == " camerondallas " ^^tt:username ) => notify	monitor ( ( @com.twitter.search ) filter param:author:Entity(tt:username) == " camerondallas " ^^tt:username ) => notify
R1647552-0	send a mocha to home	now => @org.thingpedia.demo.coffee.order param:beverage:Enum(drip_coffee,espresso,latte,flat_white,mocha,caramel_mocha,white_mocha,macchiato,caramel_macchiato,cappuccino,americano) = enum:mocha param:delivery_location:Location = location:home
R1647554-0	send a latte to home	now => @org.thingpedia.demo.coffee.order param:beverage:Enum(drip_coffee,espresso,latte,flat_white,mocha,caramel_mocha,white_mocha,macchiato,caramel_macchiato,cappuccino,americano) = enum:latte param:delivery_location:Location = location:home
R1647556-0	notify me when i move	monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) => notify
R1647558-0	notify me when i move faster than NUMBER_0 km/h	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on param:speed:Measure(mps) >= NUMBER_0 unit:kmph => notify
R1647560-0	notify me when i move slower than NUMBER_0 km/h	edge ( monitor ( @org.thingpedia.builtin.thingengine.phone.get_gps ) ) on param:speed:Measure(mps) <= NUMBER_0 unit:kmph => notify
R1647564-0	is it sunny	now => @org.thingpedia.weather.current => notify	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify
R1647753-0	tweet by sectorkekz	now => ( @com.twitter.search ) filter param:author:Entity(tt:username) == " sectorkekz " ^^tt:username => notify
R1647761-0	show me tweets from drakebell 's account	now => ( @com.twitter.search ) filter param:author:Entity(tt:username) == " drakebell " ^^tt:username => notify
R1647859-0	be alerted of events from my security camera	monitor ( @security-camera.current_event ) => notify
R1647861-0	be alerted by my security camera	monitor ( @security-camera.current_event ) => notify
R1647863-0	alert me by my security camera	monitor ( @security-camera.current_event ) => notify
R1648245-0	get washington post opinions then translate the headline to hebrew	now => ( @com.washingtonpost.get_article param:section:Enum(politics,opinions,local,sports,national,world,business,lifestyle) = enum:opinions ) join ( @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " hebrew " ^^tt:iso_lang_code ) on param:text:String = param:title:String => notify
R1650786-0	translate bing searches to esperanto	now => ( @com.bing.web_search ) join ( @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " esperanto " ^^tt:iso_lang_code ) on param:text:String = event => notify
R1652783-0	add a choice to poll id NUMBER_0	now => @com.lg.tv.webos2.set_volume param:percent:Number = NUMBER_0
R1657822-0	NUMBER_0 s	now => @thermostat.set_target_temperature param:value:Measure(C) = NUMBER_0 unit:F
R1657826-0	adjust speaker volume	now => @org.thingpedia.bluetooth.speaker.a2dp.set_volume
R1674140-0	whats the weather in LOCATION_0 ?	now => @org.thingpedia.weather.current param:location:Location = LOCATION_0 => notify
R1678284-0	post security camera on twitter	now => @security-camera.current_event => @com.twitter.post_picture on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
R1679042-0	get the weather in LOCATION_0	now => @org.thingpedia.weather.current param:location:Location = LOCATION_0 => notify
R1679513-0	aqquire me a cat meme	now => @com.thecatapi.get => notify
R1679522-0	what is the temperature	now => @thermostat.get_temperature => notify
R1679593-0	get a random number and send it to myself by email	now => @org.thingpedia.builtin.thingengine.builtin.get_random_between => @com.gmail.send_email on param:message:String = event
R1679595-0	get a random number and send it to to EMAIL_ADDRESS_0	now => @org.thingpedia.builtin.thingengine.builtin.get_random_between => @com.gmail.send_email param:to:Entity(tt:email_address) = EMAIL_ADDRESS_0 on param:message:String = event
R1679604-0	check my calendar	now => @org.thingpedia.icalendar.list_events => notify
R1679664-0	cat picture	now => @com.thecatapi.get => notify
R1679749-0	how hot is it here ?	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify	now => @org.thingpedia.weather.current => notify	now => @thermostat.get_temperature => notify
R1679880-0	get me some new york times articles about trump	now => ( @com.nytimes.get_front_page ) filter param:title:String =~ " trump " => notify
R1680212-0	what is your name ?	now => @com.imgflip.list => notify
R1681145-0	wake me up at TIME_0	( attimer time = TIME_0 ) => ( @org.thingpedia.builtin.thingengine.builtin.get_time ) => notify
R1683688-0	get NUMBER_0 cat	now => @com.thecatapi.get param:count:Number = NUMBER_0 => notify
R1684090-0	get weather and send it to me on slack	now => @org.thingpedia.weather.current => @com.slack.send on param:message:String = event	now => @org.thingpedia.weather.current param:location:Location = location:current_location => @com.slack.send on param:message:String = event
R1687131-0	show me emails from bob	now => ( @com.gmail.inbox ) filter param:sender_address:Entity(tt:email_address) == " bob " ^^tt:username => notify
R1687139-0	notify me when bob emails me	monitor ( ( @com.gmail.inbox ) filter param:sender_address:Entity(tt:email_address) == " bob " ^^tt:username ) => notify
R1687208-0	what 's the weather in LOCATION_0	now => @org.thingpedia.weather.current param:location:Location = LOCATION_0 => notify
R1688412-0	search pizza	now => @com.bing.web_search param:query:String = " pizza " => notify
R1688425-0	search almond recipes on youtube	now => @com.youtube.search_videos param:query:String = " almond recipes " => notify
R1688605-0	show me my tweets	now => @com.twitter.my_tweets => notify
R1688865-0	get my tweets	now => @com.twitter.my_tweets => notify
R1691492-0	set an reminder for TIME_0	attimer time = TIME_0 => @org.thingpedia.builtin.thingengine.builtin.say
R1691792-0	translate websites matching foo	now => ( @com.bing.web_search param:query:String = " foo " ) join ( @com.yandex.translate.translate ) on param:text:String = param:title:String => notify
R1691800-0	get an xkcd comic	now => @com.xkcd.get_comic => notify	now => @com.xkcd.random_comic => notify
R1691969-0	search taylor swift on the web	now => @com.bing.web_search param:query:String = " taylor swift " => notify
R9597112-0	what is the distance from the earth to the moon	now => @com.bing.web_search param:query:String = " the distance from the earth to the moon " => notify
R9793201-0	what 's the weather like right now ?	now => @org.thingpedia.weather.current => notify	now => @org.thingpedia.weather.current param:location:Location = location:current_location => notify
R9805476-0	remind me to take my medicines every morning at TIME_0	attimer time = TIME_0 => @org.thingpedia.builtin.thingengine.builtin.say param:message:String = " take my medicines "
R13651090-0	show me a picture of a lion	now => @com.bing.image_search param:query:String = " lion " => notify
R13722307-0	when the new york times has an article about china , translate the headline to chinese , then email it to my friend	( monitor ( ( @com.nytimes.get_front_page ) filter param:title:String =~ " china " ) ) => ( @com.yandex.translate.translate ) on param:text:String = param:title:String => @com.gmail.send_email on param:message:String = param:translated_text:String
R13722309-0	when i post to twitter , copy the post to facebook	monitor ( @com.twitter.my_tweets ) => @com.facebook.post on param:status:String = param:text:String
R15252553-0	retweet everything from rioferdy5	monitor ( ( @com.twitter.home_timeline ) filter param:author:Entity(tt:username) == " rioferdy5 " ^^tt:username ) => @com.twitter.retweet on param:tweet_id:Entity(com.twitter:id) = param:tweet_id:Entity(com.twitter:id)	monitor ( ( @com.twitter.search ) filter param:author:Entity(tt:username) == " rioferdy5 " ^^tt:username ) => @com.twitter.retweet on param:tweet_id:Entity(com.twitter:id) = param:tweet_id:Entity(com.twitter:id)
R15252554-0	retweet everything with hashtag kendallschmidtisperfect	monitor ( ( @com.twitter.search ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " kendallschmidtisperfect " ^^tt:hashtag ) => @com.twitter.retweet on param:tweet_id:Entity(com.twitter:id) = param:tweet_id:Entity(com.twitter:id)	monitor ( ( @com.twitter.home_timeline ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " kendallschmidtisperfect " ^^tt:hashtag ) => @com.twitter.retweet on param:tweet_id:Entity(com.twitter:id) = param:tweet_id:Entity(com.twitter:id)
R15252555-0	every time someones tweets with moddytmo , retweet it	monitor ( ( @com.twitter.search ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " moddytmo " ^^tt:hashtag ) => @com.twitter.retweet on param:tweet_id:Entity(com.twitter:id) = param:tweet_id:Entity(com.twitter:id)	monitor ( ( @com.twitter.home_timeline ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " moddytmo " ^^tt:hashtag ) => @com.twitter.retweet on param:tweet_id:Entity(com.twitter:id) = param:tweet_id:Entity(com.twitter:id)
R16013770-0	search images about trump	now => @com.bing.image_search param:query:String = " trump " => notify
R16013771-0	dogs	now => @uk.co.thedogapi.get => notify
R16013779-0	who is harry potter	now => @com.bing.web_search param:query:String = " harry potter " => notify
R16085076-0	search for a koala picture	now => @com.bing.image_search param:query:String = " koala " => notify
R16085080-0	translate turtle to chinese	now => @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " chinese " ^^tt:iso_lang_code param:text:String = " turtle " => notify
R16085081-0	translate my emails to italian	now => ( @com.gmail.inbox ) join ( @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " italian " ^^tt:iso_lang_code ) on param:text:String = param:subject:String => notify
R16100077-0	post hello on twitter	now => @com.twitter.post param:status:String = " hello "
R16107542-0	watch a video	now => @com.youtube.search_videos => notify
R16174397-0	whats the time in LOCATION_0	now => @org.thingpedia.builtin.thingengine.builtin.get_time => notify
120465	post i 'm happy on twitter	now => @com.twitter.post param:status:String = " i 'm happy "
120469	notify me if i receive an email with label school	monitor ( ( @com.gmail.inbox ) filter param:labels:Array(String) contains " school " ) on new param:email_id:Entity(com.gmail:email_id) => notify
120477	search unicorn frappuccino calories on bing	now => @com.bing.web_search param:query:String = " unicorn frappuccino calories " => notify
120485	post on twitter saying her gift and smiled then	now => @com.twitter.post param:status:String = " her gift and smiled then "
120497	list folder my documents with size greater than NUMBER_0 mb	now => ( @com.dropbox.list_folder param:folder_name:Entity(tt:path_name) = " my documents " ) filter param:file_size:Measure(byte) >= NUMBER_0 unit:MB => notify
120512	ls root	now => @com.dropbox.list_folder param:folder_name:Entity(tt:path_name) = " root " => notify
120537	search for target on bing	now => @com.bing.web_search param:query:String = " target " => notify
120539	notify me when event begins containing immunized	edge ( monitor ( ( @org.thingpedia.icalendar.list_events ) filter param:summary:String =~ " immunized " ) ) on param:status:Enum(scheduled,upcoming,started,ended) == enum:started => notify
120545	send a message saying if your sick pay is not included in your gross income , you may not deduct it .	now => @org.thingpedia.builtin.thingengine.phone.send_sms param:message:String = " if your sick pay is not included in your gross income , you may not deduct it . "
120550	notify me if i receive an email from EMAIL_ADDRESS_0 where subject contains late notice	monitor ( ( @com.gmail.inbox ) filter param:sender_address:Entity(tt:email_address) == EMAIL_ADDRESS_0 and param:subject:String =~ " late notice " ) on new param:email_id:Entity(com.gmail:email_id) => notify
120581	tweet praises exhibit	now => @com.twitter.post param:status:String = " praises exhibit "
120598	search kia on youtube	now => @com.youtube.search_videos param:query:String = " kia " => notify
120609	list folder phone pictures with size greater than NUMBER_0 kb	now => ( @com.dropbox.list_folder param:folder_name:Entity(tt:path_name) = " phone pictures " ) filter param:file_size:Measure(byte) >= NUMBER_0 unit:KB => notify
120611	search chris cornell	now => @com.bing.web_search param:query:String = " chris cornell " => notify
120615	post on twitter such that he a college	now => @com.twitter.post param:status:String = " such that he a college "
120629	send a dm on twitter to fergie saying reserve activities	now => @com.twitter.send_direct_message param:message:String = " reserve activities " param:to:Entity(tt:username) = " fergie " ^^tt:username
120642	search videos matching autozone	now => @com.youtube.search_videos param:query:String = " autozone " => notify
120652	bing fidget spinner	now => @com.bing.web_search param:query:String = " fidget spinner " => notify
120684	post tweet the scoop	now => @com.twitter.post param:status:String = " the scoop "
120703	translate teardrop to chinese	now => @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " chinese " ^^tt:iso_lang_code param:text:String = " teardrop " => notify
120747	list events containing filmsetting	now => ( @org.thingpedia.icalendar.list_events ) filter param:summary:String =~ " filmsetting " => notify
120764	post silver chicken fencing on facebook	now => @com.facebook.post param:status:String = " silver chicken fencing "
120768	list videos matching danielle bregoli	now => @com.youtube.search_videos param:query:String = " danielle bregoli " => notify
120783	notify me if i receive an email with subject contains department of geology	monitor ( ( @com.gmail.inbox ) filter param:subject:String =~ " department of geology " ) on new param:email_id:Entity(com.gmail:email_id) => notify
120785	notify me if i receive an email on gmail from EMAIL_ADDRESS_0 where subject contains new payment received	monitor ( ( @com.gmail.inbox ) filter param:sender_address:Entity(tt:email_address) == EMAIL_ADDRESS_0 and param:subject:String =~ " new payment received " ) on new param:email_id:Entity(com.gmail:email_id) => notify
120809	notify me if i receive an important email on gmail from EMAIL_ADDRESS_0 with label please review	monitor ( ( @com.gmail.inbox param:is_important:Boolean = true ) filter param:labels:Array(String) contains " please review " and param:sender_address:Entity(tt:email_address) == EMAIL_ADDRESS_0 ) on new param:email_id:Entity(com.gmail:email_id) => notify
120829	show popup saying water up to 130	now => @org.thingpedia.builtin.thingengine.builtin.say param:message:String = " water up to 130 "
120840	monitor tweets with text contains inodes	monitor ( ( @com.twitter.home_timeline ) filter param:text:String =~ " inodes " ) => notify	monitor ( ( @com.twitter.search ) filter param:text:String =~ " inodes " ) => notify
120855	search channels matching buick	now => @com.youtube.search_channel param:query:String = " buick " => notify
120877	search yodeling walmart kid pictures	now => @com.bing.image_search param:query:String = " yodeling walmart kid " => notify
120895	translate the human is	now => @com.yandex.translate.translate param:text:String = " the human is " => notify
120900	notify me if i receive an email where subject contains meeting today	monitor ( ( @com.gmail.inbox ) filter param:subject:String =~ " meeting today " ) on new param:email_id:Entity(com.gmail:email_id) => notify
121016	if i receive an email on gmail then reply to it saying accelerated personal conflagration	monitor ( @com.gmail.inbox ) on new param:email_id:Entity(com.gmail:email_id) => @com.gmail.reply param:subject:String = " accelerated personal conflagration " on param:email_id:Entity(com.gmail:email_id) = param:email_id:Entity(com.gmail:email_id)
121045	tweet the new work if the thermostat says more than NUMBER_0 c	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) >= NUMBER_0 unit:C => @com.twitter.post param:status:String = " the new work "
121075	tweet girls if the temperature is less than NUMBER_0 f	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) <= NUMBER_0 unit:F => @com.twitter.post param:status:String = " girls "	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) <= NUMBER_0 unit:F => @com.twitter.post param:status:String = " girls "	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) <= NUMBER_0 unit:F => @com.twitter.post param:status:String = " girls "
121080	tweet pretty hot in here if the temperature is more than NUMBER_0 f	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) >= NUMBER_0 unit:F => @com.twitter.post param:status:String = " pretty hot in here "	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:F => @com.twitter.post param:status:String = " pretty hot in here "	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:F => @com.twitter.post param:status:String = " pretty hot in here "
121081	post on facebook global warming if the temperature is more than NUMBER_0 f	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) >= NUMBER_0 unit:F => @com.facebook.post param:status:String = " global warming "	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:F => @com.facebook.post param:status:String = " global warming "	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:F => @com.facebook.post param:status:String = " global warming "
121082	post on tumblr dude is hot if the temperature is more than NUMBER_0 f	edge ( monitor ( @thermostat.get_temperature ) ) on param:value:Measure(C) >= NUMBER_0 unit:F => @com.tumblr.blog.post_text param:title:String = " dude is hot "	edge ( monitor ( @org.thingpedia.weather.current ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:F => @com.tumblr.blog.post_text param:title:String = " dude is hot "	edge ( monitor ( @org.thingpedia.weather.current param:location:Location = location:current_location ) ) on param:temperature:Measure(C) >= NUMBER_0 unit:F => @com.tumblr.blog.post_text param:title:String = " dude is hot "
121093	if it 's TIME_0 in the morning then post on twitter saying morning my dudes	attimer time = TIME_0 => @com.twitter.post param:status:String = " morning my dudes "
121095	if it 's TIME_0 then post on twitter saying it is that time of the day	attimer time = TIME_0 => @com.twitter.post param:status:String = " it is that time of the day "
121100	if someone tweets with hashtag beyonceimpersonation then tweet yass queen	monitor ( ( @com.twitter.home_timeline ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " beyonceimpersonation " ^^tt:hashtag ) => @com.twitter.post param:status:String = " yass queen "	monitor ( ( @com.twitter.search ) filter param:hashtags:Array(Entity(tt:hashtag)) contains " beyonceimpersonation " ^^tt:hashtag ) => @com.twitter.post param:status:String = " yass queen "
121149	notify me if someone commits to github and the message contains fixed nasty bug	monitor ( ( @com.github.get_commit ) filter param:message:String =~ " fixed nasty bug " ) => notify
121150	if someone commits to github and the message contains bug fix then flash the lights	monitor ( ( @com.github.get_commit ) filter param:message:String =~ " bug fix " ) => @light-bulb.alert_long
121153	notify me if someone tweets containing make america great again	monitor ( ( @com.twitter.home_timeline ) filter param:text:String =~ " make america great again " ) => notify	monitor ( ( @com.twitter.search ) filter param:text:String =~ " make america great again " ) => notify
121155	send message on slack saying meeting today	now => @com.slack.send param:message:String = " meeting today "
121209	hey almond can you please search for french bulldog on bing	now => @com.bing.web_search param:query:String = " french bulldog " => notify
121219	search videos matching zuckerberg hearing on youtube	now => @com.youtube.search_videos param:query:String = " zuckerberg hearing " => notify
121260	every day at TIME_0 post every day i 'm shuffling on twitter	attimer time = TIME_0 => @com.twitter.post param:status:String = " every day i 'm shuffling "
121264	list folder work	now => @com.dropbox.list_folder param:folder_name:Entity(tt:path_name) = " work " => notify
121271	notify me if i receive an email on gmail with label payments	monitor ( ( @com.gmail.inbox ) filter param:labels:Array(String) contains " payments " ) on new param:email_id:Entity(com.gmail:email_id) => notify
121321	tweet on twitter a new release of almond is out	now => @com.twitter.post param:status:String = " a new release of almond is out "
121347	every day at TIME_0 send a text to PHONE_NUMBER_0 saying i will be late for lunch	attimer time = TIME_0 => @org.thingpedia.builtin.thingengine.phone.send_sms param:message:String = " i will be late for lunch " param:to:Entity(tt:phone_number) = PHONE_NUMBER_0
121358	notify me if i receive an email on gmail where subject contains upcoming events	monitor ( ( @com.gmail.inbox ) filter param:subject:String =~ " upcoming events " ) on new param:email_id:Entity(com.gmail:email_id) => notify
121361	hey almond can you please search baby driver images on bing	now => @com.bing.image_search param:query:String = " baby driver " => notify
121373	list files in dropbox in phone pictures	now => @com.dropbox.list_folder param:folder_name:Entity(tt:path_name) = " phone pictures " => notify
121420	notify me if i receive an important email on gmail where subject contains job application	monitor ( ( @com.gmail.inbox param:is_important:Boolean = true ) filter param:subject:String =~ " job application " ) on new param:email_id:Entity(com.gmail:email_id) => notify
121439	list files in my old stuff bigger than NUMBER_0 mb	now => ( @com.dropbox.list_folder param:folder_name:Entity(tt:path_name) = " my old stuff " ) filter param:file_size:Measure(byte) >= NUMBER_0 unit:MB => notify
121440	send sms containing sorry	now => @org.thingpedia.builtin.thingengine.phone.send_sms param:message:String = " sorry "
121507	say i love you	now => @org.thingpedia.builtin.thingengine.builtin.say param:message:String = " i love you "
121512	flash the lights if i receive an sms that contains you have won	monitor ( ( @org.thingpedia.builtin.thingengine.phone.sms ) filter param:message:String =~ " you have won " ) => @light-bulb.alert_long
121515	if i receive a dm on twitter then reply to it saying sorry i am busy today	monitor ( @com.twitter.direct_messages ) => @com.twitter.send_direct_message param:message:String = " sorry i am busy today " on param:to:Entity(tt:username) = param:sender:Entity(tt:username)
121590	notify me when i got a gmail with subject bills	monitor ( ( @com.gmail.inbox ) filter param:subject:String =~ " bills " ) on new param:email_id:Entity(com.gmail:email_id) => notify
121592	notify me when i got a gmail with subject contains invoice	monitor ( ( @com.gmail.inbox ) filter param:subject:String =~ " invoice " ) on new param:email_id:Entity(com.gmail:email_id) => notify
121593	notify me if i get a gmail with subject containing w-2	monitor ( ( @com.gmail.inbox ) filter param:subject:String =~ " w-2 " ) on new param:email_id:Entity(com.gmail:email_id) => notify
122787	every day at TIME_0 search gucci gang pictures	( attimer time = TIME_0 ) => ( @com.bing.image_search param:query:String = " gucci gang " ) => notify
122801	notify me if i receive an email on gmail where the subject contains bank statement	monitor ( ( @com.gmail.inbox ) filter param:subject:String =~ " bank statement " ) on new param:email_id:Entity(com.gmail:email_id) => notify
122862	receive a gmail where the subject contains bank statement	monitor ( ( @com.gmail.inbox ) filter param:subject:String =~ " bank statement " ) on new param:email_id:Entity(com.gmail:email_id) => notify
122912	say good morning on slack	now => @com.slack.send param:message:String = " good morning "
123072	turn off my security camera when i receive an omlet message saying turn off camera	monitor ( ( @me.omlet.chat.messages param:from_me:Boolean = false ) filter param:message:String =~ " turn off camera " ) => @security-camera.set_power param:power:Enum(on,off) = enum:off
123073	turn on my security camera when i receive an omlet message saying turn on camera	monitor ( ( @me.omlet.chat.messages param:from_me:Boolean = false ) filter param:message:String =~ " turn on camera " ) => @security-camera.set_power param:power:Enum(on,off) = enum:on
128287	get latest gmail with label social	now => ( @com.gmail.inbox ) filter param:labels:Array(String) contains " social " => notify
128821	get latest email with label travel	now => ( @com.gmail.inbox ) filter param:labels:Array(String) contains " travel " => notify
129621	monitor washington post with title contains nancy pelosi	monitor ( ( @com.washingtonpost.get_article ) filter param:title:String =~ " nancy pelosi " ) => notify
129622	monitor washington post in section sports with title contains alexandria ocasio cortez	monitor ( ( @com.washingtonpost.get_article param:section:Enum(politics,opinions,local,sports,national,world,business,lifestyle) = enum:sports ) filter param:title:String =~ " alexandria ocasio cortez " ) => notify
131449	send a text to PHONE_NUMBER_0 telling him i miss you	now => @org.thingpedia.builtin.thingengine.phone.send_sms param:message:String = " i miss you " param:to:Entity(tt:phone_number) = PHONE_NUMBER_0
131801	play saturday night live from youtube on my tv	now => @com.youtube.search_videos param:query:String = " saturday night live " => @com.lg.tv.webos2.play_url on param:url:Entity(tt:url) = param:video_url:Entity(tt:url)
135858	send puppies images to slack coworkers	now => @com.bing.image_search param:query:String = " puppies " => @com.slack.send_picture param:channel:Entity(tt:hashtag) = " coworkers " ^^tt:hashtag on param:picture_url:Entity(tt:picture) = param:picture_url:Entity(tt:picture)
135909	if i receive or send music command on omlet play something on my bluetooth speaker	monitor ( ( @me.omlet.chat.messages ) filter param:message:String =~ " music command " ) => @org.thingpedia.bluetooth.speaker.a2dp.play_music
135921	if the capital weather gang has an article with title hurricane incoming share the link on linkedin	monitor ( ( @com.washingtonpost.get_blog_post param:section:Enum(the_fix,politics,powerpost,fact_checker,world_views,compost,the_plum_line,post_partisan,post_everything,right_turn,capital_weather_gang,morning_mix,wonkblog) = enum:capital_weather_gang ) filter param:title:String =~ " hurricane incoming " ) => @com.linkedin.share on param:status:String = param:link:Entity(tt:url)
1441574	search bing trump hanoi meeting	now => @com.bing.web_search param:query:String = " trump hanoi meeting " => notify
1441575	search youtube video adele hello	now => @com.youtube.search_videos param:query:String = " adele hello " => notify
1448819	search presidential debate on youtube then play it on my tv	now => @com.youtube.search_videos param:query:String = " presidential debate " => @com.lg.tv.webos2.play_url on param:url:Entity(tt:url) = param:video_url:Entity(tt:url)
1448820	search youtube videos matching live fireworks 2019 then play video url on your lg webos tv	now => @com.youtube.search_videos param:query:String = " live fireworks 2019 " => @com.lg.tv.webos2.play_url on param:url:Entity(tt:url) = param:video_url:Entity(tt:url)
1468962	search images matching windows screenshot on bing	now => @com.bing.image_search param:query:String = " windows screenshot " => notify
1470537	search youtube video that matching lady gaga shallow	now => @com.youtube.search_videos param:query:String = " lady gaga shallow " => notify
1470539	search youtube channel name peppa pig	now => @com.youtube.search_channel param:query:String = " peppa pig " => notify
1472693	when it 's TIME_0 tweet time for bed	attimer time = TIME_0 => @com.twitter.post param:status:String = " time for bed "
1477685	search facebook logo pictures on bing	now => @com.bing.image_search param:query:String = " facebook logo " => notify
1479492	detect language of il cane morde il gatto	now => @com.yandex.translate.detect_language param:text:String = " il cane morde il gatto " => notify
1479493	detect the language of la rana salta	now => @com.yandex.translate.detect_language param:text:String = " la rana salta " => notify
1511117	see all the files in my pictures folder in dropbox	now => @com.dropbox.list_folder param:folder_name:Entity(tt:path_name) = " pictures " => notify
1511309	search kim jong un on twitter	now => ( @com.twitter.search ) filter param:text:String =~ " kim jong un " => notify
1511375	search meltdown on twitter .	now => ( @com.twitter.search ) filter param:text:String =~ " meltdown " => notify
1515840	play crazy frog videos from youtube on my tv	now => @com.youtube.search_videos param:query:String = " crazy frog " => @com.lg.tv.webos2.play_url on param:url:Entity(tt:url) = param:video_url:Entity(tt:url)
1520951	translate thank you for meeting me today to japanese and send the result via sms	now => @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " japanese " ^^tt:iso_lang_code param:text:String = " thank you for meeting me today " => @org.thingpedia.builtin.thingengine.phone.send_sms on param:message:String = param:translated_text:String
1520959	translate i will see you next week to french and send an email containing the translated text	now => @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " french " ^^tt:iso_lang_code param:text:String = " i will see you next week " => @com.gmail.send_email on param:message:String = param:translated_text:String
1520961	translate please reply immediately to spanish and send an email to EMAIL_ADDRESS_0 containing the translated text	now => @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " spanish " ^^tt:iso_lang_code param:text:String = " please reply immediately " => @com.gmail.send_email param:to:Entity(tt:email_address) = EMAIL_ADDRESS_0 on param:message:String = param:translated_text:String
1597920	post delete your account in twitter	now => @com.twitter.post param:status:String = " delete your account "
1642568	get my emails about your credit card bill is due	now => ( @com.gmail.inbox ) filter param:subject:String =~ " your credit card bill is due " => notify
1650792	search tax form w-2 and then translate it to spanish	now => ( @com.bing.web_search param:query:String = " tax form w-2 " ) join ( @com.yandex.translate.translate param:target_language:Entity(tt:iso_lang_code) = " spanish " ^^tt:iso_lang_code ) on param:text:String = event => notify
1659094	show me new york times articles that have trump is wrong in the title	now => ( @com.nytimes.get_front_page ) filter param:title:String =~ " trump is wrong " => notify
1545576	search facebook on bing	now => @com.bing.web_search param:query:String = " facebook " => notify
